

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 20 06:03:42 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     9                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    12                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	dataBIGRAM,global,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	psect	text54,local,class=CODE,merge=1,delta=2
    80                           	psect	text55,local,class=CODE,merge=1,delta=2
    81                           	psect	text56,local,class=CODE,merge=1,delta=2
    82                           	psect	text57,local,class=CODE,merge=1,delta=2
    83                           	psect	text58,local,class=CODE,merge=1,delta=2
    84                           	psect	text59,local,class=CODE,merge=1,delta=2
    85                           	psect	text60,local,class=CODE,merge=1,delta=2
    86                           	psect	text61,local,class=CODE,merge=1,delta=2
    87                           	psect	text62,local,class=CODE,merge=1,delta=2
    88                           	psect	text63,local,class=CODE,merge=1,delta=2
    89                           	psect	text64,local,class=CODE,merge=1,delta=2
    90                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text68,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text72,local,class=CODE,merge=1,delta=2
    98                           	psect	text73,local,class=CODE,merge=1,delta=2
    99                           	psect	text74,local,class=CODE,merge=1,delta=2
   100                           	psect	text75,local,class=CODE,merge=1,delta=2
   101                           	psect	text76,local,class=CODE,merge=1,delta=2
   102                           	psect	text77,local,class=CODE,merge=1,delta=2
   103                           	psect	text78,local,class=CODE,merge=1,delta=2
   104                           	psect	text79,local,class=CODE,merge=1,delta=2
   105                           	psect	text80,local,class=CODE,merge=1,delta=2
   106                           	psect	text81,local,class=CODE,merge=1,delta=2
   107                           	psect	text82,local,class=CODE,merge=1,delta=2
   108                           	psect	text83,local,class=CODE,merge=1,delta=2
   109                           	psect	text84,local,class=CODE,merge=1,delta=2
   110                           	psect	text85,local,class=CODE,merge=1,delta=2
   111                           	psect	text86,local,class=CODE,merge=1,delta=2
   112                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text90,local,class=CODE,merge=1,delta=2
   116                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   118                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   119                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   120                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   121                           	dabs	1,0x620,48
   122                           	dabs	1,0x5A0,80
   123                           	dabs	1,0x520,80
   124                           	dabs	1,0x4E2,14
   125                           	dabs	1,0x4A0,66
   126                           	dabs	1,0x420,80
   127                           	dabs	1,0x3A0,80
   128                           	dabs	1,0x35A,22
   129                           	dabs	1,0x221A,0,_aic32config_page
   130                           	dabs	1,0x2312,0,_cc8531_init_data
   131                           	dabs	1,0x7E,2
   132     0000                     
   133                           ; Generated 19/07/2022 GMT
   134                           ; 
   135                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution. Publication is not required when
   149                           ;        this file is used in an embedded application.
   150                           ; 
   151                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   152                           ;        software without specific prior written permission.
   153                           ; 
   154                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   155                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   156                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   157                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   158                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   159                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   160                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   161                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   162                           ; 
   163                           ; 
   164                           ; Code-generator required, PIC16F18855 Definitions
   165                           ; 
   166                           ; SFR Addresses
   167     0000                     	;# 
   168     0001                     	;# 
   169     0002                     	;# 
   170     0003                     	;# 
   171     0004                     	;# 
   172     0005                     	;# 
   173     0006                     	;# 
   174     0007                     	;# 
   175     0008                     	;# 
   176     0009                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     0010                     	;# 
   183     0011                     	;# 
   184     0012                     	;# 
   185     0013                     	;# 
   186     0016                     	;# 
   187     0017                     	;# 
   188     0018                     	;# 
   189     001C                     	;# 
   190     001C                     	;# 
   191     001D                     	;# 
   192     001D                     	;# 
   193     001E                     	;# 
   194     001F                     	;# 
   195     008C                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008E                     	;# 
   200     008F                     	;# 
   201     0090                     	;# 
   202     0090                     	;# 
   203     0091                     	;# 
   204     0093                     	;# 
   205     0094                     	;# 
   206     0095                     	;# 
   207     0096                     	;# 
   208     0097                     	;# 
   209     0098                     	;# 
   210     0099                     	;# 
   211     009A                     	;# 
   212     009B                     	;# 
   213     009C                     	;# 
   214     009D                     	;# 
   215     009E                     	;# 
   216     010C                     	;# 
   217     010D                     	;# 
   218     010E                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0110                     	;# 
   222     0110                     	;# 
   223     0111                     	;# 
   224     0112                     	;# 
   225     0112                     	;# 
   226     0113                     	;# 
   227     0114                     	;# 
   228     0114                     	;# 
   229     0115                     	;# 
   230     0116                     	;# 
   231     0116                     	;# 
   232     0117                     	;# 
   233     0119                     	;# 
   234     0119                     	;# 
   235     0119                     	;# 
   236     011A                     	;# 
   237     011A                     	;# 
   238     011A                     	;# 
   239     011B                     	;# 
   240     011B                     	;# 
   241     011B                     	;# 
   242     011B                     	;# 
   243     011B                     	;# 
   244     011C                     	;# 
   245     011C                     	;# 
   246     011C                     	;# 
   247     011D                     	;# 
   248     011D                     	;# 
   249     011D                     	;# 
   250     011E                     	;# 
   251     011E                     	;# 
   252     011E                     	;# 
   253     011F                     	;# 
   254     011F                     	;# 
   255     011F                     	;# 
   256     011F                     	;# 
   257     011F                     	;# 
   258     018C                     	;# 
   259     018D                     	;# 
   260     018E                     	;# 
   261     018F                     	;# 
   262     0190                     	;# 
   263     0191                     	;# 
   264     0192                     	;# 
   265     0196                     	;# 
   266     0197                     	;# 
   267     0198                     	;# 
   268     0199                     	;# 
   269     019A                     	;# 
   270     019B                     	;# 
   271     019C                     	;# 
   272     020C                     	;# 
   273     020C                     	;# 
   274     020D                     	;# 
   275     020E                     	;# 
   276     020F                     	;# 
   277     020F                     	;# 
   278     0210                     	;# 
   279     0210                     	;# 
   280     0211                     	;# 
   281     0211                     	;# 
   282     0212                     	;# 
   283     0212                     	;# 
   284     0213                     	;# 
   285     0214                     	;# 
   286     0215                     	;# 
   287     0215                     	;# 
   288     0216                     	;# 
   289     0216                     	;# 
   290     0217                     	;# 
   291     0217                     	;# 
   292     0218                     	;# 
   293     0218                     	;# 
   294     0219                     	;# 
   295     021A                     	;# 
   296     021B                     	;# 
   297     021B                     	;# 
   298     021C                     	;# 
   299     021C                     	;# 
   300     021D                     	;# 
   301     021D                     	;# 
   302     021E                     	;# 
   303     021F                     	;# 
   304     028C                     	;# 
   305     028C                     	;# 
   306     028D                     	;# 
   307     028D                     	;# 
   308     028E                     	;# 
   309     028F                     	;# 
   310     0290                     	;# 
   311     0290                     	;# 
   312     0291                     	;# 
   313     0292                     	;# 
   314     0292                     	;# 
   315     0293                     	;# 
   316     0293                     	;# 
   317     0294                     	;# 
   318     0295                     	;# 
   319     0296                     	;# 
   320     0296                     	;# 
   321     0297                     	;# 
   322     0298                     	;# 
   323     0298                     	;# 
   324     0299                     	;# 
   325     0299                     	;# 
   326     029A                     	;# 
   327     029B                     	;# 
   328     029C                     	;# 
   329     029C                     	;# 
   330     029D                     	;# 
   331     030C                     	;# 
   332     030C                     	;# 
   333     030D                     	;# 
   334     030E                     	;# 
   335     030F                     	;# 
   336     0310                     	;# 
   337     0310                     	;# 
   338     0311                     	;# 
   339     0312                     	;# 
   340     0313                     	;# 
   341     0314                     	;# 
   342     0314                     	;# 
   343     0315                     	;# 
   344     0316                     	;# 
   345     0317                     	;# 
   346     0318                     	;# 
   347     0318                     	;# 
   348     0319                     	;# 
   349     031A                     	;# 
   350     031B                     	;# 
   351     031C                     	;# 
   352     031C                     	;# 
   353     031D                     	;# 
   354     031E                     	;# 
   355     031F                     	;# 
   356     038C                     	;# 
   357     038C                     	;# 
   358     038D                     	;# 
   359     038E                     	;# 
   360     0390                     	;# 
   361     0390                     	;# 
   362     0391                     	;# 
   363     0392                     	;# 
   364     040C                     	;# 
   365     040D                     	;# 
   366     040E                     	;# 
   367     040F                     	;# 
   368     0410                     	;# 
   369     0411                     	;# 
   370     0416                     	;# 
   371     0416                     	;# 
   372     0417                     	;# 
   373     0418                     	;# 
   374     0418                     	;# 
   375     0419                     	;# 
   376     041A                     	;# 
   377     041A                     	;# 
   378     041B                     	;# 
   379     041C                     	;# 
   380     041C                     	;# 
   381     041D                     	;# 
   382     041E                     	;# 
   383     041F                     	;# 
   384     048C                     	;# 
   385     048C                     	;# 
   386     048D                     	;# 
   387     048E                     	;# 
   388     048F                     	;# 
   389     048F                     	;# 
   390     0490                     	;# 
   391     0491                     	;# 
   392     0492                     	;# 
   393     0492                     	;# 
   394     0493                     	;# 
   395     0494                     	;# 
   396     0495                     	;# 
   397     0495                     	;# 
   398     0496                     	;# 
   399     0497                     	;# 
   400     0498                     	;# 
   401     0499                     	;# 
   402     049A                     	;# 
   403     049B                     	;# 
   404     049C                     	;# 
   405     049D                     	;# 
   406     050C                     	;# 
   407     050C                     	;# 
   408     050D                     	;# 
   409     050E                     	;# 
   410     050F                     	;# 
   411     050F                     	;# 
   412     0510                     	;# 
   413     0511                     	;# 
   414     0512                     	;# 
   415     0512                     	;# 
   416     0513                     	;# 
   417     0514                     	;# 
   418     0515                     	;# 
   419     0515                     	;# 
   420     0516                     	;# 
   421     0517                     	;# 
   422     0518                     	;# 
   423     0519                     	;# 
   424     051A                     	;# 
   425     051B                     	;# 
   426     051C                     	;# 
   427     051D                     	;# 
   428     058C                     	;# 
   429     058C                     	;# 
   430     058D                     	;# 
   431     058E                     	;# 
   432     058F                     	;# 
   433     058F                     	;# 
   434     0590                     	;# 
   435     0591                     	;# 
   436     0592                     	;# 
   437     0593                     	;# 
   438     060C                     	;# 
   439     060D                     	;# 
   440     060E                     	;# 
   441     060F                     	;# 
   442     0610                     	;# 
   443     0611                     	;# 
   444     0612                     	;# 
   445     0613                     	;# 
   446     0614                     	;# 
   447     0616                     	;# 
   448     0617                     	;# 
   449     0618                     	;# 
   450     0619                     	;# 
   451     061A                     	;# 
   452     061B                     	;# 
   453     061C                     	;# 
   454     061D                     	;# 
   455     061E                     	;# 
   456     068C                     	;# 
   457     068D                     	;# 
   458     068E                     	;# 
   459     068F                     	;# 
   460     0690                     	;# 
   461     0691                     	;# 
   462     0692                     	;# 
   463     0693                     	;# 
   464     0694                     	;# 
   465     070C                     	;# 
   466     070D                     	;# 
   467     070E                     	;# 
   468     070F                     	;# 
   469     0710                     	;# 
   470     0711                     	;# 
   471     0712                     	;# 
   472     0713                     	;# 
   473     0714                     	;# 
   474     0716                     	;# 
   475     0717                     	;# 
   476     0718                     	;# 
   477     0719                     	;# 
   478     071A                     	;# 
   479     071B                     	;# 
   480     071C                     	;# 
   481     071D                     	;# 
   482     071E                     	;# 
   483     0796                     	;# 
   484     0797                     	;# 
   485     0798                     	;# 
   486     0799                     	;# 
   487     079A                     	;# 
   488     079B                     	;# 
   489     080C                     	;# 
   490     080D                     	;# 
   491     080E                     	;# 
   492     080F                     	;# 
   493     0810                     	;# 
   494     0811                     	;# 
   495     0812                     	;# 
   496     0813                     	;# 
   497     0814                     	;# 
   498     081A                     	;# 
   499     081B                     	;# 
   500     081C                     	;# 
   501     081D                     	;# 
   502     081E                     	;# 
   503     081F                     	;# 
   504     088C                     	;# 
   505     088D                     	;# 
   506     088E                     	;# 
   507     088F                     	;# 
   508     0890                     	;# 
   509     0891                     	;# 
   510     0892                     	;# 
   511     0893                     	;# 
   512     0895                     	;# 
   513     0896                     	;# 
   514     0897                     	;# 
   515     0898                     	;# 
   516     0899                     	;# 
   517     089A                     	;# 
   518     089B                     	;# 
   519     090C                     	;# 
   520     090E                     	;# 
   521     090F                     	;# 
   522     091F                     	;# 
   523     091F                     	;# 
   524     098F                     	;# 
   525     098F                     	;# 
   526     0990                     	;# 
   527     0991                     	;# 
   528     0992                     	;# 
   529     0993                     	;# 
   530     0994                     	;# 
   531     0995                     	;# 
   532     0996                     	;# 
   533     0997                     	;# 
   534     0E0F                     	;# 
   535     0E10                     	;# 
   536     0E11                     	;# 
   537     0E12                     	;# 
   538     0E13                     	;# 
   539     0E14                     	;# 
   540     0E15                     	;# 
   541     0E16                     	;# 
   542     0E17                     	;# 
   543     0E18                     	;# 
   544     0E19                     	;# 
   545     0E1A                     	;# 
   546     0E1B                     	;# 
   547     0E1C                     	;# 
   548     0E1D                     	;# 
   549     0E1E                     	;# 
   550     0E1F                     	;# 
   551     0E20                     	;# 
   552     0E21                     	;# 
   553     0E22                     	;# 
   554     0E23                     	;# 
   555     0E24                     	;# 
   556     0E25                     	;# 
   557     0E26                     	;# 
   558     0E27                     	;# 
   559     0E28                     	;# 
   560     0E29                     	;# 
   561     0E2A                     	;# 
   562     0E2B                     	;# 
   563     0E2C                     	;# 
   564     0E2D                     	;# 
   565     0E2E                     	;# 
   566     0E2F                     	;# 
   567     0E30                     	;# 
   568     0E31                     	;# 
   569     0E32                     	;# 
   570     0E33                     	;# 
   571     0E34                     	;# 
   572     0E35                     	;# 
   573     0E36                     	;# 
   574     0E37                     	;# 
   575     0E8F                     	;# 
   576     0E90                     	;# 
   577     0E91                     	;# 
   578     0E92                     	;# 
   579     0E93                     	;# 
   580     0E94                     	;# 
   581     0E95                     	;# 
   582     0E96                     	;# 
   583     0E97                     	;# 
   584     0E9C                     	;# 
   585     0E9D                     	;# 
   586     0E9E                     	;# 
   587     0EA1                     	;# 
   588     0EA2                     	;# 
   589     0EA3                     	;# 
   590     0EA4                     	;# 
   591     0EA5                     	;# 
   592     0EA9                     	;# 
   593     0EAA                     	;# 
   594     0EAB                     	;# 
   595     0EAC                     	;# 
   596     0EB1                     	;# 
   597     0EB2                     	;# 
   598     0EB3                     	;# 
   599     0EB8                     	;# 
   600     0EB9                     	;# 
   601     0EBA                     	;# 
   602     0EBB                     	;# 
   603     0EBC                     	;# 
   604     0EBD                     	;# 
   605     0EBE                     	;# 
   606     0EC3                     	;# 
   607     0EC5                     	;# 
   608     0EC6                     	;# 
   609     0EC7                     	;# 
   610     0EC8                     	;# 
   611     0EC9                     	;# 
   612     0ECA                     	;# 
   613     0ECB                     	;# 
   614     0ECC                     	;# 
   615     0F10                     	;# 
   616     0F11                     	;# 
   617     0F12                     	;# 
   618     0F13                     	;# 
   619     0F14                     	;# 
   620     0F15                     	;# 
   621     0F16                     	;# 
   622     0F17                     	;# 
   623     0F18                     	;# 
   624     0F19                     	;# 
   625     0F1A                     	;# 
   626     0F1B                     	;# 
   627     0F1C                     	;# 
   628     0F1D                     	;# 
   629     0F1E                     	;# 
   630     0F1F                     	;# 
   631     0F20                     	;# 
   632     0F21                     	;# 
   633     0F22                     	;# 
   634     0F23                     	;# 
   635     0F24                     	;# 
   636     0F25                     	;# 
   637     0F26                     	;# 
   638     0F27                     	;# 
   639     0F38                     	;# 
   640     0F39                     	;# 
   641     0F3A                     	;# 
   642     0F3B                     	;# 
   643     0F3C                     	;# 
   644     0F3D                     	;# 
   645     0F3E                     	;# 
   646     0F3F                     	;# 
   647     0F40                     	;# 
   648     0F41                     	;# 
   649     0F43                     	;# 
   650     0F44                     	;# 
   651     0F45                     	;# 
   652     0F46                     	;# 
   653     0F47                     	;# 
   654     0F48                     	;# 
   655     0F49                     	;# 
   656     0F4A                     	;# 
   657     0F4B                     	;# 
   658     0F4C                     	;# 
   659     0F4E                     	;# 
   660     0F4F                     	;# 
   661     0F50                     	;# 
   662     0F51                     	;# 
   663     0F52                     	;# 
   664     0F53                     	;# 
   665     0F54                     	;# 
   666     0F55                     	;# 
   667     0F56                     	;# 
   668     0F57                     	;# 
   669     0F65                     	;# 
   670     0F68                     	;# 
   671     0F69                     	;# 
   672     0F6A                     	;# 
   673     0F6B                     	;# 
   674     0FE4                     	;# 
   675     0FE5                     	;# 
   676     0FE6                     	;# 
   677     0FE7                     	;# 
   678     0FE8                     	;# 
   679     0FE9                     	;# 
   680     0FEA                     	;# 
   681     0FEB                     	;# 
   682     0FED                     	;# 
   683     0FEE                     	;# 
   684     0FEF                     	;# 
   685     0000                     	;# 
   686     0001                     	;# 
   687     0002                     	;# 
   688     0003                     	;# 
   689     0004                     	;# 
   690     0005                     	;# 
   691     0006                     	;# 
   692     0007                     	;# 
   693     0008                     	;# 
   694     0009                     	;# 
   695     000A                     	;# 
   696     000B                     	;# 
   697     000C                     	;# 
   698     000D                     	;# 
   699     000E                     	;# 
   700     0010                     	;# 
   701     0011                     	;# 
   702     0012                     	;# 
   703     0013                     	;# 
   704     0016                     	;# 
   705     0017                     	;# 
   706     0018                     	;# 
   707     001C                     	;# 
   708     001C                     	;# 
   709     001D                     	;# 
   710     001D                     	;# 
   711     001E                     	;# 
   712     001F                     	;# 
   713     008C                     	;# 
   714     008C                     	;# 
   715     008D                     	;# 
   716     008E                     	;# 
   717     008E                     	;# 
   718     008F                     	;# 
   719     0090                     	;# 
   720     0090                     	;# 
   721     0091                     	;# 
   722     0093                     	;# 
   723     0094                     	;# 
   724     0095                     	;# 
   725     0096                     	;# 
   726     0097                     	;# 
   727     0098                     	;# 
   728     0099                     	;# 
   729     009A                     	;# 
   730     009B                     	;# 
   731     009C                     	;# 
   732     009D                     	;# 
   733     009E                     	;# 
   734     010C                     	;# 
   735     010D                     	;# 
   736     010E                     	;# 
   737     010E                     	;# 
   738     010F                     	;# 
   739     0110                     	;# 
   740     0110                     	;# 
   741     0111                     	;# 
   742     0112                     	;# 
   743     0112                     	;# 
   744     0113                     	;# 
   745     0114                     	;# 
   746     0114                     	;# 
   747     0115                     	;# 
   748     0116                     	;# 
   749     0116                     	;# 
   750     0117                     	;# 
   751     0119                     	;# 
   752     0119                     	;# 
   753     0119                     	;# 
   754     011A                     	;# 
   755     011A                     	;# 
   756     011A                     	;# 
   757     011B                     	;# 
   758     011B                     	;# 
   759     011B                     	;# 
   760     011B                     	;# 
   761     011B                     	;# 
   762     011C                     	;# 
   763     011C                     	;# 
   764     011C                     	;# 
   765     011D                     	;# 
   766     011D                     	;# 
   767     011D                     	;# 
   768     011E                     	;# 
   769     011E                     	;# 
   770     011E                     	;# 
   771     011F                     	;# 
   772     011F                     	;# 
   773     011F                     	;# 
   774     011F                     	;# 
   775     011F                     	;# 
   776     018C                     	;# 
   777     018D                     	;# 
   778     018E                     	;# 
   779     018F                     	;# 
   780     0190                     	;# 
   781     0191                     	;# 
   782     0192                     	;# 
   783     0196                     	;# 
   784     0197                     	;# 
   785     0198                     	;# 
   786     0199                     	;# 
   787     019A                     	;# 
   788     019B                     	;# 
   789     019C                     	;# 
   790     020C                     	;# 
   791     020C                     	;# 
   792     020D                     	;# 
   793     020E                     	;# 
   794     020F                     	;# 
   795     020F                     	;# 
   796     0210                     	;# 
   797     0210                     	;# 
   798     0211                     	;# 
   799     0211                     	;# 
   800     0212                     	;# 
   801     0212                     	;# 
   802     0213                     	;# 
   803     0214                     	;# 
   804     0215                     	;# 
   805     0215                     	;# 
   806     0216                     	;# 
   807     0216                     	;# 
   808     0217                     	;# 
   809     0217                     	;# 
   810     0218                     	;# 
   811     0218                     	;# 
   812     0219                     	;# 
   813     021A                     	;# 
   814     021B                     	;# 
   815     021B                     	;# 
   816     021C                     	;# 
   817     021C                     	;# 
   818     021D                     	;# 
   819     021D                     	;# 
   820     021E                     	;# 
   821     021F                     	;# 
   822     028C                     	;# 
   823     028C                     	;# 
   824     028D                     	;# 
   825     028D                     	;# 
   826     028E                     	;# 
   827     028F                     	;# 
   828     0290                     	;# 
   829     0290                     	;# 
   830     0291                     	;# 
   831     0292                     	;# 
   832     0292                     	;# 
   833     0293                     	;# 
   834     0293                     	;# 
   835     0294                     	;# 
   836     0295                     	;# 
   837     0296                     	;# 
   838     0296                     	;# 
   839     0297                     	;# 
   840     0298                     	;# 
   841     0298                     	;# 
   842     0299                     	;# 
   843     0299                     	;# 
   844     029A                     	;# 
   845     029B                     	;# 
   846     029C                     	;# 
   847     029C                     	;# 
   848     029D                     	;# 
   849     030C                     	;# 
   850     030C                     	;# 
   851     030D                     	;# 
   852     030E                     	;# 
   853     030F                     	;# 
   854     0310                     	;# 
   855     0310                     	;# 
   856     0311                     	;# 
   857     0312                     	;# 
   858     0313                     	;# 
   859     0314                     	;# 
   860     0314                     	;# 
   861     0315                     	;# 
   862     0316                     	;# 
   863     0317                     	;# 
   864     0318                     	;# 
   865     0318                     	;# 
   866     0319                     	;# 
   867     031A                     	;# 
   868     031B                     	;# 
   869     031C                     	;# 
   870     031C                     	;# 
   871     031D                     	;# 
   872     031E                     	;# 
   873     031F                     	;# 
   874     038C                     	;# 
   875     038C                     	;# 
   876     038D                     	;# 
   877     038E                     	;# 
   878     0390                     	;# 
   879     0390                     	;# 
   880     0391                     	;# 
   881     0392                     	;# 
   882     040C                     	;# 
   883     040D                     	;# 
   884     040E                     	;# 
   885     040F                     	;# 
   886     0410                     	;# 
   887     0411                     	;# 
   888     0416                     	;# 
   889     0416                     	;# 
   890     0417                     	;# 
   891     0418                     	;# 
   892     0418                     	;# 
   893     0419                     	;# 
   894     041A                     	;# 
   895     041A                     	;# 
   896     041B                     	;# 
   897     041C                     	;# 
   898     041C                     	;# 
   899     041D                     	;# 
   900     041E                     	;# 
   901     041F                     	;# 
   902     048C                     	;# 
   903     048C                     	;# 
   904     048D                     	;# 
   905     048E                     	;# 
   906     048F                     	;# 
   907     048F                     	;# 
   908     0490                     	;# 
   909     0491                     	;# 
   910     0492                     	;# 
   911     0492                     	;# 
   912     0493                     	;# 
   913     0494                     	;# 
   914     0495                     	;# 
   915     0495                     	;# 
   916     0496                     	;# 
   917     0497                     	;# 
   918     0498                     	;# 
   919     0499                     	;# 
   920     049A                     	;# 
   921     049B                     	;# 
   922     049C                     	;# 
   923     049D                     	;# 
   924     050C                     	;# 
   925     050C                     	;# 
   926     050D                     	;# 
   927     050E                     	;# 
   928     050F                     	;# 
   929     050F                     	;# 
   930     0510                     	;# 
   931     0511                     	;# 
   932     0512                     	;# 
   933     0512                     	;# 
   934     0513                     	;# 
   935     0514                     	;# 
   936     0515                     	;# 
   937     0515                     	;# 
   938     0516                     	;# 
   939     0517                     	;# 
   940     0518                     	;# 
   941     0519                     	;# 
   942     051A                     	;# 
   943     051B                     	;# 
   944     051C                     	;# 
   945     051D                     	;# 
   946     058C                     	;# 
   947     058C                     	;# 
   948     058D                     	;# 
   949     058E                     	;# 
   950     058F                     	;# 
   951     058F                     	;# 
   952     0590                     	;# 
   953     0591                     	;# 
   954     0592                     	;# 
   955     0593                     	;# 
   956     060C                     	;# 
   957     060D                     	;# 
   958     060E                     	;# 
   959     060F                     	;# 
   960     0610                     	;# 
   961     0611                     	;# 
   962     0612                     	;# 
   963     0613                     	;# 
   964     0614                     	;# 
   965     0616                     	;# 
   966     0617                     	;# 
   967     0618                     	;# 
   968     0619                     	;# 
   969     061A                     	;# 
   970     061B                     	;# 
   971     061C                     	;# 
   972     061D                     	;# 
   973     061E                     	;# 
   974     068C                     	;# 
   975     068D                     	;# 
   976     068E                     	;# 
   977     068F                     	;# 
   978     0690                     	;# 
   979     0691                     	;# 
   980     0692                     	;# 
   981     0693                     	;# 
   982     0694                     	;# 
   983     070C                     	;# 
   984     070D                     	;# 
   985     070E                     	;# 
   986     070F                     	;# 
   987     0710                     	;# 
   988     0711                     	;# 
   989     0712                     	;# 
   990     0713                     	;# 
   991     0714                     	;# 
   992     0716                     	;# 
   993     0717                     	;# 
   994     0718                     	;# 
   995     0719                     	;# 
   996     071A                     	;# 
   997     071B                     	;# 
   998     071C                     	;# 
   999     071D                     	;# 
  1000     071E                     	;# 
  1001     0796                     	;# 
  1002     0797                     	;# 
  1003     0798                     	;# 
  1004     0799                     	;# 
  1005     079A                     	;# 
  1006     079B                     	;# 
  1007     080C                     	;# 
  1008     080D                     	;# 
  1009     080E                     	;# 
  1010     080F                     	;# 
  1011     0810                     	;# 
  1012     0811                     	;# 
  1013     0812                     	;# 
  1014     0813                     	;# 
  1015     0814                     	;# 
  1016     081A                     	;# 
  1017     081B                     	;# 
  1018     081C                     	;# 
  1019     081D                     	;# 
  1020     081E                     	;# 
  1021     081F                     	;# 
  1022     088C                     	;# 
  1023     088D                     	;# 
  1024     088E                     	;# 
  1025     088F                     	;# 
  1026     0890                     	;# 
  1027     0891                     	;# 
  1028     0892                     	;# 
  1029     0893                     	;# 
  1030     0895                     	;# 
  1031     0896                     	;# 
  1032     0897                     	;# 
  1033     0898                     	;# 
  1034     0899                     	;# 
  1035     089A                     	;# 
  1036     089B                     	;# 
  1037     090C                     	;# 
  1038     090E                     	;# 
  1039     090F                     	;# 
  1040     091F                     	;# 
  1041     091F                     	;# 
  1042     098F                     	;# 
  1043     098F                     	;# 
  1044     0990                     	;# 
  1045     0991                     	;# 
  1046     0992                     	;# 
  1047     0993                     	;# 
  1048     0994                     	;# 
  1049     0995                     	;# 
  1050     0996                     	;# 
  1051     0997                     	;# 
  1052     0E0F                     	;# 
  1053     0E10                     	;# 
  1054     0E11                     	;# 
  1055     0E12                     	;# 
  1056     0E13                     	;# 
  1057     0E14                     	;# 
  1058     0E15                     	;# 
  1059     0E16                     	;# 
  1060     0E17                     	;# 
  1061     0E18                     	;# 
  1062     0E19                     	;# 
  1063     0E1A                     	;# 
  1064     0E1B                     	;# 
  1065     0E1C                     	;# 
  1066     0E1D                     	;# 
  1067     0E1E                     	;# 
  1068     0E1F                     	;# 
  1069     0E20                     	;# 
  1070     0E21                     	;# 
  1071     0E22                     	;# 
  1072     0E23                     	;# 
  1073     0E24                     	;# 
  1074     0E25                     	;# 
  1075     0E26                     	;# 
  1076     0E27                     	;# 
  1077     0E28                     	;# 
  1078     0E29                     	;# 
  1079     0E2A                     	;# 
  1080     0E2B                     	;# 
  1081     0E2C                     	;# 
  1082     0E2D                     	;# 
  1083     0E2E                     	;# 
  1084     0E2F                     	;# 
  1085     0E30                     	;# 
  1086     0E31                     	;# 
  1087     0E32                     	;# 
  1088     0E33                     	;# 
  1089     0E34                     	;# 
  1090     0E35                     	;# 
  1091     0E36                     	;# 
  1092     0E37                     	;# 
  1093     0E8F                     	;# 
  1094     0E90                     	;# 
  1095     0E91                     	;# 
  1096     0E92                     	;# 
  1097     0E93                     	;# 
  1098     0E94                     	;# 
  1099     0E95                     	;# 
  1100     0E96                     	;# 
  1101     0E97                     	;# 
  1102     0E9C                     	;# 
  1103     0E9D                     	;# 
  1104     0E9E                     	;# 
  1105     0EA1                     	;# 
  1106     0EA2                     	;# 
  1107     0EA3                     	;# 
  1108     0EA4                     	;# 
  1109     0EA5                     	;# 
  1110     0EA9                     	;# 
  1111     0EAA                     	;# 
  1112     0EAB                     	;# 
  1113     0EAC                     	;# 
  1114     0EB1                     	;# 
  1115     0EB2                     	;# 
  1116     0EB3                     	;# 
  1117     0EB8                     	;# 
  1118     0EB9                     	;# 
  1119     0EBA                     	;# 
  1120     0EBB                     	;# 
  1121     0EBC                     	;# 
  1122     0EBD                     	;# 
  1123     0EBE                     	;# 
  1124     0EC3                     	;# 
  1125     0EC5                     	;# 
  1126     0EC6                     	;# 
  1127     0EC7                     	;# 
  1128     0EC8                     	;# 
  1129     0EC9                     	;# 
  1130     0ECA                     	;# 
  1131     0ECB                     	;# 
  1132     0ECC                     	;# 
  1133     0F10                     	;# 
  1134     0F11                     	;# 
  1135     0F12                     	;# 
  1136     0F13                     	;# 
  1137     0F14                     	;# 
  1138     0F15                     	;# 
  1139     0F16                     	;# 
  1140     0F17                     	;# 
  1141     0F18                     	;# 
  1142     0F19                     	;# 
  1143     0F1A                     	;# 
  1144     0F1B                     	;# 
  1145     0F1C                     	;# 
  1146     0F1D                     	;# 
  1147     0F1E                     	;# 
  1148     0F1F                     	;# 
  1149     0F20                     	;# 
  1150     0F21                     	;# 
  1151     0F22                     	;# 
  1152     0F23                     	;# 
  1153     0F24                     	;# 
  1154     0F25                     	;# 
  1155     0F26                     	;# 
  1156     0F27                     	;# 
  1157     0F38                     	;# 
  1158     0F39                     	;# 
  1159     0F3A                     	;# 
  1160     0F3B                     	;# 
  1161     0F3C                     	;# 
  1162     0F3D                     	;# 
  1163     0F3E                     	;# 
  1164     0F3F                     	;# 
  1165     0F40                     	;# 
  1166     0F41                     	;# 
  1167     0F43                     	;# 
  1168     0F44                     	;# 
  1169     0F45                     	;# 
  1170     0F46                     	;# 
  1171     0F47                     	;# 
  1172     0F48                     	;# 
  1173     0F49                     	;# 
  1174     0F4A                     	;# 
  1175     0F4B                     	;# 
  1176     0F4C                     	;# 
  1177     0F4E                     	;# 
  1178     0F4F                     	;# 
  1179     0F50                     	;# 
  1180     0F51                     	;# 
  1181     0F52                     	;# 
  1182     0F53                     	;# 
  1183     0F54                     	;# 
  1184     0F55                     	;# 
  1185     0F56                     	;# 
  1186     0F57                     	;# 
  1187     0F65                     	;# 
  1188     0F68                     	;# 
  1189     0F69                     	;# 
  1190     0F6A                     	;# 
  1191     0F6B                     	;# 
  1192     0FE4                     	;# 
  1193     0FE5                     	;# 
  1194     0FE6                     	;# 
  1195     0FE7                     	;# 
  1196     0FE8                     	;# 
  1197     0FE9                     	;# 
  1198     0FEA                     	;# 
  1199     0FEB                     	;# 
  1200     0FED                     	;# 
  1201     0FEE                     	;# 
  1202     0FEF                     	;# 
  1203     0000                     	;# 
  1204     0001                     	;# 
  1205     0002                     	;# 
  1206     0003                     	;# 
  1207     0004                     	;# 
  1208     0005                     	;# 
  1209     0006                     	;# 
  1210     0007                     	;# 
  1211     0008                     	;# 
  1212     0009                     	;# 
  1213     000A                     	;# 
  1214     000B                     	;# 
  1215     000C                     	;# 
  1216     000D                     	;# 
  1217     000E                     	;# 
  1218     0010                     	;# 
  1219     0011                     	;# 
  1220     0012                     	;# 
  1221     0013                     	;# 
  1222     0016                     	;# 
  1223     0017                     	;# 
  1224     0018                     	;# 
  1225     001C                     	;# 
  1226     001C                     	;# 
  1227     001D                     	;# 
  1228     001D                     	;# 
  1229     001E                     	;# 
  1230     001F                     	;# 
  1231     008C                     	;# 
  1232     008C                     	;# 
  1233     008D                     	;# 
  1234     008E                     	;# 
  1235     008E                     	;# 
  1236     008F                     	;# 
  1237     0090                     	;# 
  1238     0090                     	;# 
  1239     0091                     	;# 
  1240     0093                     	;# 
  1241     0094                     	;# 
  1242     0095                     	;# 
  1243     0096                     	;# 
  1244     0097                     	;# 
  1245     0098                     	;# 
  1246     0099                     	;# 
  1247     009A                     	;# 
  1248     009B                     	;# 
  1249     009C                     	;# 
  1250     009D                     	;# 
  1251     009E                     	;# 
  1252     010C                     	;# 
  1253     010D                     	;# 
  1254     010E                     	;# 
  1255     010E                     	;# 
  1256     010F                     	;# 
  1257     0110                     	;# 
  1258     0110                     	;# 
  1259     0111                     	;# 
  1260     0112                     	;# 
  1261     0112                     	;# 
  1262     0113                     	;# 
  1263     0114                     	;# 
  1264     0114                     	;# 
  1265     0115                     	;# 
  1266     0116                     	;# 
  1267     0116                     	;# 
  1268     0117                     	;# 
  1269     0119                     	;# 
  1270     0119                     	;# 
  1271     0119                     	;# 
  1272     011A                     	;# 
  1273     011A                     	;# 
  1274     011A                     	;# 
  1275     011B                     	;# 
  1276     011B                     	;# 
  1277     011B                     	;# 
  1278     011B                     	;# 
  1279     011B                     	;# 
  1280     011C                     	;# 
  1281     011C                     	;# 
  1282     011C                     	;# 
  1283     011D                     	;# 
  1284     011D                     	;# 
  1285     011D                     	;# 
  1286     011E                     	;# 
  1287     011E                     	;# 
  1288     011E                     	;# 
  1289     011F                     	;# 
  1290     011F                     	;# 
  1291     011F                     	;# 
  1292     011F                     	;# 
  1293     011F                     	;# 
  1294     018C                     	;# 
  1295     018D                     	;# 
  1296     018E                     	;# 
  1297     018F                     	;# 
  1298     0190                     	;# 
  1299     0191                     	;# 
  1300     0192                     	;# 
  1301     0196                     	;# 
  1302     0197                     	;# 
  1303     0198                     	;# 
  1304     0199                     	;# 
  1305     019A                     	;# 
  1306     019B                     	;# 
  1307     019C                     	;# 
  1308     020C                     	;# 
  1309     020C                     	;# 
  1310     020D                     	;# 
  1311     020E                     	;# 
  1312     020F                     	;# 
  1313     020F                     	;# 
  1314     0210                     	;# 
  1315     0210                     	;# 
  1316     0211                     	;# 
  1317     0211                     	;# 
  1318     0212                     	;# 
  1319     0212                     	;# 
  1320     0213                     	;# 
  1321     0214                     	;# 
  1322     0215                     	;# 
  1323     0215                     	;# 
  1324     0216                     	;# 
  1325     0216                     	;# 
  1326     0217                     	;# 
  1327     0217                     	;# 
  1328     0218                     	;# 
  1329     0218                     	;# 
  1330     0219                     	;# 
  1331     021A                     	;# 
  1332     021B                     	;# 
  1333     021B                     	;# 
  1334     021C                     	;# 
  1335     021C                     	;# 
  1336     021D                     	;# 
  1337     021D                     	;# 
  1338     021E                     	;# 
  1339     021F                     	;# 
  1340     028C                     	;# 
  1341     028C                     	;# 
  1342     028D                     	;# 
  1343     028D                     	;# 
  1344     028E                     	;# 
  1345     028F                     	;# 
  1346     0290                     	;# 
  1347     0290                     	;# 
  1348     0291                     	;# 
  1349     0292                     	;# 
  1350     0292                     	;# 
  1351     0293                     	;# 
  1352     0293                     	;# 
  1353     0294                     	;# 
  1354     0295                     	;# 
  1355     0296                     	;# 
  1356     0296                     	;# 
  1357     0297                     	;# 
  1358     0298                     	;# 
  1359     0298                     	;# 
  1360     0299                     	;# 
  1361     0299                     	;# 
  1362     029A                     	;# 
  1363     029B                     	;# 
  1364     029C                     	;# 
  1365     029C                     	;# 
  1366     029D                     	;# 
  1367     030C                     	;# 
  1368     030C                     	;# 
  1369     030D                     	;# 
  1370     030E                     	;# 
  1371     030F                     	;# 
  1372     0310                     	;# 
  1373     0310                     	;# 
  1374     0311                     	;# 
  1375     0312                     	;# 
  1376     0313                     	;# 
  1377     0314                     	;# 
  1378     0314                     	;# 
  1379     0315                     	;# 
  1380     0316                     	;# 
  1381     0317                     	;# 
  1382     0318                     	;# 
  1383     0318                     	;# 
  1384     0319                     	;# 
  1385     031A                     	;# 
  1386     031B                     	;# 
  1387     031C                     	;# 
  1388     031C                     	;# 
  1389     031D                     	;# 
  1390     031E                     	;# 
  1391     031F                     	;# 
  1392     038C                     	;# 
  1393     038C                     	;# 
  1394     038D                     	;# 
  1395     038E                     	;# 
  1396     0390                     	;# 
  1397     0390                     	;# 
  1398     0391                     	;# 
  1399     0392                     	;# 
  1400     040C                     	;# 
  1401     040D                     	;# 
  1402     040E                     	;# 
  1403     040F                     	;# 
  1404     0410                     	;# 
  1405     0411                     	;# 
  1406     0416                     	;# 
  1407     0416                     	;# 
  1408     0417                     	;# 
  1409     0418                     	;# 
  1410     0418                     	;# 
  1411     0419                     	;# 
  1412     041A                     	;# 
  1413     041A                     	;# 
  1414     041B                     	;# 
  1415     041C                     	;# 
  1416     041C                     	;# 
  1417     041D                     	;# 
  1418     041E                     	;# 
  1419     041F                     	;# 
  1420     048C                     	;# 
  1421     048C                     	;# 
  1422     048D                     	;# 
  1423     048E                     	;# 
  1424     048F                     	;# 
  1425     048F                     	;# 
  1426     0490                     	;# 
  1427     0491                     	;# 
  1428     0492                     	;# 
  1429     0492                     	;# 
  1430     0493                     	;# 
  1431     0494                     	;# 
  1432     0495                     	;# 
  1433     0495                     	;# 
  1434     0496                     	;# 
  1435     0497                     	;# 
  1436     0498                     	;# 
  1437     0499                     	;# 
  1438     049A                     	;# 
  1439     049B                     	;# 
  1440     049C                     	;# 
  1441     049D                     	;# 
  1442     050C                     	;# 
  1443     050C                     	;# 
  1444     050D                     	;# 
  1445     050E                     	;# 
  1446     050F                     	;# 
  1447     050F                     	;# 
  1448     0510                     	;# 
  1449     0511                     	;# 
  1450     0512                     	;# 
  1451     0512                     	;# 
  1452     0513                     	;# 
  1453     0514                     	;# 
  1454     0515                     	;# 
  1455     0515                     	;# 
  1456     0516                     	;# 
  1457     0517                     	;# 
  1458     0518                     	;# 
  1459     0519                     	;# 
  1460     051A                     	;# 
  1461     051B                     	;# 
  1462     051C                     	;# 
  1463     051D                     	;# 
  1464     058C                     	;# 
  1465     058C                     	;# 
  1466     058D                     	;# 
  1467     058E                     	;# 
  1468     058F                     	;# 
  1469     058F                     	;# 
  1470     0590                     	;# 
  1471     0591                     	;# 
  1472     0592                     	;# 
  1473     0593                     	;# 
  1474     060C                     	;# 
  1475     060D                     	;# 
  1476     060E                     	;# 
  1477     060F                     	;# 
  1478     0610                     	;# 
  1479     0611                     	;# 
  1480     0612                     	;# 
  1481     0613                     	;# 
  1482     0614                     	;# 
  1483     0616                     	;# 
  1484     0617                     	;# 
  1485     0618                     	;# 
  1486     0619                     	;# 
  1487     061A                     	;# 
  1488     061B                     	;# 
  1489     061C                     	;# 
  1490     061D                     	;# 
  1491     061E                     	;# 
  1492     068C                     	;# 
  1493     068D                     	;# 
  1494     068E                     	;# 
  1495     068F                     	;# 
  1496     0690                     	;# 
  1497     0691                     	;# 
  1498     0692                     	;# 
  1499     0693                     	;# 
  1500     0694                     	;# 
  1501     070C                     	;# 
  1502     070D                     	;# 
  1503     070E                     	;# 
  1504     070F                     	;# 
  1505     0710                     	;# 
  1506     0711                     	;# 
  1507     0712                     	;# 
  1508     0713                     	;# 
  1509     0714                     	;# 
  1510     0716                     	;# 
  1511     0717                     	;# 
  1512     0718                     	;# 
  1513     0719                     	;# 
  1514     071A                     	;# 
  1515     071B                     	;# 
  1516     071C                     	;# 
  1517     071D                     	;# 
  1518     071E                     	;# 
  1519     0796                     	;# 
  1520     0797                     	;# 
  1521     0798                     	;# 
  1522     0799                     	;# 
  1523     079A                     	;# 
  1524     079B                     	;# 
  1525     080C                     	;# 
  1526     080D                     	;# 
  1527     080E                     	;# 
  1528     080F                     	;# 
  1529     0810                     	;# 
  1530     0811                     	;# 
  1531     0812                     	;# 
  1532     0813                     	;# 
  1533     0814                     	;# 
  1534     081A                     	;# 
  1535     081B                     	;# 
  1536     081C                     	;# 
  1537     081D                     	;# 
  1538     081E                     	;# 
  1539     081F                     	;# 
  1540     088C                     	;# 
  1541     088D                     	;# 
  1542     088E                     	;# 
  1543     088F                     	;# 
  1544     0890                     	;# 
  1545     0891                     	;# 
  1546     0892                     	;# 
  1547     0893                     	;# 
  1548     0895                     	;# 
  1549     0896                     	;# 
  1550     0897                     	;# 
  1551     0898                     	;# 
  1552     0899                     	;# 
  1553     089A                     	;# 
  1554     089B                     	;# 
  1555     090C                     	;# 
  1556     090E                     	;# 
  1557     090F                     	;# 
  1558     091F                     	;# 
  1559     091F                     	;# 
  1560     098F                     	;# 
  1561     098F                     	;# 
  1562     0990                     	;# 
  1563     0991                     	;# 
  1564     0992                     	;# 
  1565     0993                     	;# 
  1566     0994                     	;# 
  1567     0995                     	;# 
  1568     0996                     	;# 
  1569     0997                     	;# 
  1570     0E0F                     	;# 
  1571     0E10                     	;# 
  1572     0E11                     	;# 
  1573     0E12                     	;# 
  1574     0E13                     	;# 
  1575     0E14                     	;# 
  1576     0E15                     	;# 
  1577     0E16                     	;# 
  1578     0E17                     	;# 
  1579     0E18                     	;# 
  1580     0E19                     	;# 
  1581     0E1A                     	;# 
  1582     0E1B                     	;# 
  1583     0E1C                     	;# 
  1584     0E1D                     	;# 
  1585     0E1E                     	;# 
  1586     0E1F                     	;# 
  1587     0E20                     	;# 
  1588     0E21                     	;# 
  1589     0E22                     	;# 
  1590     0E23                     	;# 
  1591     0E24                     	;# 
  1592     0E25                     	;# 
  1593     0E26                     	;# 
  1594     0E27                     	;# 
  1595     0E28                     	;# 
  1596     0E29                     	;# 
  1597     0E2A                     	;# 
  1598     0E2B                     	;# 
  1599     0E2C                     	;# 
  1600     0E2D                     	;# 
  1601     0E2E                     	;# 
  1602     0E2F                     	;# 
  1603     0E30                     	;# 
  1604     0E31                     	;# 
  1605     0E32                     	;# 
  1606     0E33                     	;# 
  1607     0E34                     	;# 
  1608     0E35                     	;# 
  1609     0E36                     	;# 
  1610     0E37                     	;# 
  1611     0E8F                     	;# 
  1612     0E90                     	;# 
  1613     0E91                     	;# 
  1614     0E92                     	;# 
  1615     0E93                     	;# 
  1616     0E94                     	;# 
  1617     0E95                     	;# 
  1618     0E96                     	;# 
  1619     0E97                     	;# 
  1620     0E9C                     	;# 
  1621     0E9D                     	;# 
  1622     0E9E                     	;# 
  1623     0EA1                     	;# 
  1624     0EA2                     	;# 
  1625     0EA3                     	;# 
  1626     0EA4                     	;# 
  1627     0EA5                     	;# 
  1628     0EA9                     	;# 
  1629     0EAA                     	;# 
  1630     0EAB                     	;# 
  1631     0EAC                     	;# 
  1632     0EB1                     	;# 
  1633     0EB2                     	;# 
  1634     0EB3                     	;# 
  1635     0EB8                     	;# 
  1636     0EB9                     	;# 
  1637     0EBA                     	;# 
  1638     0EBB                     	;# 
  1639     0EBC                     	;# 
  1640     0EBD                     	;# 
  1641     0EBE                     	;# 
  1642     0EC3                     	;# 
  1643     0EC5                     	;# 
  1644     0EC6                     	;# 
  1645     0EC7                     	;# 
  1646     0EC8                     	;# 
  1647     0EC9                     	;# 
  1648     0ECA                     	;# 
  1649     0ECB                     	;# 
  1650     0ECC                     	;# 
  1651     0F10                     	;# 
  1652     0F11                     	;# 
  1653     0F12                     	;# 
  1654     0F13                     	;# 
  1655     0F14                     	;# 
  1656     0F15                     	;# 
  1657     0F16                     	;# 
  1658     0F17                     	;# 
  1659     0F18                     	;# 
  1660     0F19                     	;# 
  1661     0F1A                     	;# 
  1662     0F1B                     	;# 
  1663     0F1C                     	;# 
  1664     0F1D                     	;# 
  1665     0F1E                     	;# 
  1666     0F1F                     	;# 
  1667     0F20                     	;# 
  1668     0F21                     	;# 
  1669     0F22                     	;# 
  1670     0F23                     	;# 
  1671     0F24                     	;# 
  1672     0F25                     	;# 
  1673     0F26                     	;# 
  1674     0F27                     	;# 
  1675     0F38                     	;# 
  1676     0F39                     	;# 
  1677     0F3A                     	;# 
  1678     0F3B                     	;# 
  1679     0F3C                     	;# 
  1680     0F3D                     	;# 
  1681     0F3E                     	;# 
  1682     0F3F                     	;# 
  1683     0F40                     	;# 
  1684     0F41                     	;# 
  1685     0F43                     	;# 
  1686     0F44                     	;# 
  1687     0F45                     	;# 
  1688     0F46                     	;# 
  1689     0F47                     	;# 
  1690     0F48                     	;# 
  1691     0F49                     	;# 
  1692     0F4A                     	;# 
  1693     0F4B                     	;# 
  1694     0F4C                     	;# 
  1695     0F4E                     	;# 
  1696     0F4F                     	;# 
  1697     0F50                     	;# 
  1698     0F51                     	;# 
  1699     0F52                     	;# 
  1700     0F53                     	;# 
  1701     0F54                     	;# 
  1702     0F55                     	;# 
  1703     0F56                     	;# 
  1704     0F57                     	;# 
  1705     0F65                     	;# 
  1706     0F68                     	;# 
  1707     0F69                     	;# 
  1708     0F6A                     	;# 
  1709     0F6B                     	;# 
  1710     0FE4                     	;# 
  1711     0FE5                     	;# 
  1712     0FE6                     	;# 
  1713     0FE7                     	;# 
  1714     0FE8                     	;# 
  1715     0FE9                     	;# 
  1716     0FEA                     	;# 
  1717     0FEB                     	;# 
  1718     0FED                     	;# 
  1719     0FEE                     	;# 
  1720     0FEF                     	;# 
  1721     0000                     	;# 
  1722     0001                     	;# 
  1723     0002                     	;# 
  1724     0003                     	;# 
  1725     0004                     	;# 
  1726     0005                     	;# 
  1727     0006                     	;# 
  1728     0007                     	;# 
  1729     0008                     	;# 
  1730     0009                     	;# 
  1731     000A                     	;# 
  1732     000B                     	;# 
  1733     000C                     	;# 
  1734     000D                     	;# 
  1735     000E                     	;# 
  1736     0010                     	;# 
  1737     0011                     	;# 
  1738     0012                     	;# 
  1739     0013                     	;# 
  1740     0016                     	;# 
  1741     0017                     	;# 
  1742     0018                     	;# 
  1743     001C                     	;# 
  1744     001C                     	;# 
  1745     001D                     	;# 
  1746     001D                     	;# 
  1747     001E                     	;# 
  1748     001F                     	;# 
  1749     008C                     	;# 
  1750     008C                     	;# 
  1751     008D                     	;# 
  1752     008E                     	;# 
  1753     008E                     	;# 
  1754     008F                     	;# 
  1755     0090                     	;# 
  1756     0090                     	;# 
  1757     0091                     	;# 
  1758     0093                     	;# 
  1759     0094                     	;# 
  1760     0095                     	;# 
  1761     0096                     	;# 
  1762     0097                     	;# 
  1763     0098                     	;# 
  1764     0099                     	;# 
  1765     009A                     	;# 
  1766     009B                     	;# 
  1767     009C                     	;# 
  1768     009D                     	;# 
  1769     009E                     	;# 
  1770     010C                     	;# 
  1771     010D                     	;# 
  1772     010E                     	;# 
  1773     010E                     	;# 
  1774     010F                     	;# 
  1775     0110                     	;# 
  1776     0110                     	;# 
  1777     0111                     	;# 
  1778     0112                     	;# 
  1779     0112                     	;# 
  1780     0113                     	;# 
  1781     0114                     	;# 
  1782     0114                     	;# 
  1783     0115                     	;# 
  1784     0116                     	;# 
  1785     0116                     	;# 
  1786     0117                     	;# 
  1787     0119                     	;# 
  1788     0119                     	;# 
  1789     0119                     	;# 
  1790     011A                     	;# 
  1791     011A                     	;# 
  1792     011A                     	;# 
  1793     011B                     	;# 
  1794     011B                     	;# 
  1795     011B                     	;# 
  1796     011B                     	;# 
  1797     011B                     	;# 
  1798     011C                     	;# 
  1799     011C                     	;# 
  1800     011C                     	;# 
  1801     011D                     	;# 
  1802     011D                     	;# 
  1803     011D                     	;# 
  1804     011E                     	;# 
  1805     011E                     	;# 
  1806     011E                     	;# 
  1807     011F                     	;# 
  1808     011F                     	;# 
  1809     011F                     	;# 
  1810     011F                     	;# 
  1811     011F                     	;# 
  1812     018C                     	;# 
  1813     018D                     	;# 
  1814     018E                     	;# 
  1815     018F                     	;# 
  1816     0190                     	;# 
  1817     0191                     	;# 
  1818     0192                     	;# 
  1819     0196                     	;# 
  1820     0197                     	;# 
  1821     0198                     	;# 
  1822     0199                     	;# 
  1823     019A                     	;# 
  1824     019B                     	;# 
  1825     019C                     	;# 
  1826     020C                     	;# 
  1827     020C                     	;# 
  1828     020D                     	;# 
  1829     020E                     	;# 
  1830     020F                     	;# 
  1831     020F                     	;# 
  1832     0210                     	;# 
  1833     0210                     	;# 
  1834     0211                     	;# 
  1835     0211                     	;# 
  1836     0212                     	;# 
  1837     0212                     	;# 
  1838     0213                     	;# 
  1839     0214                     	;# 
  1840     0215                     	;# 
  1841     0215                     	;# 
  1842     0216                     	;# 
  1843     0216                     	;# 
  1844     0217                     	;# 
  1845     0217                     	;# 
  1846     0218                     	;# 
  1847     0218                     	;# 
  1848     0219                     	;# 
  1849     021A                     	;# 
  1850     021B                     	;# 
  1851     021B                     	;# 
  1852     021C                     	;# 
  1853     021C                     	;# 
  1854     021D                     	;# 
  1855     021D                     	;# 
  1856     021E                     	;# 
  1857     021F                     	;# 
  1858     028C                     	;# 
  1859     028C                     	;# 
  1860     028D                     	;# 
  1861     028D                     	;# 
  1862     028E                     	;# 
  1863     028F                     	;# 
  1864     0290                     	;# 
  1865     0290                     	;# 
  1866     0291                     	;# 
  1867     0292                     	;# 
  1868     0292                     	;# 
  1869     0293                     	;# 
  1870     0293                     	;# 
  1871     0294                     	;# 
  1872     0295                     	;# 
  1873     0296                     	;# 
  1874     0296                     	;# 
  1875     0297                     	;# 
  1876     0298                     	;# 
  1877     0298                     	;# 
  1878     0299                     	;# 
  1879     0299                     	;# 
  1880     029A                     	;# 
  1881     029B                     	;# 
  1882     029C                     	;# 
  1883     029C                     	;# 
  1884     029D                     	;# 
  1885     030C                     	;# 
  1886     030C                     	;# 
  1887     030D                     	;# 
  1888     030E                     	;# 
  1889     030F                     	;# 
  1890     0310                     	;# 
  1891     0310                     	;# 
  1892     0311                     	;# 
  1893     0312                     	;# 
  1894     0313                     	;# 
  1895     0314                     	;# 
  1896     0314                     	;# 
  1897     0315                     	;# 
  1898     0316                     	;# 
  1899     0317                     	;# 
  1900     0318                     	;# 
  1901     0318                     	;# 
  1902     0319                     	;# 
  1903     031A                     	;# 
  1904     031B                     	;# 
  1905     031C                     	;# 
  1906     031C                     	;# 
  1907     031D                     	;# 
  1908     031E                     	;# 
  1909     031F                     	;# 
  1910     038C                     	;# 
  1911     038C                     	;# 
  1912     038D                     	;# 
  1913     038E                     	;# 
  1914     0390                     	;# 
  1915     0390                     	;# 
  1916     0391                     	;# 
  1917     0392                     	;# 
  1918     040C                     	;# 
  1919     040D                     	;# 
  1920     040E                     	;# 
  1921     040F                     	;# 
  1922     0410                     	;# 
  1923     0411                     	;# 
  1924     0416                     	;# 
  1925     0416                     	;# 
  1926     0417                     	;# 
  1927     0418                     	;# 
  1928     0418                     	;# 
  1929     0419                     	;# 
  1930     041A                     	;# 
  1931     041A                     	;# 
  1932     041B                     	;# 
  1933     041C                     	;# 
  1934     041C                     	;# 
  1935     041D                     	;# 
  1936     041E                     	;# 
  1937     041F                     	;# 
  1938     048C                     	;# 
  1939     048C                     	;# 
  1940     048D                     	;# 
  1941     048E                     	;# 
  1942     048F                     	;# 
  1943     048F                     	;# 
  1944     0490                     	;# 
  1945     0491                     	;# 
  1946     0492                     	;# 
  1947     0492                     	;# 
  1948     0493                     	;# 
  1949     0494                     	;# 
  1950     0495                     	;# 
  1951     0495                     	;# 
  1952     0496                     	;# 
  1953     0497                     	;# 
  1954     0498                     	;# 
  1955     0499                     	;# 
  1956     049A                     	;# 
  1957     049B                     	;# 
  1958     049C                     	;# 
  1959     049D                     	;# 
  1960     050C                     	;# 
  1961     050C                     	;# 
  1962     050D                     	;# 
  1963     050E                     	;# 
  1964     050F                     	;# 
  1965     050F                     	;# 
  1966     0510                     	;# 
  1967     0511                     	;# 
  1968     0512                     	;# 
  1969     0512                     	;# 
  1970     0513                     	;# 
  1971     0514                     	;# 
  1972     0515                     	;# 
  1973     0515                     	;# 
  1974     0516                     	;# 
  1975     0517                     	;# 
  1976     0518                     	;# 
  1977     0519                     	;# 
  1978     051A                     	;# 
  1979     051B                     	;# 
  1980     051C                     	;# 
  1981     051D                     	;# 
  1982     058C                     	;# 
  1983     058C                     	;# 
  1984     058D                     	;# 
  1985     058E                     	;# 
  1986     058F                     	;# 
  1987     058F                     	;# 
  1988     0590                     	;# 
  1989     0591                     	;# 
  1990     0592                     	;# 
  1991     0593                     	;# 
  1992     060C                     	;# 
  1993     060D                     	;# 
  1994     060E                     	;# 
  1995     060F                     	;# 
  1996     0610                     	;# 
  1997     0611                     	;# 
  1998     0612                     	;# 
  1999     0613                     	;# 
  2000     0614                     	;# 
  2001     0616                     	;# 
  2002     0617                     	;# 
  2003     0618                     	;# 
  2004     0619                     	;# 
  2005     061A                     	;# 
  2006     061B                     	;# 
  2007     061C                     	;# 
  2008     061D                     	;# 
  2009     061E                     	;# 
  2010     068C                     	;# 
  2011     068D                     	;# 
  2012     068E                     	;# 
  2013     068F                     	;# 
  2014     0690                     	;# 
  2015     0691                     	;# 
  2016     0692                     	;# 
  2017     0693                     	;# 
  2018     0694                     	;# 
  2019     070C                     	;# 
  2020     070D                     	;# 
  2021     070E                     	;# 
  2022     070F                     	;# 
  2023     0710                     	;# 
  2024     0711                     	;# 
  2025     0712                     	;# 
  2026     0713                     	;# 
  2027     0714                     	;# 
  2028     0716                     	;# 
  2029     0717                     	;# 
  2030     0718                     	;# 
  2031     0719                     	;# 
  2032     071A                     	;# 
  2033     071B                     	;# 
  2034     071C                     	;# 
  2035     071D                     	;# 
  2036     071E                     	;# 
  2037     0796                     	;# 
  2038     0797                     	;# 
  2039     0798                     	;# 
  2040     0799                     	;# 
  2041     079A                     	;# 
  2042     079B                     	;# 
  2043     080C                     	;# 
  2044     080D                     	;# 
  2045     080E                     	;# 
  2046     080F                     	;# 
  2047     0810                     	;# 
  2048     0811                     	;# 
  2049     0812                     	;# 
  2050     0813                     	;# 
  2051     0814                     	;# 
  2052     081A                     	;# 
  2053     081B                     	;# 
  2054     081C                     	;# 
  2055     081D                     	;# 
  2056     081E                     	;# 
  2057     081F                     	;# 
  2058     088C                     	;# 
  2059     088D                     	;# 
  2060     088E                     	;# 
  2061     088F                     	;# 
  2062     0890                     	;# 
  2063     0891                     	;# 
  2064     0892                     	;# 
  2065     0893                     	;# 
  2066     0895                     	;# 
  2067     0896                     	;# 
  2068     0897                     	;# 
  2069     0898                     	;# 
  2070     0899                     	;# 
  2071     089A                     	;# 
  2072     089B                     	;# 
  2073     090C                     	;# 
  2074     090E                     	;# 
  2075     090F                     	;# 
  2076     091F                     	;# 
  2077     091F                     	;# 
  2078     098F                     	;# 
  2079     098F                     	;# 
  2080     0990                     	;# 
  2081     0991                     	;# 
  2082     0992                     	;# 
  2083     0993                     	;# 
  2084     0994                     	;# 
  2085     0995                     	;# 
  2086     0996                     	;# 
  2087     0997                     	;# 
  2088     0E0F                     	;# 
  2089     0E10                     	;# 
  2090     0E11                     	;# 
  2091     0E12                     	;# 
  2092     0E13                     	;# 
  2093     0E14                     	;# 
  2094     0E15                     	;# 
  2095     0E16                     	;# 
  2096     0E17                     	;# 
  2097     0E18                     	;# 
  2098     0E19                     	;# 
  2099     0E1A                     	;# 
  2100     0E1B                     	;# 
  2101     0E1C                     	;# 
  2102     0E1D                     	;# 
  2103     0E1E                     	;# 
  2104     0E1F                     	;# 
  2105     0E20                     	;# 
  2106     0E21                     	;# 
  2107     0E22                     	;# 
  2108     0E23                     	;# 
  2109     0E24                     	;# 
  2110     0E25                     	;# 
  2111     0E26                     	;# 
  2112     0E27                     	;# 
  2113     0E28                     	;# 
  2114     0E29                     	;# 
  2115     0E2A                     	;# 
  2116     0E2B                     	;# 
  2117     0E2C                     	;# 
  2118     0E2D                     	;# 
  2119     0E2E                     	;# 
  2120     0E2F                     	;# 
  2121     0E30                     	;# 
  2122     0E31                     	;# 
  2123     0E32                     	;# 
  2124     0E33                     	;# 
  2125     0E34                     	;# 
  2126     0E35                     	;# 
  2127     0E36                     	;# 
  2128     0E37                     	;# 
  2129     0E8F                     	;# 
  2130     0E90                     	;# 
  2131     0E91                     	;# 
  2132     0E92                     	;# 
  2133     0E93                     	;# 
  2134     0E94                     	;# 
  2135     0E95                     	;# 
  2136     0E96                     	;# 
  2137     0E97                     	;# 
  2138     0E9C                     	;# 
  2139     0E9D                     	;# 
  2140     0E9E                     	;# 
  2141     0EA1                     	;# 
  2142     0EA2                     	;# 
  2143     0EA3                     	;# 
  2144     0EA4                     	;# 
  2145     0EA5                     	;# 
  2146     0EA9                     	;# 
  2147     0EAA                     	;# 
  2148     0EAB                     	;# 
  2149     0EAC                     	;# 
  2150     0EB1                     	;# 
  2151     0EB2                     	;# 
  2152     0EB3                     	;# 
  2153     0EB8                     	;# 
  2154     0EB9                     	;# 
  2155     0EBA                     	;# 
  2156     0EBB                     	;# 
  2157     0EBC                     	;# 
  2158     0EBD                     	;# 
  2159     0EBE                     	;# 
  2160     0EC3                     	;# 
  2161     0EC5                     	;# 
  2162     0EC6                     	;# 
  2163     0EC7                     	;# 
  2164     0EC8                     	;# 
  2165     0EC9                     	;# 
  2166     0ECA                     	;# 
  2167     0ECB                     	;# 
  2168     0ECC                     	;# 
  2169     0F10                     	;# 
  2170     0F11                     	;# 
  2171     0F12                     	;# 
  2172     0F13                     	;# 
  2173     0F14                     	;# 
  2174     0F15                     	;# 
  2175     0F16                     	;# 
  2176     0F17                     	;# 
  2177     0F18                     	;# 
  2178     0F19                     	;# 
  2179     0F1A                     	;# 
  2180     0F1B                     	;# 
  2181     0F1C                     	;# 
  2182     0F1D                     	;# 
  2183     0F1E                     	;# 
  2184     0F1F                     	;# 
  2185     0F20                     	;# 
  2186     0F21                     	;# 
  2187     0F22                     	;# 
  2188     0F23                     	;# 
  2189     0F24                     	;# 
  2190     0F25                     	;# 
  2191     0F26                     	;# 
  2192     0F27                     	;# 
  2193     0F38                     	;# 
  2194     0F39                     	;# 
  2195     0F3A                     	;# 
  2196     0F3B                     	;# 
  2197     0F3C                     	;# 
  2198     0F3D                     	;# 
  2199     0F3E                     	;# 
  2200     0F3F                     	;# 
  2201     0F40                     	;# 
  2202     0F41                     	;# 
  2203     0F43                     	;# 
  2204     0F44                     	;# 
  2205     0F45                     	;# 
  2206     0F46                     	;# 
  2207     0F47                     	;# 
  2208     0F48                     	;# 
  2209     0F49                     	;# 
  2210     0F4A                     	;# 
  2211     0F4B                     	;# 
  2212     0F4C                     	;# 
  2213     0F4E                     	;# 
  2214     0F4F                     	;# 
  2215     0F50                     	;# 
  2216     0F51                     	;# 
  2217     0F52                     	;# 
  2218     0F53                     	;# 
  2219     0F54                     	;# 
  2220     0F55                     	;# 
  2221     0F56                     	;# 
  2222     0F57                     	;# 
  2223     0F65                     	;# 
  2224     0F68                     	;# 
  2225     0F69                     	;# 
  2226     0F6A                     	;# 
  2227     0F6B                     	;# 
  2228     0FE4                     	;# 
  2229     0FE5                     	;# 
  2230     0FE6                     	;# 
  2231     0FE7                     	;# 
  2232     0FE8                     	;# 
  2233     0FE9                     	;# 
  2234     0FEA                     	;# 
  2235     0FEB                     	;# 
  2236     0FED                     	;# 
  2237     0FEE                     	;# 
  2238     0FEF                     	;# 
  2239     0000                     	;# 
  2240     0001                     	;# 
  2241     0002                     	;# 
  2242     0003                     	;# 
  2243     0004                     	;# 
  2244     0005                     	;# 
  2245     0006                     	;# 
  2246     0007                     	;# 
  2247     0008                     	;# 
  2248     0009                     	;# 
  2249     000A                     	;# 
  2250     000B                     	;# 
  2251     000C                     	;# 
  2252     000D                     	;# 
  2253     000E                     	;# 
  2254     0010                     	;# 
  2255     0011                     	;# 
  2256     0012                     	;# 
  2257     0013                     	;# 
  2258     0016                     	;# 
  2259     0017                     	;# 
  2260     0018                     	;# 
  2261     001C                     	;# 
  2262     001C                     	;# 
  2263     001D                     	;# 
  2264     001D                     	;# 
  2265     001E                     	;# 
  2266     001F                     	;# 
  2267     008C                     	;# 
  2268     008C                     	;# 
  2269     008D                     	;# 
  2270     008E                     	;# 
  2271     008E                     	;# 
  2272     008F                     	;# 
  2273     0090                     	;# 
  2274     0090                     	;# 
  2275     0091                     	;# 
  2276     0093                     	;# 
  2277     0094                     	;# 
  2278     0095                     	;# 
  2279     0096                     	;# 
  2280     0097                     	;# 
  2281     0098                     	;# 
  2282     0099                     	;# 
  2283     009A                     	;# 
  2284     009B                     	;# 
  2285     009C                     	;# 
  2286     009D                     	;# 
  2287     009E                     	;# 
  2288     010C                     	;# 
  2289     010D                     	;# 
  2290     010E                     	;# 
  2291     010E                     	;# 
  2292     010F                     	;# 
  2293     0110                     	;# 
  2294     0110                     	;# 
  2295     0111                     	;# 
  2296     0112                     	;# 
  2297     0112                     	;# 
  2298     0113                     	;# 
  2299     0114                     	;# 
  2300     0114                     	;# 
  2301     0115                     	;# 
  2302     0116                     	;# 
  2303     0116                     	;# 
  2304     0117                     	;# 
  2305     0119                     	;# 
  2306     0119                     	;# 
  2307     0119                     	;# 
  2308     011A                     	;# 
  2309     011A                     	;# 
  2310     011A                     	;# 
  2311     011B                     	;# 
  2312     011B                     	;# 
  2313     011B                     	;# 
  2314     011B                     	;# 
  2315     011B                     	;# 
  2316     011C                     	;# 
  2317     011C                     	;# 
  2318     011C                     	;# 
  2319     011D                     	;# 
  2320     011D                     	;# 
  2321     011D                     	;# 
  2322     011E                     	;# 
  2323     011E                     	;# 
  2324     011E                     	;# 
  2325     011F                     	;# 
  2326     011F                     	;# 
  2327     011F                     	;# 
  2328     011F                     	;# 
  2329     011F                     	;# 
  2330     018C                     	;# 
  2331     018D                     	;# 
  2332     018E                     	;# 
  2333     018F                     	;# 
  2334     0190                     	;# 
  2335     0191                     	;# 
  2336     0192                     	;# 
  2337     0196                     	;# 
  2338     0197                     	;# 
  2339     0198                     	;# 
  2340     0199                     	;# 
  2341     019A                     	;# 
  2342     019B                     	;# 
  2343     019C                     	;# 
  2344     020C                     	;# 
  2345     020C                     	;# 
  2346     020D                     	;# 
  2347     020E                     	;# 
  2348     020F                     	;# 
  2349     020F                     	;# 
  2350     0210                     	;# 
  2351     0210                     	;# 
  2352     0211                     	;# 
  2353     0211                     	;# 
  2354     0212                     	;# 
  2355     0212                     	;# 
  2356     0213                     	;# 
  2357     0214                     	;# 
  2358     0215                     	;# 
  2359     0215                     	;# 
  2360     0216                     	;# 
  2361     0216                     	;# 
  2362     0217                     	;# 
  2363     0217                     	;# 
  2364     0218                     	;# 
  2365     0218                     	;# 
  2366     0219                     	;# 
  2367     021A                     	;# 
  2368     021B                     	;# 
  2369     021B                     	;# 
  2370     021C                     	;# 
  2371     021C                     	;# 
  2372     021D                     	;# 
  2373     021D                     	;# 
  2374     021E                     	;# 
  2375     021F                     	;# 
  2376     028C                     	;# 
  2377     028C                     	;# 
  2378     028D                     	;# 
  2379     028D                     	;# 
  2380     028E                     	;# 
  2381     028F                     	;# 
  2382     0290                     	;# 
  2383     0290                     	;# 
  2384     0291                     	;# 
  2385     0292                     	;# 
  2386     0292                     	;# 
  2387     0293                     	;# 
  2388     0293                     	;# 
  2389     0294                     	;# 
  2390     0295                     	;# 
  2391     0296                     	;# 
  2392     0296                     	;# 
  2393     0297                     	;# 
  2394     0298                     	;# 
  2395     0298                     	;# 
  2396     0299                     	;# 
  2397     0299                     	;# 
  2398     029A                     	;# 
  2399     029B                     	;# 
  2400     029C                     	;# 
  2401     029C                     	;# 
  2402     029D                     	;# 
  2403     030C                     	;# 
  2404     030C                     	;# 
  2405     030D                     	;# 
  2406     030E                     	;# 
  2407     030F                     	;# 
  2408     0310                     	;# 
  2409     0310                     	;# 
  2410     0311                     	;# 
  2411     0312                     	;# 
  2412     0313                     	;# 
  2413     0314                     	;# 
  2414     0314                     	;# 
  2415     0315                     	;# 
  2416     0316                     	;# 
  2417     0317                     	;# 
  2418     0318                     	;# 
  2419     0318                     	;# 
  2420     0319                     	;# 
  2421     031A                     	;# 
  2422     031B                     	;# 
  2423     031C                     	;# 
  2424     031C                     	;# 
  2425     031D                     	;# 
  2426     031E                     	;# 
  2427     031F                     	;# 
  2428     038C                     	;# 
  2429     038C                     	;# 
  2430     038D                     	;# 
  2431     038E                     	;# 
  2432     0390                     	;# 
  2433     0390                     	;# 
  2434     0391                     	;# 
  2435     0392                     	;# 
  2436     040C                     	;# 
  2437     040D                     	;# 
  2438     040E                     	;# 
  2439     040F                     	;# 
  2440     0410                     	;# 
  2441     0411                     	;# 
  2442     0416                     	;# 
  2443     0416                     	;# 
  2444     0417                     	;# 
  2445     0418                     	;# 
  2446     0418                     	;# 
  2447     0419                     	;# 
  2448     041A                     	;# 
  2449     041A                     	;# 
  2450     041B                     	;# 
  2451     041C                     	;# 
  2452     041C                     	;# 
  2453     041D                     	;# 
  2454     041E                     	;# 
  2455     041F                     	;# 
  2456     048C                     	;# 
  2457     048C                     	;# 
  2458     048D                     	;# 
  2459     048E                     	;# 
  2460     048F                     	;# 
  2461     048F                     	;# 
  2462     0490                     	;# 
  2463     0491                     	;# 
  2464     0492                     	;# 
  2465     0492                     	;# 
  2466     0493                     	;# 
  2467     0494                     	;# 
  2468     0495                     	;# 
  2469     0495                     	;# 
  2470     0496                     	;# 
  2471     0497                     	;# 
  2472     0498                     	;# 
  2473     0499                     	;# 
  2474     049A                     	;# 
  2475     049B                     	;# 
  2476     049C                     	;# 
  2477     049D                     	;# 
  2478     050C                     	;# 
  2479     050C                     	;# 
  2480     050D                     	;# 
  2481     050E                     	;# 
  2482     050F                     	;# 
  2483     050F                     	;# 
  2484     0510                     	;# 
  2485     0511                     	;# 
  2486     0512                     	;# 
  2487     0512                     	;# 
  2488     0513                     	;# 
  2489     0514                     	;# 
  2490     0515                     	;# 
  2491     0515                     	;# 
  2492     0516                     	;# 
  2493     0517                     	;# 
  2494     0518                     	;# 
  2495     0519                     	;# 
  2496     051A                     	;# 
  2497     051B                     	;# 
  2498     051C                     	;# 
  2499     051D                     	;# 
  2500     058C                     	;# 
  2501     058C                     	;# 
  2502     058D                     	;# 
  2503     058E                     	;# 
  2504     058F                     	;# 
  2505     058F                     	;# 
  2506     0590                     	;# 
  2507     0591                     	;# 
  2508     0592                     	;# 
  2509     0593                     	;# 
  2510     060C                     	;# 
  2511     060D                     	;# 
  2512     060E                     	;# 
  2513     060F                     	;# 
  2514     0610                     	;# 
  2515     0611                     	;# 
  2516     0612                     	;# 
  2517     0613                     	;# 
  2518     0614                     	;# 
  2519     0616                     	;# 
  2520     0617                     	;# 
  2521     0618                     	;# 
  2522     0619                     	;# 
  2523     061A                     	;# 
  2524     061B                     	;# 
  2525     061C                     	;# 
  2526     061D                     	;# 
  2527     061E                     	;# 
  2528     068C                     	;# 
  2529     068D                     	;# 
  2530     068E                     	;# 
  2531     068F                     	;# 
  2532     0690                     	;# 
  2533     0691                     	;# 
  2534     0692                     	;# 
  2535     0693                     	;# 
  2536     0694                     	;# 
  2537     070C                     	;# 
  2538     070D                     	;# 
  2539     070E                     	;# 
  2540     070F                     	;# 
  2541     0710                     	;# 
  2542     0711                     	;# 
  2543     0712                     	;# 
  2544     0713                     	;# 
  2545     0714                     	;# 
  2546     0716                     	;# 
  2547     0717                     	;# 
  2548     0718                     	;# 
  2549     0719                     	;# 
  2550     071A                     	;# 
  2551     071B                     	;# 
  2552     071C                     	;# 
  2553     071D                     	;# 
  2554     071E                     	;# 
  2555     0796                     	;# 
  2556     0797                     	;# 
  2557     0798                     	;# 
  2558     0799                     	;# 
  2559     079A                     	;# 
  2560     079B                     	;# 
  2561     080C                     	;# 
  2562     080D                     	;# 
  2563     080E                     	;# 
  2564     080F                     	;# 
  2565     0810                     	;# 
  2566     0811                     	;# 
  2567     0812                     	;# 
  2568     0813                     	;# 
  2569     0814                     	;# 
  2570     081A                     	;# 
  2571     081B                     	;# 
  2572     081C                     	;# 
  2573     081D                     	;# 
  2574     081E                     	;# 
  2575     081F                     	;# 
  2576     088C                     	;# 
  2577     088D                     	;# 
  2578     088E                     	;# 
  2579     088F                     	;# 
  2580     0890                     	;# 
  2581     0891                     	;# 
  2582     0892                     	;# 
  2583     0893                     	;# 
  2584     0895                     	;# 
  2585     0896                     	;# 
  2586     0897                     	;# 
  2587     0898                     	;# 
  2588     0899                     	;# 
  2589     089A                     	;# 
  2590     089B                     	;# 
  2591     090C                     	;# 
  2592     090E                     	;# 
  2593     090F                     	;# 
  2594     091F                     	;# 
  2595     091F                     	;# 
  2596     098F                     	;# 
  2597     098F                     	;# 
  2598     0990                     	;# 
  2599     0991                     	;# 
  2600     0992                     	;# 
  2601     0993                     	;# 
  2602     0994                     	;# 
  2603     0995                     	;# 
  2604     0996                     	;# 
  2605     0997                     	;# 
  2606     0E0F                     	;# 
  2607     0E10                     	;# 
  2608     0E11                     	;# 
  2609     0E12                     	;# 
  2610     0E13                     	;# 
  2611     0E14                     	;# 
  2612     0E15                     	;# 
  2613     0E16                     	;# 
  2614     0E17                     	;# 
  2615     0E18                     	;# 
  2616     0E19                     	;# 
  2617     0E1A                     	;# 
  2618     0E1B                     	;# 
  2619     0E1C                     	;# 
  2620     0E1D                     	;# 
  2621     0E1E                     	;# 
  2622     0E1F                     	;# 
  2623     0E20                     	;# 
  2624     0E21                     	;# 
  2625     0E22                     	;# 
  2626     0E23                     	;# 
  2627     0E24                     	;# 
  2628     0E25                     	;# 
  2629     0E26                     	;# 
  2630     0E27                     	;# 
  2631     0E28                     	;# 
  2632     0E29                     	;# 
  2633     0E2A                     	;# 
  2634     0E2B                     	;# 
  2635     0E2C                     	;# 
  2636     0E2D                     	;# 
  2637     0E2E                     	;# 
  2638     0E2F                     	;# 
  2639     0E30                     	;# 
  2640     0E31                     	;# 
  2641     0E32                     	;# 
  2642     0E33                     	;# 
  2643     0E34                     	;# 
  2644     0E35                     	;# 
  2645     0E36                     	;# 
  2646     0E37                     	;# 
  2647     0E8F                     	;# 
  2648     0E90                     	;# 
  2649     0E91                     	;# 
  2650     0E92                     	;# 
  2651     0E93                     	;# 
  2652     0E94                     	;# 
  2653     0E95                     	;# 
  2654     0E96                     	;# 
  2655     0E97                     	;# 
  2656     0E9C                     	;# 
  2657     0E9D                     	;# 
  2658     0E9E                     	;# 
  2659     0EA1                     	;# 
  2660     0EA2                     	;# 
  2661     0EA3                     	;# 
  2662     0EA4                     	;# 
  2663     0EA5                     	;# 
  2664     0EA9                     	;# 
  2665     0EAA                     	;# 
  2666     0EAB                     	;# 
  2667     0EAC                     	;# 
  2668     0EB1                     	;# 
  2669     0EB2                     	;# 
  2670     0EB3                     	;# 
  2671     0EB8                     	;# 
  2672     0EB9                     	;# 
  2673     0EBA                     	;# 
  2674     0EBB                     	;# 
  2675     0EBC                     	;# 
  2676     0EBD                     	;# 
  2677     0EBE                     	;# 
  2678     0EC3                     	;# 
  2679     0EC5                     	;# 
  2680     0EC6                     	;# 
  2681     0EC7                     	;# 
  2682     0EC8                     	;# 
  2683     0EC9                     	;# 
  2684     0ECA                     	;# 
  2685     0ECB                     	;# 
  2686     0ECC                     	;# 
  2687     0F10                     	;# 
  2688     0F11                     	;# 
  2689     0F12                     	;# 
  2690     0F13                     	;# 
  2691     0F14                     	;# 
  2692     0F15                     	;# 
  2693     0F16                     	;# 
  2694     0F17                     	;# 
  2695     0F18                     	;# 
  2696     0F19                     	;# 
  2697     0F1A                     	;# 
  2698     0F1B                     	;# 
  2699     0F1C                     	;# 
  2700     0F1D                     	;# 
  2701     0F1E                     	;# 
  2702     0F1F                     	;# 
  2703     0F20                     	;# 
  2704     0F21                     	;# 
  2705     0F22                     	;# 
  2706     0F23                     	;# 
  2707     0F24                     	;# 
  2708     0F25                     	;# 
  2709     0F26                     	;# 
  2710     0F27                     	;# 
  2711     0F38                     	;# 
  2712     0F39                     	;# 
  2713     0F3A                     	;# 
  2714     0F3B                     	;# 
  2715     0F3C                     	;# 
  2716     0F3D                     	;# 
  2717     0F3E                     	;# 
  2718     0F3F                     	;# 
  2719     0F40                     	;# 
  2720     0F41                     	;# 
  2721     0F43                     	;# 
  2722     0F44                     	;# 
  2723     0F45                     	;# 
  2724     0F46                     	;# 
  2725     0F47                     	;# 
  2726     0F48                     	;# 
  2727     0F49                     	;# 
  2728     0F4A                     	;# 
  2729     0F4B                     	;# 
  2730     0F4C                     	;# 
  2731     0F4E                     	;# 
  2732     0F4F                     	;# 
  2733     0F50                     	;# 
  2734     0F51                     	;# 
  2735     0F52                     	;# 
  2736     0F53                     	;# 
  2737     0F54                     	;# 
  2738     0F55                     	;# 
  2739     0F56                     	;# 
  2740     0F57                     	;# 
  2741     0F65                     	;# 
  2742     0F68                     	;# 
  2743     0F69                     	;# 
  2744     0F6A                     	;# 
  2745     0F6B                     	;# 
  2746     0FE4                     	;# 
  2747     0FE5                     	;# 
  2748     0FE6                     	;# 
  2749     0FE7                     	;# 
  2750     0FE8                     	;# 
  2751     0FE9                     	;# 
  2752     0FEA                     	;# 
  2753     0FEB                     	;# 
  2754     0FED                     	;# 
  2755     0FEE                     	;# 
  2756     0FEF                     	;# 
  2757     0000                     	;# 
  2758     0001                     	;# 
  2759     0002                     	;# 
  2760     0003                     	;# 
  2761     0004                     	;# 
  2762     0005                     	;# 
  2763     0006                     	;# 
  2764     0007                     	;# 
  2765     0008                     	;# 
  2766     0009                     	;# 
  2767     000A                     	;# 
  2768     000B                     	;# 
  2769     000C                     	;# 
  2770     000D                     	;# 
  2771     000E                     	;# 
  2772     0010                     	;# 
  2773     0011                     	;# 
  2774     0012                     	;# 
  2775     0013                     	;# 
  2776     0016                     	;# 
  2777     0017                     	;# 
  2778     0018                     	;# 
  2779     001C                     	;# 
  2780     001C                     	;# 
  2781     001D                     	;# 
  2782     001D                     	;# 
  2783     001E                     	;# 
  2784     001F                     	;# 
  2785     008C                     	;# 
  2786     008C                     	;# 
  2787     008D                     	;# 
  2788     008E                     	;# 
  2789     008E                     	;# 
  2790     008F                     	;# 
  2791     0090                     	;# 
  2792     0090                     	;# 
  2793     0091                     	;# 
  2794     0093                     	;# 
  2795     0094                     	;# 
  2796     0095                     	;# 
  2797     0096                     	;# 
  2798     0097                     	;# 
  2799     0098                     	;# 
  2800     0099                     	;# 
  2801     009A                     	;# 
  2802     009B                     	;# 
  2803     009C                     	;# 
  2804     009D                     	;# 
  2805     009E                     	;# 
  2806     010C                     	;# 
  2807     010D                     	;# 
  2808     010E                     	;# 
  2809     010E                     	;# 
  2810     010F                     	;# 
  2811     0110                     	;# 
  2812     0110                     	;# 
  2813     0111                     	;# 
  2814     0112                     	;# 
  2815     0112                     	;# 
  2816     0113                     	;# 
  2817     0114                     	;# 
  2818     0114                     	;# 
  2819     0115                     	;# 
  2820     0116                     	;# 
  2821     0116                     	;# 
  2822     0117                     	;# 
  2823     0119                     	;# 
  2824     0119                     	;# 
  2825     0119                     	;# 
  2826     011A                     	;# 
  2827     011A                     	;# 
  2828     011A                     	;# 
  2829     011B                     	;# 
  2830     011B                     	;# 
  2831     011B                     	;# 
  2832     011B                     	;# 
  2833     011B                     	;# 
  2834     011C                     	;# 
  2835     011C                     	;# 
  2836     011C                     	;# 
  2837     011D                     	;# 
  2838     011D                     	;# 
  2839     011D                     	;# 
  2840     011E                     	;# 
  2841     011E                     	;# 
  2842     011E                     	;# 
  2843     011F                     	;# 
  2844     011F                     	;# 
  2845     011F                     	;# 
  2846     011F                     	;# 
  2847     011F                     	;# 
  2848     018C                     	;# 
  2849     018D                     	;# 
  2850     018E                     	;# 
  2851     018F                     	;# 
  2852     0190                     	;# 
  2853     0191                     	;# 
  2854     0192                     	;# 
  2855     0196                     	;# 
  2856     0197                     	;# 
  2857     0198                     	;# 
  2858     0199                     	;# 
  2859     019A                     	;# 
  2860     019B                     	;# 
  2861     019C                     	;# 
  2862     020C                     	;# 
  2863     020C                     	;# 
  2864     020D                     	;# 
  2865     020E                     	;# 
  2866     020F                     	;# 
  2867     020F                     	;# 
  2868     0210                     	;# 
  2869     0210                     	;# 
  2870     0211                     	;# 
  2871     0211                     	;# 
  2872     0212                     	;# 
  2873     0212                     	;# 
  2874     0213                     	;# 
  2875     0214                     	;# 
  2876     0215                     	;# 
  2877     0215                     	;# 
  2878     0216                     	;# 
  2879     0216                     	;# 
  2880     0217                     	;# 
  2881     0217                     	;# 
  2882     0218                     	;# 
  2883     0218                     	;# 
  2884     0219                     	;# 
  2885     021A                     	;# 
  2886     021B                     	;# 
  2887     021B                     	;# 
  2888     021C                     	;# 
  2889     021C                     	;# 
  2890     021D                     	;# 
  2891     021D                     	;# 
  2892     021E                     	;# 
  2893     021F                     	;# 
  2894     028C                     	;# 
  2895     028C                     	;# 
  2896     028D                     	;# 
  2897     028D                     	;# 
  2898     028E                     	;# 
  2899     028F                     	;# 
  2900     0290                     	;# 
  2901     0290                     	;# 
  2902     0291                     	;# 
  2903     0292                     	;# 
  2904     0292                     	;# 
  2905     0293                     	;# 
  2906     0293                     	;# 
  2907     0294                     	;# 
  2908     0295                     	;# 
  2909     0296                     	;# 
  2910     0296                     	;# 
  2911     0297                     	;# 
  2912     0298                     	;# 
  2913     0298                     	;# 
  2914     0299                     	;# 
  2915     0299                     	;# 
  2916     029A                     	;# 
  2917     029B                     	;# 
  2918     029C                     	;# 
  2919     029C                     	;# 
  2920     029D                     	;# 
  2921     030C                     	;# 
  2922     030C                     	;# 
  2923     030D                     	;# 
  2924     030E                     	;# 
  2925     030F                     	;# 
  2926     0310                     	;# 
  2927     0310                     	;# 
  2928     0311                     	;# 
  2929     0312                     	;# 
  2930     0313                     	;# 
  2931     0314                     	;# 
  2932     0314                     	;# 
  2933     0315                     	;# 
  2934     0316                     	;# 
  2935     0317                     	;# 
  2936     0318                     	;# 
  2937     0318                     	;# 
  2938     0319                     	;# 
  2939     031A                     	;# 
  2940     031B                     	;# 
  2941     031C                     	;# 
  2942     031C                     	;# 
  2943     031D                     	;# 
  2944     031E                     	;# 
  2945     031F                     	;# 
  2946     038C                     	;# 
  2947     038C                     	;# 
  2948     038D                     	;# 
  2949     038E                     	;# 
  2950     0390                     	;# 
  2951     0390                     	;# 
  2952     0391                     	;# 
  2953     0392                     	;# 
  2954     040C                     	;# 
  2955     040D                     	;# 
  2956     040E                     	;# 
  2957     040F                     	;# 
  2958     0410                     	;# 
  2959     0411                     	;# 
  2960     0416                     	;# 
  2961     0416                     	;# 
  2962     0417                     	;# 
  2963     0418                     	;# 
  2964     0418                     	;# 
  2965     0419                     	;# 
  2966     041A                     	;# 
  2967     041A                     	;# 
  2968     041B                     	;# 
  2969     041C                     	;# 
  2970     041C                     	;# 
  2971     041D                     	;# 
  2972     041E                     	;# 
  2973     041F                     	;# 
  2974     048C                     	;# 
  2975     048C                     	;# 
  2976     048D                     	;# 
  2977     048E                     	;# 
  2978     048F                     	;# 
  2979     048F                     	;# 
  2980     0490                     	;# 
  2981     0491                     	;# 
  2982     0492                     	;# 
  2983     0492                     	;# 
  2984     0493                     	;# 
  2985     0494                     	;# 
  2986     0495                     	;# 
  2987     0495                     	;# 
  2988     0496                     	;# 
  2989     0497                     	;# 
  2990     0498                     	;# 
  2991     0499                     	;# 
  2992     049A                     	;# 
  2993     049B                     	;# 
  2994     049C                     	;# 
  2995     049D                     	;# 
  2996     050C                     	;# 
  2997     050C                     	;# 
  2998     050D                     	;# 
  2999     050E                     	;# 
  3000     050F                     	;# 
  3001     050F                     	;# 
  3002     0510                     	;# 
  3003     0511                     	;# 
  3004     0512                     	;# 
  3005     0512                     	;# 
  3006     0513                     	;# 
  3007     0514                     	;# 
  3008     0515                     	;# 
  3009     0515                     	;# 
  3010     0516                     	;# 
  3011     0517                     	;# 
  3012     0518                     	;# 
  3013     0519                     	;# 
  3014     051A                     	;# 
  3015     051B                     	;# 
  3016     051C                     	;# 
  3017     051D                     	;# 
  3018     058C                     	;# 
  3019     058C                     	;# 
  3020     058D                     	;# 
  3021     058E                     	;# 
  3022     058F                     	;# 
  3023     058F                     	;# 
  3024     0590                     	;# 
  3025     0591                     	;# 
  3026     0592                     	;# 
  3027     0593                     	;# 
  3028     060C                     	;# 
  3029     060D                     	;# 
  3030     060E                     	;# 
  3031     060F                     	;# 
  3032     0610                     	;# 
  3033     0611                     	;# 
  3034     0612                     	;# 
  3035     0613                     	;# 
  3036     0614                     	;# 
  3037     0616                     	;# 
  3038     0617                     	;# 
  3039     0618                     	;# 
  3040     0619                     	;# 
  3041     061A                     	;# 
  3042     061B                     	;# 
  3043     061C                     	;# 
  3044     061D                     	;# 
  3045     061E                     	;# 
  3046     068C                     	;# 
  3047     068D                     	;# 
  3048     068E                     	;# 
  3049     068F                     	;# 
  3050     0690                     	;# 
  3051     0691                     	;# 
  3052     0692                     	;# 
  3053     0693                     	;# 
  3054     0694                     	;# 
  3055     070C                     	;# 
  3056     070D                     	;# 
  3057     070E                     	;# 
  3058     070F                     	;# 
  3059     0710                     	;# 
  3060     0711                     	;# 
  3061     0712                     	;# 
  3062     0713                     	;# 
  3063     0714                     	;# 
  3064     0716                     	;# 
  3065     0717                     	;# 
  3066     0718                     	;# 
  3067     0719                     	;# 
  3068     071A                     	;# 
  3069     071B                     	;# 
  3070     071C                     	;# 
  3071     071D                     	;# 
  3072     071E                     	;# 
  3073     0796                     	;# 
  3074     0797                     	;# 
  3075     0798                     	;# 
  3076     0799                     	;# 
  3077     079A                     	;# 
  3078     079B                     	;# 
  3079     080C                     	;# 
  3080     080D                     	;# 
  3081     080E                     	;# 
  3082     080F                     	;# 
  3083     0810                     	;# 
  3084     0811                     	;# 
  3085     0812                     	;# 
  3086     0813                     	;# 
  3087     0814                     	;# 
  3088     081A                     	;# 
  3089     081B                     	;# 
  3090     081C                     	;# 
  3091     081D                     	;# 
  3092     081E                     	;# 
  3093     081F                     	;# 
  3094     088C                     	;# 
  3095     088D                     	;# 
  3096     088E                     	;# 
  3097     088F                     	;# 
  3098     0890                     	;# 
  3099     0891                     	;# 
  3100     0892                     	;# 
  3101     0893                     	;# 
  3102     0895                     	;# 
  3103     0896                     	;# 
  3104     0897                     	;# 
  3105     0898                     	;# 
  3106     0899                     	;# 
  3107     089A                     	;# 
  3108     089B                     	;# 
  3109     090C                     	;# 
  3110     090E                     	;# 
  3111     090F                     	;# 
  3112     091F                     	;# 
  3113     091F                     	;# 
  3114     098F                     	;# 
  3115     098F                     	;# 
  3116     0990                     	;# 
  3117     0991                     	;# 
  3118     0992                     	;# 
  3119     0993                     	;# 
  3120     0994                     	;# 
  3121     0995                     	;# 
  3122     0996                     	;# 
  3123     0997                     	;# 
  3124     0E0F                     	;# 
  3125     0E10                     	;# 
  3126     0E11                     	;# 
  3127     0E12                     	;# 
  3128     0E13                     	;# 
  3129     0E14                     	;# 
  3130     0E15                     	;# 
  3131     0E16                     	;# 
  3132     0E17                     	;# 
  3133     0E18                     	;# 
  3134     0E19                     	;# 
  3135     0E1A                     	;# 
  3136     0E1B                     	;# 
  3137     0E1C                     	;# 
  3138     0E1D                     	;# 
  3139     0E1E                     	;# 
  3140     0E1F                     	;# 
  3141     0E20                     	;# 
  3142     0E21                     	;# 
  3143     0E22                     	;# 
  3144     0E23                     	;# 
  3145     0E24                     	;# 
  3146     0E25                     	;# 
  3147     0E26                     	;# 
  3148     0E27                     	;# 
  3149     0E28                     	;# 
  3150     0E29                     	;# 
  3151     0E2A                     	;# 
  3152     0E2B                     	;# 
  3153     0E2C                     	;# 
  3154     0E2D                     	;# 
  3155     0E2E                     	;# 
  3156     0E2F                     	;# 
  3157     0E30                     	;# 
  3158     0E31                     	;# 
  3159     0E32                     	;# 
  3160     0E33                     	;# 
  3161     0E34                     	;# 
  3162     0E35                     	;# 
  3163     0E36                     	;# 
  3164     0E37                     	;# 
  3165     0E8F                     	;# 
  3166     0E90                     	;# 
  3167     0E91                     	;# 
  3168     0E92                     	;# 
  3169     0E93                     	;# 
  3170     0E94                     	;# 
  3171     0E95                     	;# 
  3172     0E96                     	;# 
  3173     0E97                     	;# 
  3174     0E9C                     	;# 
  3175     0E9D                     	;# 
  3176     0E9E                     	;# 
  3177     0EA1                     	;# 
  3178     0EA2                     	;# 
  3179     0EA3                     	;# 
  3180     0EA4                     	;# 
  3181     0EA5                     	;# 
  3182     0EA9                     	;# 
  3183     0EAA                     	;# 
  3184     0EAB                     	;# 
  3185     0EAC                     	;# 
  3186     0EB1                     	;# 
  3187     0EB2                     	;# 
  3188     0EB3                     	;# 
  3189     0EB8                     	;# 
  3190     0EB9                     	;# 
  3191     0EBA                     	;# 
  3192     0EBB                     	;# 
  3193     0EBC                     	;# 
  3194     0EBD                     	;# 
  3195     0EBE                     	;# 
  3196     0EC3                     	;# 
  3197     0EC5                     	;# 
  3198     0EC6                     	;# 
  3199     0EC7                     	;# 
  3200     0EC8                     	;# 
  3201     0EC9                     	;# 
  3202     0ECA                     	;# 
  3203     0ECB                     	;# 
  3204     0ECC                     	;# 
  3205     0F10                     	;# 
  3206     0F11                     	;# 
  3207     0F12                     	;# 
  3208     0F13                     	;# 
  3209     0F14                     	;# 
  3210     0F15                     	;# 
  3211     0F16                     	;# 
  3212     0F17                     	;# 
  3213     0F18                     	;# 
  3214     0F19                     	;# 
  3215     0F1A                     	;# 
  3216     0F1B                     	;# 
  3217     0F1C                     	;# 
  3218     0F1D                     	;# 
  3219     0F1E                     	;# 
  3220     0F1F                     	;# 
  3221     0F20                     	;# 
  3222     0F21                     	;# 
  3223     0F22                     	;# 
  3224     0F23                     	;# 
  3225     0F24                     	;# 
  3226     0F25                     	;# 
  3227     0F26                     	;# 
  3228     0F27                     	;# 
  3229     0F38                     	;# 
  3230     0F39                     	;# 
  3231     0F3A                     	;# 
  3232     0F3B                     	;# 
  3233     0F3C                     	;# 
  3234     0F3D                     	;# 
  3235     0F3E                     	;# 
  3236     0F3F                     	;# 
  3237     0F40                     	;# 
  3238     0F41                     	;# 
  3239     0F43                     	;# 
  3240     0F44                     	;# 
  3241     0F45                     	;# 
  3242     0F46                     	;# 
  3243     0F47                     	;# 
  3244     0F48                     	;# 
  3245     0F49                     	;# 
  3246     0F4A                     	;# 
  3247     0F4B                     	;# 
  3248     0F4C                     	;# 
  3249     0F4E                     	;# 
  3250     0F4F                     	;# 
  3251     0F50                     	;# 
  3252     0F51                     	;# 
  3253     0F52                     	;# 
  3254     0F53                     	;# 
  3255     0F54                     	;# 
  3256     0F55                     	;# 
  3257     0F56                     	;# 
  3258     0F57                     	;# 
  3259     0F65                     	;# 
  3260     0F68                     	;# 
  3261     0F69                     	;# 
  3262     0F6A                     	;# 
  3263     0F6B                     	;# 
  3264     0FE4                     	;# 
  3265     0FE5                     	;# 
  3266     0FE6                     	;# 
  3267     0FE7                     	;# 
  3268     0FE8                     	;# 
  3269     0FE9                     	;# 
  3270     0FEA                     	;# 
  3271     0FEB                     	;# 
  3272     0FED                     	;# 
  3273     0FEE                     	;# 
  3274     0FEF                     	;# 
  3275     0000                     	;# 
  3276     0001                     	;# 
  3277     0002                     	;# 
  3278     0003                     	;# 
  3279     0004                     	;# 
  3280     0005                     	;# 
  3281     0006                     	;# 
  3282     0007                     	;# 
  3283     0008                     	;# 
  3284     0009                     	;# 
  3285     000A                     	;# 
  3286     000B                     	;# 
  3287     000C                     	;# 
  3288     000D                     	;# 
  3289     000E                     	;# 
  3290     0010                     	;# 
  3291     0011                     	;# 
  3292     0012                     	;# 
  3293     0013                     	;# 
  3294     0016                     	;# 
  3295     0017                     	;# 
  3296     0018                     	;# 
  3297     001C                     	;# 
  3298     001C                     	;# 
  3299     001D                     	;# 
  3300     001D                     	;# 
  3301     001E                     	;# 
  3302     001F                     	;# 
  3303     008C                     	;# 
  3304     008C                     	;# 
  3305     008D                     	;# 
  3306     008E                     	;# 
  3307     008E                     	;# 
  3308     008F                     	;# 
  3309     0090                     	;# 
  3310     0090                     	;# 
  3311     0091                     	;# 
  3312     0093                     	;# 
  3313     0094                     	;# 
  3314     0095                     	;# 
  3315     0096                     	;# 
  3316     0097                     	;# 
  3317     0098                     	;# 
  3318     0099                     	;# 
  3319     009A                     	;# 
  3320     009B                     	;# 
  3321     009C                     	;# 
  3322     009D                     	;# 
  3323     009E                     	;# 
  3324     010C                     	;# 
  3325     010D                     	;# 
  3326     010E                     	;# 
  3327     010E                     	;# 
  3328     010F                     	;# 
  3329     0110                     	;# 
  3330     0110                     	;# 
  3331     0111                     	;# 
  3332     0112                     	;# 
  3333     0112                     	;# 
  3334     0113                     	;# 
  3335     0114                     	;# 
  3336     0114                     	;# 
  3337     0115                     	;# 
  3338     0116                     	;# 
  3339     0116                     	;# 
  3340     0117                     	;# 
  3341     0119                     	;# 
  3342     0119                     	;# 
  3343     0119                     	;# 
  3344     011A                     	;# 
  3345     011A                     	;# 
  3346     011A                     	;# 
  3347     011B                     	;# 
  3348     011B                     	;# 
  3349     011B                     	;# 
  3350     011B                     	;# 
  3351     011B                     	;# 
  3352     011C                     	;# 
  3353     011C                     	;# 
  3354     011C                     	;# 
  3355     011D                     	;# 
  3356     011D                     	;# 
  3357     011D                     	;# 
  3358     011E                     	;# 
  3359     011E                     	;# 
  3360     011E                     	;# 
  3361     011F                     	;# 
  3362     011F                     	;# 
  3363     011F                     	;# 
  3364     011F                     	;# 
  3365     011F                     	;# 
  3366     018C                     	;# 
  3367     018D                     	;# 
  3368     018E                     	;# 
  3369     018F                     	;# 
  3370     0190                     	;# 
  3371     0191                     	;# 
  3372     0192                     	;# 
  3373     0196                     	;# 
  3374     0197                     	;# 
  3375     0198                     	;# 
  3376     0199                     	;# 
  3377     019A                     	;# 
  3378     019B                     	;# 
  3379     019C                     	;# 
  3380     020C                     	;# 
  3381     020C                     	;# 
  3382     020D                     	;# 
  3383     020E                     	;# 
  3384     020F                     	;# 
  3385     020F                     	;# 
  3386     0210                     	;# 
  3387     0210                     	;# 
  3388     0211                     	;# 
  3389     0211                     	;# 
  3390     0212                     	;# 
  3391     0212                     	;# 
  3392     0213                     	;# 
  3393     0214                     	;# 
  3394     0215                     	;# 
  3395     0215                     	;# 
  3396     0216                     	;# 
  3397     0216                     	;# 
  3398     0217                     	;# 
  3399     0217                     	;# 
  3400     0218                     	;# 
  3401     0218                     	;# 
  3402     0219                     	;# 
  3403     021A                     	;# 
  3404     021B                     	;# 
  3405     021B                     	;# 
  3406     021C                     	;# 
  3407     021C                     	;# 
  3408     021D                     	;# 
  3409     021D                     	;# 
  3410     021E                     	;# 
  3411     021F                     	;# 
  3412     028C                     	;# 
  3413     028C                     	;# 
  3414     028D                     	;# 
  3415     028D                     	;# 
  3416     028E                     	;# 
  3417     028F                     	;# 
  3418     0290                     	;# 
  3419     0290                     	;# 
  3420     0291                     	;# 
  3421     0292                     	;# 
  3422     0292                     	;# 
  3423     0293                     	;# 
  3424     0293                     	;# 
  3425     0294                     	;# 
  3426     0295                     	;# 
  3427     0296                     	;# 
  3428     0296                     	;# 
  3429     0297                     	;# 
  3430     0298                     	;# 
  3431     0298                     	;# 
  3432     0299                     	;# 
  3433     0299                     	;# 
  3434     029A                     	;# 
  3435     029B                     	;# 
  3436     029C                     	;# 
  3437     029C                     	;# 
  3438     029D                     	;# 
  3439     030C                     	;# 
  3440     030C                     	;# 
  3441     030D                     	;# 
  3442     030E                     	;# 
  3443     030F                     	;# 
  3444     0310                     	;# 
  3445     0310                     	;# 
  3446     0311                     	;# 
  3447     0312                     	;# 
  3448     0313                     	;# 
  3449     0314                     	;# 
  3450     0314                     	;# 
  3451     0315                     	;# 
  3452     0316                     	;# 
  3453     0317                     	;# 
  3454     0318                     	;# 
  3455     0318                     	;# 
  3456     0319                     	;# 
  3457     031A                     	;# 
  3458     031B                     	;# 
  3459     031C                     	;# 
  3460     031C                     	;# 
  3461     031D                     	;# 
  3462     031E                     	;# 
  3463     031F                     	;# 
  3464     038C                     	;# 
  3465     038C                     	;# 
  3466     038D                     	;# 
  3467     038E                     	;# 
  3468     0390                     	;# 
  3469     0390                     	;# 
  3470     0391                     	;# 
  3471     0392                     	;# 
  3472     040C                     	;# 
  3473     040D                     	;# 
  3474     040E                     	;# 
  3475     040F                     	;# 
  3476     0410                     	;# 
  3477     0411                     	;# 
  3478     0416                     	;# 
  3479     0416                     	;# 
  3480     0417                     	;# 
  3481     0418                     	;# 
  3482     0418                     	;# 
  3483     0419                     	;# 
  3484     041A                     	;# 
  3485     041A                     	;# 
  3486     041B                     	;# 
  3487     041C                     	;# 
  3488     041C                     	;# 
  3489     041D                     	;# 
  3490     041E                     	;# 
  3491     041F                     	;# 
  3492     048C                     	;# 
  3493     048C                     	;# 
  3494     048D                     	;# 
  3495     048E                     	;# 
  3496     048F                     	;# 
  3497     048F                     	;# 
  3498     0490                     	;# 
  3499     0491                     	;# 
  3500     0492                     	;# 
  3501     0492                     	;# 
  3502     0493                     	;# 
  3503     0494                     	;# 
  3504     0495                     	;# 
  3505     0495                     	;# 
  3506     0496                     	;# 
  3507     0497                     	;# 
  3508     0498                     	;# 
  3509     0499                     	;# 
  3510     049A                     	;# 
  3511     049B                     	;# 
  3512     049C                     	;# 
  3513     049D                     	;# 
  3514     050C                     	;# 
  3515     050C                     	;# 
  3516     050D                     	;# 
  3517     050E                     	;# 
  3518     050F                     	;# 
  3519     050F                     	;# 
  3520     0510                     	;# 
  3521     0511                     	;# 
  3522     0512                     	;# 
  3523     0512                     	;# 
  3524     0513                     	;# 
  3525     0514                     	;# 
  3526     0515                     	;# 
  3527     0515                     	;# 
  3528     0516                     	;# 
  3529     0517                     	;# 
  3530     0518                     	;# 
  3531     0519                     	;# 
  3532     051A                     	;# 
  3533     051B                     	;# 
  3534     051C                     	;# 
  3535     051D                     	;# 
  3536     058C                     	;# 
  3537     058C                     	;# 
  3538     058D                     	;# 
  3539     058E                     	;# 
  3540     058F                     	;# 
  3541     058F                     	;# 
  3542     0590                     	;# 
  3543     0591                     	;# 
  3544     0592                     	;# 
  3545     0593                     	;# 
  3546     060C                     	;# 
  3547     060D                     	;# 
  3548     060E                     	;# 
  3549     060F                     	;# 
  3550     0610                     	;# 
  3551     0611                     	;# 
  3552     0612                     	;# 
  3553     0613                     	;# 
  3554     0614                     	;# 
  3555     0616                     	;# 
  3556     0617                     	;# 
  3557     0618                     	;# 
  3558     0619                     	;# 
  3559     061A                     	;# 
  3560     061B                     	;# 
  3561     061C                     	;# 
  3562     061D                     	;# 
  3563     061E                     	;# 
  3564     068C                     	;# 
  3565     068D                     	;# 
  3566     068E                     	;# 
  3567     068F                     	;# 
  3568     0690                     	;# 
  3569     0691                     	;# 
  3570     0692                     	;# 
  3571     0693                     	;# 
  3572     0694                     	;# 
  3573     070C                     	;# 
  3574     070D                     	;# 
  3575     070E                     	;# 
  3576     070F                     	;# 
  3577     0710                     	;# 
  3578     0711                     	;# 
  3579     0712                     	;# 
  3580     0713                     	;# 
  3581     0714                     	;# 
  3582     0716                     	;# 
  3583     0717                     	;# 
  3584     0718                     	;# 
  3585     0719                     	;# 
  3586     071A                     	;# 
  3587     071B                     	;# 
  3588     071C                     	;# 
  3589     071D                     	;# 
  3590     071E                     	;# 
  3591     0796                     	;# 
  3592     0797                     	;# 
  3593     0798                     	;# 
  3594     0799                     	;# 
  3595     079A                     	;# 
  3596     079B                     	;# 
  3597     080C                     	;# 
  3598     080D                     	;# 
  3599     080E                     	;# 
  3600     080F                     	;# 
  3601     0810                     	;# 
  3602     0811                     	;# 
  3603     0812                     	;# 
  3604     0813                     	;# 
  3605     0814                     	;# 
  3606     081A                     	;# 
  3607     081B                     	;# 
  3608     081C                     	;# 
  3609     081D                     	;# 
  3610     081E                     	;# 
  3611     081F                     	;# 
  3612     088C                     	;# 
  3613     088D                     	;# 
  3614     088E                     	;# 
  3615     088F                     	;# 
  3616     0890                     	;# 
  3617     0891                     	;# 
  3618     0892                     	;# 
  3619     0893                     	;# 
  3620     0895                     	;# 
  3621     0896                     	;# 
  3622     0897                     	;# 
  3623     0898                     	;# 
  3624     0899                     	;# 
  3625     089A                     	;# 
  3626     089B                     	;# 
  3627     090C                     	;# 
  3628     090E                     	;# 
  3629     090F                     	;# 
  3630     091F                     	;# 
  3631     091F                     	;# 
  3632     098F                     	;# 
  3633     098F                     	;# 
  3634     0990                     	;# 
  3635     0991                     	;# 
  3636     0992                     	;# 
  3637     0993                     	;# 
  3638     0994                     	;# 
  3639     0995                     	;# 
  3640     0996                     	;# 
  3641     0997                     	;# 
  3642     0E0F                     	;# 
  3643     0E10                     	;# 
  3644     0E11                     	;# 
  3645     0E12                     	;# 
  3646     0E13                     	;# 
  3647     0E14                     	;# 
  3648     0E15                     	;# 
  3649     0E16                     	;# 
  3650     0E17                     	;# 
  3651     0E18                     	;# 
  3652     0E19                     	;# 
  3653     0E1A                     	;# 
  3654     0E1B                     	;# 
  3655     0E1C                     	;# 
  3656     0E1D                     	;# 
  3657     0E1E                     	;# 
  3658     0E1F                     	;# 
  3659     0E20                     	;# 
  3660     0E21                     	;# 
  3661     0E22                     	;# 
  3662     0E23                     	;# 
  3663     0E24                     	;# 
  3664     0E25                     	;# 
  3665     0E26                     	;# 
  3666     0E27                     	;# 
  3667     0E28                     	;# 
  3668     0E29                     	;# 
  3669     0E2A                     	;# 
  3670     0E2B                     	;# 
  3671     0E2C                     	;# 
  3672     0E2D                     	;# 
  3673     0E2E                     	;# 
  3674     0E2F                     	;# 
  3675     0E30                     	;# 
  3676     0E31                     	;# 
  3677     0E32                     	;# 
  3678     0E33                     	;# 
  3679     0E34                     	;# 
  3680     0E35                     	;# 
  3681     0E36                     	;# 
  3682     0E37                     	;# 
  3683     0E8F                     	;# 
  3684     0E90                     	;# 
  3685     0E91                     	;# 
  3686     0E92                     	;# 
  3687     0E93                     	;# 
  3688     0E94                     	;# 
  3689     0E95                     	;# 
  3690     0E96                     	;# 
  3691     0E97                     	;# 
  3692     0E9C                     	;# 
  3693     0E9D                     	;# 
  3694     0E9E                     	;# 
  3695     0EA1                     	;# 
  3696     0EA2                     	;# 
  3697     0EA3                     	;# 
  3698     0EA4                     	;# 
  3699     0EA5                     	;# 
  3700     0EA9                     	;# 
  3701     0EAA                     	;# 
  3702     0EAB                     	;# 
  3703     0EAC                     	;# 
  3704     0EB1                     	;# 
  3705     0EB2                     	;# 
  3706     0EB3                     	;# 
  3707     0EB8                     	;# 
  3708     0EB9                     	;# 
  3709     0EBA                     	;# 
  3710     0EBB                     	;# 
  3711     0EBC                     	;# 
  3712     0EBD                     	;# 
  3713     0EBE                     	;# 
  3714     0EC3                     	;# 
  3715     0EC5                     	;# 
  3716     0EC6                     	;# 
  3717     0EC7                     	;# 
  3718     0EC8                     	;# 
  3719     0EC9                     	;# 
  3720     0ECA                     	;# 
  3721     0ECB                     	;# 
  3722     0ECC                     	;# 
  3723     0F10                     	;# 
  3724     0F11                     	;# 
  3725     0F12                     	;# 
  3726     0F13                     	;# 
  3727     0F14                     	;# 
  3728     0F15                     	;# 
  3729     0F16                     	;# 
  3730     0F17                     	;# 
  3731     0F18                     	;# 
  3732     0F19                     	;# 
  3733     0F1A                     	;# 
  3734     0F1B                     	;# 
  3735     0F1C                     	;# 
  3736     0F1D                     	;# 
  3737     0F1E                     	;# 
  3738     0F1F                     	;# 
  3739     0F20                     	;# 
  3740     0F21                     	;# 
  3741     0F22                     	;# 
  3742     0F23                     	;# 
  3743     0F24                     	;# 
  3744     0F25                     	;# 
  3745     0F26                     	;# 
  3746     0F27                     	;# 
  3747     0F38                     	;# 
  3748     0F39                     	;# 
  3749     0F3A                     	;# 
  3750     0F3B                     	;# 
  3751     0F3C                     	;# 
  3752     0F3D                     	;# 
  3753     0F3E                     	;# 
  3754     0F3F                     	;# 
  3755     0F40                     	;# 
  3756     0F41                     	;# 
  3757     0F43                     	;# 
  3758     0F44                     	;# 
  3759     0F45                     	;# 
  3760     0F46                     	;# 
  3761     0F47                     	;# 
  3762     0F48                     	;# 
  3763     0F49                     	;# 
  3764     0F4A                     	;# 
  3765     0F4B                     	;# 
  3766     0F4C                     	;# 
  3767     0F4E                     	;# 
  3768     0F4F                     	;# 
  3769     0F50                     	;# 
  3770     0F51                     	;# 
  3771     0F52                     	;# 
  3772     0F53                     	;# 
  3773     0F54                     	;# 
  3774     0F55                     	;# 
  3775     0F56                     	;# 
  3776     0F57                     	;# 
  3777     0F65                     	;# 
  3778     0F68                     	;# 
  3779     0F69                     	;# 
  3780     0F6A                     	;# 
  3781     0F6B                     	;# 
  3782     0FE4                     	;# 
  3783     0FE5                     	;# 
  3784     0FE6                     	;# 
  3785     0FE7                     	;# 
  3786     0FE8                     	;# 
  3787     0FE9                     	;# 
  3788     0FEA                     	;# 
  3789     0FEB                     	;# 
  3790     0FED                     	;# 
  3791     0FEE                     	;# 
  3792     0FEF                     	;# 
  3793     0000                     	;# 
  3794     0001                     	;# 
  3795     0002                     	;# 
  3796     0003                     	;# 
  3797     0004                     	;# 
  3798     0005                     	;# 
  3799     0006                     	;# 
  3800     0007                     	;# 
  3801     0008                     	;# 
  3802     0009                     	;# 
  3803     000A                     	;# 
  3804     000B                     	;# 
  3805     000C                     	;# 
  3806     000D                     	;# 
  3807     000E                     	;# 
  3808     0010                     	;# 
  3809     0011                     	;# 
  3810     0012                     	;# 
  3811     0013                     	;# 
  3812     0016                     	;# 
  3813     0017                     	;# 
  3814     0018                     	;# 
  3815     001C                     	;# 
  3816     001C                     	;# 
  3817     001D                     	;# 
  3818     001D                     	;# 
  3819     001E                     	;# 
  3820     001F                     	;# 
  3821     008C                     	;# 
  3822     008C                     	;# 
  3823     008D                     	;# 
  3824     008E                     	;# 
  3825     008E                     	;# 
  3826     008F                     	;# 
  3827     0090                     	;# 
  3828     0090                     	;# 
  3829     0091                     	;# 
  3830     0093                     	;# 
  3831     0094                     	;# 
  3832     0095                     	;# 
  3833     0096                     	;# 
  3834     0097                     	;# 
  3835     0098                     	;# 
  3836     0099                     	;# 
  3837     009A                     	;# 
  3838     009B                     	;# 
  3839     009C                     	;# 
  3840     009D                     	;# 
  3841     009E                     	;# 
  3842     010C                     	;# 
  3843     010D                     	;# 
  3844     010E                     	;# 
  3845     010E                     	;# 
  3846     010F                     	;# 
  3847     0110                     	;# 
  3848     0110                     	;# 
  3849     0111                     	;# 
  3850     0112                     	;# 
  3851     0112                     	;# 
  3852     0113                     	;# 
  3853     0114                     	;# 
  3854     0114                     	;# 
  3855     0115                     	;# 
  3856     0116                     	;# 
  3857     0116                     	;# 
  3858     0117                     	;# 
  3859     0119                     	;# 
  3860     0119                     	;# 
  3861     0119                     	;# 
  3862     011A                     	;# 
  3863     011A                     	;# 
  3864     011A                     	;# 
  3865     011B                     	;# 
  3866     011B                     	;# 
  3867     011B                     	;# 
  3868     011B                     	;# 
  3869     011B                     	;# 
  3870     011C                     	;# 
  3871     011C                     	;# 
  3872     011C                     	;# 
  3873     011D                     	;# 
  3874     011D                     	;# 
  3875     011D                     	;# 
  3876     011E                     	;# 
  3877     011E                     	;# 
  3878     011E                     	;# 
  3879     011F                     	;# 
  3880     011F                     	;# 
  3881     011F                     	;# 
  3882     011F                     	;# 
  3883     011F                     	;# 
  3884     018C                     	;# 
  3885     018D                     	;# 
  3886     018E                     	;# 
  3887     018F                     	;# 
  3888     0190                     	;# 
  3889     0191                     	;# 
  3890     0192                     	;# 
  3891     0196                     	;# 
  3892     0197                     	;# 
  3893     0198                     	;# 
  3894     0199                     	;# 
  3895     019A                     	;# 
  3896     019B                     	;# 
  3897     019C                     	;# 
  3898     020C                     	;# 
  3899     020C                     	;# 
  3900     020D                     	;# 
  3901     020E                     	;# 
  3902     020F                     	;# 
  3903     020F                     	;# 
  3904     0210                     	;# 
  3905     0210                     	;# 
  3906     0211                     	;# 
  3907     0211                     	;# 
  3908     0212                     	;# 
  3909     0212                     	;# 
  3910     0213                     	;# 
  3911     0214                     	;# 
  3912     0215                     	;# 
  3913     0215                     	;# 
  3914     0216                     	;# 
  3915     0216                     	;# 
  3916     0217                     	;# 
  3917     0217                     	;# 
  3918     0218                     	;# 
  3919     0218                     	;# 
  3920     0219                     	;# 
  3921     021A                     	;# 
  3922     021B                     	;# 
  3923     021B                     	;# 
  3924     021C                     	;# 
  3925     021C                     	;# 
  3926     021D                     	;# 
  3927     021D                     	;# 
  3928     021E                     	;# 
  3929     021F                     	;# 
  3930     028C                     	;# 
  3931     028C                     	;# 
  3932     028D                     	;# 
  3933     028D                     	;# 
  3934     028E                     	;# 
  3935     028F                     	;# 
  3936     0290                     	;# 
  3937     0290                     	;# 
  3938     0291                     	;# 
  3939     0292                     	;# 
  3940     0292                     	;# 
  3941     0293                     	;# 
  3942     0293                     	;# 
  3943     0294                     	;# 
  3944     0295                     	;# 
  3945     0296                     	;# 
  3946     0296                     	;# 
  3947     0297                     	;# 
  3948     0298                     	;# 
  3949     0298                     	;# 
  3950     0299                     	;# 
  3951     0299                     	;# 
  3952     029A                     	;# 
  3953     029B                     	;# 
  3954     029C                     	;# 
  3955     029C                     	;# 
  3956     029D                     	;# 
  3957     030C                     	;# 
  3958     030C                     	;# 
  3959     030D                     	;# 
  3960     030E                     	;# 
  3961     030F                     	;# 
  3962     0310                     	;# 
  3963     0310                     	;# 
  3964     0311                     	;# 
  3965     0312                     	;# 
  3966     0313                     	;# 
  3967     0314                     	;# 
  3968     0314                     	;# 
  3969     0315                     	;# 
  3970     0316                     	;# 
  3971     0317                     	;# 
  3972     0318                     	;# 
  3973     0318                     	;# 
  3974     0319                     	;# 
  3975     031A                     	;# 
  3976     031B                     	;# 
  3977     031C                     	;# 
  3978     031C                     	;# 
  3979     031D                     	;# 
  3980     031E                     	;# 
  3981     031F                     	;# 
  3982     038C                     	;# 
  3983     038C                     	;# 
  3984     038D                     	;# 
  3985     038E                     	;# 
  3986     0390                     	;# 
  3987     0390                     	;# 
  3988     0391                     	;# 
  3989     0392                     	;# 
  3990     040C                     	;# 
  3991     040D                     	;# 
  3992     040E                     	;# 
  3993     040F                     	;# 
  3994     0410                     	;# 
  3995     0411                     	;# 
  3996     0416                     	;# 
  3997     0416                     	;# 
  3998     0417                     	;# 
  3999     0418                     	;# 
  4000     0418                     	;# 
  4001     0419                     	;# 
  4002     041A                     	;# 
  4003     041A                     	;# 
  4004     041B                     	;# 
  4005     041C                     	;# 
  4006     041C                     	;# 
  4007     041D                     	;# 
  4008     041E                     	;# 
  4009     041F                     	;# 
  4010     048C                     	;# 
  4011     048C                     	;# 
  4012     048D                     	;# 
  4013     048E                     	;# 
  4014     048F                     	;# 
  4015     048F                     	;# 
  4016     0490                     	;# 
  4017     0491                     	;# 
  4018     0492                     	;# 
  4019     0492                     	;# 
  4020     0493                     	;# 
  4021     0494                     	;# 
  4022     0495                     	;# 
  4023     0495                     	;# 
  4024     0496                     	;# 
  4025     0497                     	;# 
  4026     0498                     	;# 
  4027     0499                     	;# 
  4028     049A                     	;# 
  4029     049B                     	;# 
  4030     049C                     	;# 
  4031     049D                     	;# 
  4032     050C                     	;# 
  4033     050C                     	;# 
  4034     050D                     	;# 
  4035     050E                     	;# 
  4036     050F                     	;# 
  4037     050F                     	;# 
  4038     0510                     	;# 
  4039     0511                     	;# 
  4040     0512                     	;# 
  4041     0512                     	;# 
  4042     0513                     	;# 
  4043     0514                     	;# 
  4044     0515                     	;# 
  4045     0515                     	;# 
  4046     0516                     	;# 
  4047     0517                     	;# 
  4048     0518                     	;# 
  4049     0519                     	;# 
  4050     051A                     	;# 
  4051     051B                     	;# 
  4052     051C                     	;# 
  4053     051D                     	;# 
  4054     058C                     	;# 
  4055     058C                     	;# 
  4056     058D                     	;# 
  4057     058E                     	;# 
  4058     058F                     	;# 
  4059     058F                     	;# 
  4060     0590                     	;# 
  4061     0591                     	;# 
  4062     0592                     	;# 
  4063     0593                     	;# 
  4064     060C                     	;# 
  4065     060D                     	;# 
  4066     060E                     	;# 
  4067     060F                     	;# 
  4068     0610                     	;# 
  4069     0611                     	;# 
  4070     0612                     	;# 
  4071     0613                     	;# 
  4072     0614                     	;# 
  4073     0616                     	;# 
  4074     0617                     	;# 
  4075     0618                     	;# 
  4076     0619                     	;# 
  4077     061A                     	;# 
  4078     061B                     	;# 
  4079     061C                     	;# 
  4080     061D                     	;# 
  4081     061E                     	;# 
  4082     068C                     	;# 
  4083     068D                     	;# 
  4084     068E                     	;# 
  4085     068F                     	;# 
  4086     0690                     	;# 
  4087     0691                     	;# 
  4088     0692                     	;# 
  4089     0693                     	;# 
  4090     0694                     	;# 
  4091     070C                     	;# 
  4092     070D                     	;# 
  4093     070E                     	;# 
  4094     070F                     	;# 
  4095     0710                     	;# 
  4096     0711                     	;# 
  4097     0712                     	;# 
  4098     0713                     	;# 
  4099     0714                     	;# 
  4100     0716                     	;# 
  4101     0717                     	;# 
  4102     0718                     	;# 
  4103     0719                     	;# 
  4104     071A                     	;# 
  4105     071B                     	;# 
  4106     071C                     	;# 
  4107     071D                     	;# 
  4108     071E                     	;# 
  4109     0796                     	;# 
  4110     0797                     	;# 
  4111     0798                     	;# 
  4112     0799                     	;# 
  4113     079A                     	;# 
  4114     079B                     	;# 
  4115     080C                     	;# 
  4116     080D                     	;# 
  4117     080E                     	;# 
  4118     080F                     	;# 
  4119     0810                     	;# 
  4120     0811                     	;# 
  4121     0812                     	;# 
  4122     0813                     	;# 
  4123     0814                     	;# 
  4124     081A                     	;# 
  4125     081B                     	;# 
  4126     081C                     	;# 
  4127     081D                     	;# 
  4128     081E                     	;# 
  4129     081F                     	;# 
  4130     088C                     	;# 
  4131     088D                     	;# 
  4132     088E                     	;# 
  4133     088F                     	;# 
  4134     0890                     	;# 
  4135     0891                     	;# 
  4136     0892                     	;# 
  4137     0893                     	;# 
  4138     0895                     	;# 
  4139     0896                     	;# 
  4140     0897                     	;# 
  4141     0898                     	;# 
  4142     0899                     	;# 
  4143     089A                     	;# 
  4144     089B                     	;# 
  4145     090C                     	;# 
  4146     090E                     	;# 
  4147     090F                     	;# 
  4148     091F                     	;# 
  4149     091F                     	;# 
  4150     098F                     	;# 
  4151     098F                     	;# 
  4152     0990                     	;# 
  4153     0991                     	;# 
  4154     0992                     	;# 
  4155     0993                     	;# 
  4156     0994                     	;# 
  4157     0995                     	;# 
  4158     0996                     	;# 
  4159     0997                     	;# 
  4160     0E0F                     	;# 
  4161     0E10                     	;# 
  4162     0E11                     	;# 
  4163     0E12                     	;# 
  4164     0E13                     	;# 
  4165     0E14                     	;# 
  4166     0E15                     	;# 
  4167     0E16                     	;# 
  4168     0E17                     	;# 
  4169     0E18                     	;# 
  4170     0E19                     	;# 
  4171     0E1A                     	;# 
  4172     0E1B                     	;# 
  4173     0E1C                     	;# 
  4174     0E1D                     	;# 
  4175     0E1E                     	;# 
  4176     0E1F                     	;# 
  4177     0E20                     	;# 
  4178     0E21                     	;# 
  4179     0E22                     	;# 
  4180     0E23                     	;# 
  4181     0E24                     	;# 
  4182     0E25                     	;# 
  4183     0E26                     	;# 
  4184     0E27                     	;# 
  4185     0E28                     	;# 
  4186     0E29                     	;# 
  4187     0E2A                     	;# 
  4188     0E2B                     	;# 
  4189     0E2C                     	;# 
  4190     0E2D                     	;# 
  4191     0E2E                     	;# 
  4192     0E2F                     	;# 
  4193     0E30                     	;# 
  4194     0E31                     	;# 
  4195     0E32                     	;# 
  4196     0E33                     	;# 
  4197     0E34                     	;# 
  4198     0E35                     	;# 
  4199     0E36                     	;# 
  4200     0E37                     	;# 
  4201     0E8F                     	;# 
  4202     0E90                     	;# 
  4203     0E91                     	;# 
  4204     0E92                     	;# 
  4205     0E93                     	;# 
  4206     0E94                     	;# 
  4207     0E95                     	;# 
  4208     0E96                     	;# 
  4209     0E97                     	;# 
  4210     0E9C                     	;# 
  4211     0E9D                     	;# 
  4212     0E9E                     	;# 
  4213     0EA1                     	;# 
  4214     0EA2                     	;# 
  4215     0EA3                     	;# 
  4216     0EA4                     	;# 
  4217     0EA5                     	;# 
  4218     0EA9                     	;# 
  4219     0EAA                     	;# 
  4220     0EAB                     	;# 
  4221     0EAC                     	;# 
  4222     0EB1                     	;# 
  4223     0EB2                     	;# 
  4224     0EB3                     	;# 
  4225     0EB8                     	;# 
  4226     0EB9                     	;# 
  4227     0EBA                     	;# 
  4228     0EBB                     	;# 
  4229     0EBC                     	;# 
  4230     0EBD                     	;# 
  4231     0EBE                     	;# 
  4232     0EC3                     	;# 
  4233     0EC5                     	;# 
  4234     0EC6                     	;# 
  4235     0EC7                     	;# 
  4236     0EC8                     	;# 
  4237     0EC9                     	;# 
  4238     0ECA                     	;# 
  4239     0ECB                     	;# 
  4240     0ECC                     	;# 
  4241     0F10                     	;# 
  4242     0F11                     	;# 
  4243     0F12                     	;# 
  4244     0F13                     	;# 
  4245     0F14                     	;# 
  4246     0F15                     	;# 
  4247     0F16                     	;# 
  4248     0F17                     	;# 
  4249     0F18                     	;# 
  4250     0F19                     	;# 
  4251     0F1A                     	;# 
  4252     0F1B                     	;# 
  4253     0F1C                     	;# 
  4254     0F1D                     	;# 
  4255     0F1E                     	;# 
  4256     0F1F                     	;# 
  4257     0F20                     	;# 
  4258     0F21                     	;# 
  4259     0F22                     	;# 
  4260     0F23                     	;# 
  4261     0F24                     	;# 
  4262     0F25                     	;# 
  4263     0F26                     	;# 
  4264     0F27                     	;# 
  4265     0F38                     	;# 
  4266     0F39                     	;# 
  4267     0F3A                     	;# 
  4268     0F3B                     	;# 
  4269     0F3C                     	;# 
  4270     0F3D                     	;# 
  4271     0F3E                     	;# 
  4272     0F3F                     	;# 
  4273     0F40                     	;# 
  4274     0F41                     	;# 
  4275     0F43                     	;# 
  4276     0F44                     	;# 
  4277     0F45                     	;# 
  4278     0F46                     	;# 
  4279     0F47                     	;# 
  4280     0F48                     	;# 
  4281     0F49                     	;# 
  4282     0F4A                     	;# 
  4283     0F4B                     	;# 
  4284     0F4C                     	;# 
  4285     0F4E                     	;# 
  4286     0F4F                     	;# 
  4287     0F50                     	;# 
  4288     0F51                     	;# 
  4289     0F52                     	;# 
  4290     0F53                     	;# 
  4291     0F54                     	;# 
  4292     0F55                     	;# 
  4293     0F56                     	;# 
  4294     0F57                     	;# 
  4295     0F65                     	;# 
  4296     0F68                     	;# 
  4297     0F69                     	;# 
  4298     0F6A                     	;# 
  4299     0F6B                     	;# 
  4300     0FE4                     	;# 
  4301     0FE5                     	;# 
  4302     0FE6                     	;# 
  4303     0FE7                     	;# 
  4304     0FE8                     	;# 
  4305     0FE9                     	;# 
  4306     0FEA                     	;# 
  4307     0FEB                     	;# 
  4308     0FED                     	;# 
  4309     0FEE                     	;# 
  4310     0FEF                     	;# 
  4311     0000                     	;# 
  4312     0001                     	;# 
  4313     0002                     	;# 
  4314     0003                     	;# 
  4315     0004                     	;# 
  4316     0005                     	;# 
  4317     0006                     	;# 
  4318     0007                     	;# 
  4319     0008                     	;# 
  4320     0009                     	;# 
  4321     000A                     	;# 
  4322     000B                     	;# 
  4323     000C                     	;# 
  4324     000D                     	;# 
  4325     000E                     	;# 
  4326     0010                     	;# 
  4327     0011                     	;# 
  4328     0012                     	;# 
  4329     0013                     	;# 
  4330     0016                     	;# 
  4331     0017                     	;# 
  4332     0018                     	;# 
  4333     001C                     	;# 
  4334     001C                     	;# 
  4335     001D                     	;# 
  4336     001D                     	;# 
  4337     001E                     	;# 
  4338     001F                     	;# 
  4339     008C                     	;# 
  4340     008C                     	;# 
  4341     008D                     	;# 
  4342     008E                     	;# 
  4343     008E                     	;# 
  4344     008F                     	;# 
  4345     0090                     	;# 
  4346     0090                     	;# 
  4347     0091                     	;# 
  4348     0093                     	;# 
  4349     0094                     	;# 
  4350     0095                     	;# 
  4351     0096                     	;# 
  4352     0097                     	;# 
  4353     0098                     	;# 
  4354     0099                     	;# 
  4355     009A                     	;# 
  4356     009B                     	;# 
  4357     009C                     	;# 
  4358     009D                     	;# 
  4359     009E                     	;# 
  4360     010C                     	;# 
  4361     010D                     	;# 
  4362     010E                     	;# 
  4363     010E                     	;# 
  4364     010F                     	;# 
  4365     0110                     	;# 
  4366     0110                     	;# 
  4367     0111                     	;# 
  4368     0112                     	;# 
  4369     0112                     	;# 
  4370     0113                     	;# 
  4371     0114                     	;# 
  4372     0114                     	;# 
  4373     0115                     	;# 
  4374     0116                     	;# 
  4375     0116                     	;# 
  4376     0117                     	;# 
  4377     0119                     	;# 
  4378     0119                     	;# 
  4379     0119                     	;# 
  4380     011A                     	;# 
  4381     011A                     	;# 
  4382     011A                     	;# 
  4383     011B                     	;# 
  4384     011B                     	;# 
  4385     011B                     	;# 
  4386     011B                     	;# 
  4387     011B                     	;# 
  4388     011C                     	;# 
  4389     011C                     	;# 
  4390     011C                     	;# 
  4391     011D                     	;# 
  4392     011D                     	;# 
  4393     011D                     	;# 
  4394     011E                     	;# 
  4395     011E                     	;# 
  4396     011E                     	;# 
  4397     011F                     	;# 
  4398     011F                     	;# 
  4399     011F                     	;# 
  4400     011F                     	;# 
  4401     011F                     	;# 
  4402     018C                     	;# 
  4403     018D                     	;# 
  4404     018E                     	;# 
  4405     018F                     	;# 
  4406     0190                     	;# 
  4407     0191                     	;# 
  4408     0192                     	;# 
  4409     0196                     	;# 
  4410     0197                     	;# 
  4411     0198                     	;# 
  4412     0199                     	;# 
  4413     019A                     	;# 
  4414     019B                     	;# 
  4415     019C                     	;# 
  4416     020C                     	;# 
  4417     020C                     	;# 
  4418     020D                     	;# 
  4419     020E                     	;# 
  4420     020F                     	;# 
  4421     020F                     	;# 
  4422     0210                     	;# 
  4423     0210                     	;# 
  4424     0211                     	;# 
  4425     0211                     	;# 
  4426     0212                     	;# 
  4427     0212                     	;# 
  4428     0213                     	;# 
  4429     0214                     	;# 
  4430     0215                     	;# 
  4431     0215                     	;# 
  4432     0216                     	;# 
  4433     0216                     	;# 
  4434     0217                     	;# 
  4435     0217                     	;# 
  4436     0218                     	;# 
  4437     0218                     	;# 
  4438     0219                     	;# 
  4439     021A                     	;# 
  4440     021B                     	;# 
  4441     021B                     	;# 
  4442     021C                     	;# 
  4443     021C                     	;# 
  4444     021D                     	;# 
  4445     021D                     	;# 
  4446     021E                     	;# 
  4447     021F                     	;# 
  4448     028C                     	;# 
  4449     028C                     	;# 
  4450     028D                     	;# 
  4451     028D                     	;# 
  4452     028E                     	;# 
  4453     028F                     	;# 
  4454     0290                     	;# 
  4455     0290                     	;# 
  4456     0291                     	;# 
  4457     0292                     	;# 
  4458     0292                     	;# 
  4459     0293                     	;# 
  4460     0293                     	;# 
  4461     0294                     	;# 
  4462     0295                     	;# 
  4463     0296                     	;# 
  4464     0296                     	;# 
  4465     0297                     	;# 
  4466     0298                     	;# 
  4467     0298                     	;# 
  4468     0299                     	;# 
  4469     0299                     	;# 
  4470     029A                     	;# 
  4471     029B                     	;# 
  4472     029C                     	;# 
  4473     029C                     	;# 
  4474     029D                     	;# 
  4475     030C                     	;# 
  4476     030C                     	;# 
  4477     030D                     	;# 
  4478     030E                     	;# 
  4479     030F                     	;# 
  4480     0310                     	;# 
  4481     0310                     	;# 
  4482     0311                     	;# 
  4483     0312                     	;# 
  4484     0313                     	;# 
  4485     0314                     	;# 
  4486     0314                     	;# 
  4487     0315                     	;# 
  4488     0316                     	;# 
  4489     0317                     	;# 
  4490     0318                     	;# 
  4491     0318                     	;# 
  4492     0319                     	;# 
  4493     031A                     	;# 
  4494     031B                     	;# 
  4495     031C                     	;# 
  4496     031C                     	;# 
  4497     031D                     	;# 
  4498     031E                     	;# 
  4499     031F                     	;# 
  4500     038C                     	;# 
  4501     038C                     	;# 
  4502     038D                     	;# 
  4503     038E                     	;# 
  4504     0390                     	;# 
  4505     0390                     	;# 
  4506     0391                     	;# 
  4507     0392                     	;# 
  4508     040C                     	;# 
  4509     040D                     	;# 
  4510     040E                     	;# 
  4511     040F                     	;# 
  4512     0410                     	;# 
  4513     0411                     	;# 
  4514     0416                     	;# 
  4515     0416                     	;# 
  4516     0417                     	;# 
  4517     0418                     	;# 
  4518     0418                     	;# 
  4519     0419                     	;# 
  4520     041A                     	;# 
  4521     041A                     	;# 
  4522     041B                     	;# 
  4523     041C                     	;# 
  4524     041C                     	;# 
  4525     041D                     	;# 
  4526     041E                     	;# 
  4527     041F                     	;# 
  4528     048C                     	;# 
  4529     048C                     	;# 
  4530     048D                     	;# 
  4531     048E                     	;# 
  4532     048F                     	;# 
  4533     048F                     	;# 
  4534     0490                     	;# 
  4535     0491                     	;# 
  4536     0492                     	;# 
  4537     0492                     	;# 
  4538     0493                     	;# 
  4539     0494                     	;# 
  4540     0495                     	;# 
  4541     0495                     	;# 
  4542     0496                     	;# 
  4543     0497                     	;# 
  4544     0498                     	;# 
  4545     0499                     	;# 
  4546     049A                     	;# 
  4547     049B                     	;# 
  4548     049C                     	;# 
  4549     049D                     	;# 
  4550     050C                     	;# 
  4551     050C                     	;# 
  4552     050D                     	;# 
  4553     050E                     	;# 
  4554     050F                     	;# 
  4555     050F                     	;# 
  4556     0510                     	;# 
  4557     0511                     	;# 
  4558     0512                     	;# 
  4559     0512                     	;# 
  4560     0513                     	;# 
  4561     0514                     	;# 
  4562     0515                     	;# 
  4563     0515                     	;# 
  4564     0516                     	;# 
  4565     0517                     	;# 
  4566     0518                     	;# 
  4567     0519                     	;# 
  4568     051A                     	;# 
  4569     051B                     	;# 
  4570     051C                     	;# 
  4571     051D                     	;# 
  4572     058C                     	;# 
  4573     058C                     	;# 
  4574     058D                     	;# 
  4575     058E                     	;# 
  4576     058F                     	;# 
  4577     058F                     	;# 
  4578     0590                     	;# 
  4579     0591                     	;# 
  4580     0592                     	;# 
  4581     0593                     	;# 
  4582     060C                     	;# 
  4583     060D                     	;# 
  4584     060E                     	;# 
  4585     060F                     	;# 
  4586     0610                     	;# 
  4587     0611                     	;# 
  4588     0612                     	;# 
  4589     0613                     	;# 
  4590     0614                     	;# 
  4591     0616                     	;# 
  4592     0617                     	;# 
  4593     0618                     	;# 
  4594     0619                     	;# 
  4595     061A                     	;# 
  4596     061B                     	;# 
  4597     061C                     	;# 
  4598     061D                     	;# 
  4599     061E                     	;# 
  4600     068C                     	;# 
  4601     068D                     	;# 
  4602     068E                     	;# 
  4603     068F                     	;# 
  4604     0690                     	;# 
  4605     0691                     	;# 
  4606     0692                     	;# 
  4607     0693                     	;# 
  4608     0694                     	;# 
  4609     070C                     	;# 
  4610     070D                     	;# 
  4611     070E                     	;# 
  4612     070F                     	;# 
  4613     0710                     	;# 
  4614     0711                     	;# 
  4615     0712                     	;# 
  4616     0713                     	;# 
  4617     0714                     	;# 
  4618     0716                     	;# 
  4619     0717                     	;# 
  4620     0718                     	;# 
  4621     0719                     	;# 
  4622     071A                     	;# 
  4623     071B                     	;# 
  4624     071C                     	;# 
  4625     071D                     	;# 
  4626     071E                     	;# 
  4627     0796                     	;# 
  4628     0797                     	;# 
  4629     0798                     	;# 
  4630     0799                     	;# 
  4631     079A                     	;# 
  4632     079B                     	;# 
  4633     080C                     	;# 
  4634     080D                     	;# 
  4635     080E                     	;# 
  4636     080F                     	;# 
  4637     0810                     	;# 
  4638     0811                     	;# 
  4639     0812                     	;# 
  4640     0813                     	;# 
  4641     0814                     	;# 
  4642     081A                     	;# 
  4643     081B                     	;# 
  4644     081C                     	;# 
  4645     081D                     	;# 
  4646     081E                     	;# 
  4647     081F                     	;# 
  4648     088C                     	;# 
  4649     088D                     	;# 
  4650     088E                     	;# 
  4651     088F                     	;# 
  4652     0890                     	;# 
  4653     0891                     	;# 
  4654     0892                     	;# 
  4655     0893                     	;# 
  4656     0895                     	;# 
  4657     0896                     	;# 
  4658     0897                     	;# 
  4659     0898                     	;# 
  4660     0899                     	;# 
  4661     089A                     	;# 
  4662     089B                     	;# 
  4663     090C                     	;# 
  4664     090E                     	;# 
  4665     090F                     	;# 
  4666     091F                     	;# 
  4667     091F                     	;# 
  4668     098F                     	;# 
  4669     098F                     	;# 
  4670     0990                     	;# 
  4671     0991                     	;# 
  4672     0992                     	;# 
  4673     0993                     	;# 
  4674     0994                     	;# 
  4675     0995                     	;# 
  4676     0996                     	;# 
  4677     0997                     	;# 
  4678     0E0F                     	;# 
  4679     0E10                     	;# 
  4680     0E11                     	;# 
  4681     0E12                     	;# 
  4682     0E13                     	;# 
  4683     0E14                     	;# 
  4684     0E15                     	;# 
  4685     0E16                     	;# 
  4686     0E17                     	;# 
  4687     0E18                     	;# 
  4688     0E19                     	;# 
  4689     0E1A                     	;# 
  4690     0E1B                     	;# 
  4691     0E1C                     	;# 
  4692     0E1D                     	;# 
  4693     0E1E                     	;# 
  4694     0E1F                     	;# 
  4695     0E20                     	;# 
  4696     0E21                     	;# 
  4697     0E22                     	;# 
  4698     0E23                     	;# 
  4699     0E24                     	;# 
  4700     0E25                     	;# 
  4701     0E26                     	;# 
  4702     0E27                     	;# 
  4703     0E28                     	;# 
  4704     0E29                     	;# 
  4705     0E2A                     	;# 
  4706     0E2B                     	;# 
  4707     0E2C                     	;# 
  4708     0E2D                     	;# 
  4709     0E2E                     	;# 
  4710     0E2F                     	;# 
  4711     0E30                     	;# 
  4712     0E31                     	;# 
  4713     0E32                     	;# 
  4714     0E33                     	;# 
  4715     0E34                     	;# 
  4716     0E35                     	;# 
  4717     0E36                     	;# 
  4718     0E37                     	;# 
  4719     0E8F                     	;# 
  4720     0E90                     	;# 
  4721     0E91                     	;# 
  4722     0E92                     	;# 
  4723     0E93                     	;# 
  4724     0E94                     	;# 
  4725     0E95                     	;# 
  4726     0E96                     	;# 
  4727     0E97                     	;# 
  4728     0E9C                     	;# 
  4729     0E9D                     	;# 
  4730     0E9E                     	;# 
  4731     0EA1                     	;# 
  4732     0EA2                     	;# 
  4733     0EA3                     	;# 
  4734     0EA4                     	;# 
  4735     0EA5                     	;# 
  4736     0EA9                     	;# 
  4737     0EAA                     	;# 
  4738     0EAB                     	;# 
  4739     0EAC                     	;# 
  4740     0EB1                     	;# 
  4741     0EB2                     	;# 
  4742     0EB3                     	;# 
  4743     0EB8                     	;# 
  4744     0EB9                     	;# 
  4745     0EBA                     	;# 
  4746     0EBB                     	;# 
  4747     0EBC                     	;# 
  4748     0EBD                     	;# 
  4749     0EBE                     	;# 
  4750     0EC3                     	;# 
  4751     0EC5                     	;# 
  4752     0EC6                     	;# 
  4753     0EC7                     	;# 
  4754     0EC8                     	;# 
  4755     0EC9                     	;# 
  4756     0ECA                     	;# 
  4757     0ECB                     	;# 
  4758     0ECC                     	;# 
  4759     0F10                     	;# 
  4760     0F11                     	;# 
  4761     0F12                     	;# 
  4762     0F13                     	;# 
  4763     0F14                     	;# 
  4764     0F15                     	;# 
  4765     0F16                     	;# 
  4766     0F17                     	;# 
  4767     0F18                     	;# 
  4768     0F19                     	;# 
  4769     0F1A                     	;# 
  4770     0F1B                     	;# 
  4771     0F1C                     	;# 
  4772     0F1D                     	;# 
  4773     0F1E                     	;# 
  4774     0F1F                     	;# 
  4775     0F20                     	;# 
  4776     0F21                     	;# 
  4777     0F22                     	;# 
  4778     0F23                     	;# 
  4779     0F24                     	;# 
  4780     0F25                     	;# 
  4781     0F26                     	;# 
  4782     0F27                     	;# 
  4783     0F38                     	;# 
  4784     0F39                     	;# 
  4785     0F3A                     	;# 
  4786     0F3B                     	;# 
  4787     0F3C                     	;# 
  4788     0F3D                     	;# 
  4789     0F3E                     	;# 
  4790     0F3F                     	;# 
  4791     0F40                     	;# 
  4792     0F41                     	;# 
  4793     0F43                     	;# 
  4794     0F44                     	;# 
  4795     0F45                     	;# 
  4796     0F46                     	;# 
  4797     0F47                     	;# 
  4798     0F48                     	;# 
  4799     0F49                     	;# 
  4800     0F4A                     	;# 
  4801     0F4B                     	;# 
  4802     0F4C                     	;# 
  4803     0F4E                     	;# 
  4804     0F4F                     	;# 
  4805     0F50                     	;# 
  4806     0F51                     	;# 
  4807     0F52                     	;# 
  4808     0F53                     	;# 
  4809     0F54                     	;# 
  4810     0F55                     	;# 
  4811     0F56                     	;# 
  4812     0F57                     	;# 
  4813     0F65                     	;# 
  4814     0F68                     	;# 
  4815     0F69                     	;# 
  4816     0F6A                     	;# 
  4817     0F6B                     	;# 
  4818     0FE4                     	;# 
  4819     0FE5                     	;# 
  4820     0FE6                     	;# 
  4821     0FE7                     	;# 
  4822     0FE8                     	;# 
  4823     0FE9                     	;# 
  4824     0FEA                     	;# 
  4825     0FEB                     	;# 
  4826     0FED                     	;# 
  4827     0FEE                     	;# 
  4828     0FEF                     	;# 
  4829     0000                     	;# 
  4830     0001                     	;# 
  4831     0002                     	;# 
  4832     0003                     	;# 
  4833     0004                     	;# 
  4834     0005                     	;# 
  4835     0006                     	;# 
  4836     0007                     	;# 
  4837     0008                     	;# 
  4838     0009                     	;# 
  4839     000A                     	;# 
  4840     000B                     	;# 
  4841     000C                     	;# 
  4842     000D                     	;# 
  4843     000E                     	;# 
  4844     0010                     	;# 
  4845     0011                     	;# 
  4846     0012                     	;# 
  4847     0013                     	;# 
  4848     0016                     	;# 
  4849     0017                     	;# 
  4850     0018                     	;# 
  4851     001C                     	;# 
  4852     001C                     	;# 
  4853     001D                     	;# 
  4854     001D                     	;# 
  4855     001E                     	;# 
  4856     001F                     	;# 
  4857     008C                     	;# 
  4858     008C                     	;# 
  4859     008D                     	;# 
  4860     008E                     	;# 
  4861     008E                     	;# 
  4862     008F                     	;# 
  4863     0090                     	;# 
  4864     0090                     	;# 
  4865     0091                     	;# 
  4866     0093                     	;# 
  4867     0094                     	;# 
  4868     0095                     	;# 
  4869     0096                     	;# 
  4870     0097                     	;# 
  4871     0098                     	;# 
  4872     0099                     	;# 
  4873     009A                     	;# 
  4874     009B                     	;# 
  4875     009C                     	;# 
  4876     009D                     	;# 
  4877     009E                     	;# 
  4878     010C                     	;# 
  4879     010D                     	;# 
  4880     010E                     	;# 
  4881     010E                     	;# 
  4882     010F                     	;# 
  4883     0110                     	;# 
  4884     0110                     	;# 
  4885     0111                     	;# 
  4886     0112                     	;# 
  4887     0112                     	;# 
  4888     0113                     	;# 
  4889     0114                     	;# 
  4890     0114                     	;# 
  4891     0115                     	;# 
  4892     0116                     	;# 
  4893     0116                     	;# 
  4894     0117                     	;# 
  4895     0119                     	;# 
  4896     0119                     	;# 
  4897     0119                     	;# 
  4898     011A                     	;# 
  4899     011A                     	;# 
  4900     011A                     	;# 
  4901     011B                     	;# 
  4902     011B                     	;# 
  4903     011B                     	;# 
  4904     011B                     	;# 
  4905     011B                     	;# 
  4906     011C                     	;# 
  4907     011C                     	;# 
  4908     011C                     	;# 
  4909     011D                     	;# 
  4910     011D                     	;# 
  4911     011D                     	;# 
  4912     011E                     	;# 
  4913     011E                     	;# 
  4914     011E                     	;# 
  4915     011F                     	;# 
  4916     011F                     	;# 
  4917     011F                     	;# 
  4918     011F                     	;# 
  4919     011F                     	;# 
  4920     018C                     	;# 
  4921     018D                     	;# 
  4922     018E                     	;# 
  4923     018F                     	;# 
  4924     0190                     	;# 
  4925     0191                     	;# 
  4926     0192                     	;# 
  4927     0196                     	;# 
  4928     0197                     	;# 
  4929     0198                     	;# 
  4930     0199                     	;# 
  4931     019A                     	;# 
  4932     019B                     	;# 
  4933     019C                     	;# 
  4934     020C                     	;# 
  4935     020C                     	;# 
  4936     020D                     	;# 
  4937     020E                     	;# 
  4938     020F                     	;# 
  4939     020F                     	;# 
  4940     0210                     	;# 
  4941     0210                     	;# 
  4942     0211                     	;# 
  4943     0211                     	;# 
  4944     0212                     	;# 
  4945     0212                     	;# 
  4946     0213                     	;# 
  4947     0214                     	;# 
  4948     0215                     	;# 
  4949     0215                     	;# 
  4950     0216                     	;# 
  4951     0216                     	;# 
  4952     0217                     	;# 
  4953     0217                     	;# 
  4954     0218                     	;# 
  4955     0218                     	;# 
  4956     0219                     	;# 
  4957     021A                     	;# 
  4958     021B                     	;# 
  4959     021B                     	;# 
  4960     021C                     	;# 
  4961     021C                     	;# 
  4962     021D                     	;# 
  4963     021D                     	;# 
  4964     021E                     	;# 
  4965     021F                     	;# 
  4966     028C                     	;# 
  4967     028C                     	;# 
  4968     028D                     	;# 
  4969     028D                     	;# 
  4970     028E                     	;# 
  4971     028F                     	;# 
  4972     0290                     	;# 
  4973     0290                     	;# 
  4974     0291                     	;# 
  4975     0292                     	;# 
  4976     0292                     	;# 
  4977     0293                     	;# 
  4978     0293                     	;# 
  4979     0294                     	;# 
  4980     0295                     	;# 
  4981     0296                     	;# 
  4982     0296                     	;# 
  4983     0297                     	;# 
  4984     0298                     	;# 
  4985     0298                     	;# 
  4986     0299                     	;# 
  4987     0299                     	;# 
  4988     029A                     	;# 
  4989     029B                     	;# 
  4990     029C                     	;# 
  4991     029C                     	;# 
  4992     029D                     	;# 
  4993     030C                     	;# 
  4994     030C                     	;# 
  4995     030D                     	;# 
  4996     030E                     	;# 
  4997     030F                     	;# 
  4998     0310                     	;# 
  4999     0310                     	;# 
  5000     0311                     	;# 
  5001     0312                     	;# 
  5002     0313                     	;# 
  5003     0314                     	;# 
  5004     0314                     	;# 
  5005     0315                     	;# 
  5006     0316                     	;# 
  5007     0317                     	;# 
  5008     0318                     	;# 
  5009     0318                     	;# 
  5010     0319                     	;# 
  5011     031A                     	;# 
  5012     031B                     	;# 
  5013     031C                     	;# 
  5014     031C                     	;# 
  5015     031D                     	;# 
  5016     031E                     	;# 
  5017     031F                     	;# 
  5018     038C                     	;# 
  5019     038C                     	;# 
  5020     038D                     	;# 
  5021     038E                     	;# 
  5022     0390                     	;# 
  5023     0390                     	;# 
  5024     0391                     	;# 
  5025     0392                     	;# 
  5026     040C                     	;# 
  5027     040D                     	;# 
  5028     040E                     	;# 
  5029     040F                     	;# 
  5030     0410                     	;# 
  5031     0411                     	;# 
  5032     0416                     	;# 
  5033     0416                     	;# 
  5034     0417                     	;# 
  5035     0418                     	;# 
  5036     0418                     	;# 
  5037     0419                     	;# 
  5038     041A                     	;# 
  5039     041A                     	;# 
  5040     041B                     	;# 
  5041     041C                     	;# 
  5042     041C                     	;# 
  5043     041D                     	;# 
  5044     041E                     	;# 
  5045     041F                     	;# 
  5046     048C                     	;# 
  5047     048C                     	;# 
  5048     048D                     	;# 
  5049     048E                     	;# 
  5050     048F                     	;# 
  5051     048F                     	;# 
  5052     0490                     	;# 
  5053     0491                     	;# 
  5054     0492                     	;# 
  5055     0492                     	;# 
  5056     0493                     	;# 
  5057     0494                     	;# 
  5058     0495                     	;# 
  5059     0495                     	;# 
  5060     0496                     	;# 
  5061     0497                     	;# 
  5062     0498                     	;# 
  5063     0499                     	;# 
  5064     049A                     	;# 
  5065     049B                     	;# 
  5066     049C                     	;# 
  5067     049D                     	;# 
  5068     050C                     	;# 
  5069     050C                     	;# 
  5070     050D                     	;# 
  5071     050E                     	;# 
  5072     050F                     	;# 
  5073     050F                     	;# 
  5074     0510                     	;# 
  5075     0511                     	;# 
  5076     0512                     	;# 
  5077     0512                     	;# 
  5078     0513                     	;# 
  5079     0514                     	;# 
  5080     0515                     	;# 
  5081     0515                     	;# 
  5082     0516                     	;# 
  5083     0517                     	;# 
  5084     0518                     	;# 
  5085     0519                     	;# 
  5086     051A                     	;# 
  5087     051B                     	;# 
  5088     051C                     	;# 
  5089     051D                     	;# 
  5090     058C                     	;# 
  5091     058C                     	;# 
  5092     058D                     	;# 
  5093     058E                     	;# 
  5094     058F                     	;# 
  5095     058F                     	;# 
  5096     0590                     	;# 
  5097     0591                     	;# 
  5098     0592                     	;# 
  5099     0593                     	;# 
  5100     060C                     	;# 
  5101     060D                     	;# 
  5102     060E                     	;# 
  5103     060F                     	;# 
  5104     0610                     	;# 
  5105     0611                     	;# 
  5106     0612                     	;# 
  5107     0613                     	;# 
  5108     0614                     	;# 
  5109     0616                     	;# 
  5110     0617                     	;# 
  5111     0618                     	;# 
  5112     0619                     	;# 
  5113     061A                     	;# 
  5114     061B                     	;# 
  5115     061C                     	;# 
  5116     061D                     	;# 
  5117     061E                     	;# 
  5118     068C                     	;# 
  5119     068D                     	;# 
  5120     068E                     	;# 
  5121     068F                     	;# 
  5122     0690                     	;# 
  5123     0691                     	;# 
  5124     0692                     	;# 
  5125     0693                     	;# 
  5126     0694                     	;# 
  5127     070C                     	;# 
  5128     070D                     	;# 
  5129     070E                     	;# 
  5130     070F                     	;# 
  5131     0710                     	;# 
  5132     0711                     	;# 
  5133     0712                     	;# 
  5134     0713                     	;# 
  5135     0714                     	;# 
  5136     0716                     	;# 
  5137     0717                     	;# 
  5138     0718                     	;# 
  5139     0719                     	;# 
  5140     071A                     	;# 
  5141     071B                     	;# 
  5142     071C                     	;# 
  5143     071D                     	;# 
  5144     071E                     	;# 
  5145     0796                     	;# 
  5146     0797                     	;# 
  5147     0798                     	;# 
  5148     0799                     	;# 
  5149     079A                     	;# 
  5150     079B                     	;# 
  5151     080C                     	;# 
  5152     080D                     	;# 
  5153     080E                     	;# 
  5154     080F                     	;# 
  5155     0810                     	;# 
  5156     0811                     	;# 
  5157     0812                     	;# 
  5158     0813                     	;# 
  5159     0814                     	;# 
  5160     081A                     	;# 
  5161     081B                     	;# 
  5162     081C                     	;# 
  5163     081D                     	;# 
  5164     081E                     	;# 
  5165     081F                     	;# 
  5166     088C                     	;# 
  5167     088D                     	;# 
  5168     088E                     	;# 
  5169     088F                     	;# 
  5170     0890                     	;# 
  5171     0891                     	;# 
  5172     0892                     	;# 
  5173     0893                     	;# 
  5174     0895                     	;# 
  5175     0896                     	;# 
  5176     0897                     	;# 
  5177     0898                     	;# 
  5178     0899                     	;# 
  5179     089A                     	;# 
  5180     089B                     	;# 
  5181     090C                     	;# 
  5182     090E                     	;# 
  5183     090F                     	;# 
  5184     091F                     	;# 
  5185     091F                     	;# 
  5186     098F                     	;# 
  5187     098F                     	;# 
  5188     0990                     	;# 
  5189     0991                     	;# 
  5190     0992                     	;# 
  5191     0993                     	;# 
  5192     0994                     	;# 
  5193     0995                     	;# 
  5194     0996                     	;# 
  5195     0997                     	;# 
  5196     0E0F                     	;# 
  5197     0E10                     	;# 
  5198     0E11                     	;# 
  5199     0E12                     	;# 
  5200     0E13                     	;# 
  5201     0E14                     	;# 
  5202     0E15                     	;# 
  5203     0E16                     	;# 
  5204     0E17                     	;# 
  5205     0E18                     	;# 
  5206     0E19                     	;# 
  5207     0E1A                     	;# 
  5208     0E1B                     	;# 
  5209     0E1C                     	;# 
  5210     0E1D                     	;# 
  5211     0E1E                     	;# 
  5212     0E1F                     	;# 
  5213     0E20                     	;# 
  5214     0E21                     	;# 
  5215     0E22                     	;# 
  5216     0E23                     	;# 
  5217     0E24                     	;# 
  5218     0E25                     	;# 
  5219     0E26                     	;# 
  5220     0E27                     	;# 
  5221     0E28                     	;# 
  5222     0E29                     	;# 
  5223     0E2A                     	;# 
  5224     0E2B                     	;# 
  5225     0E2C                     	;# 
  5226     0E2D                     	;# 
  5227     0E2E                     	;# 
  5228     0E2F                     	;# 
  5229     0E30                     	;# 
  5230     0E31                     	;# 
  5231     0E32                     	;# 
  5232     0E33                     	;# 
  5233     0E34                     	;# 
  5234     0E35                     	;# 
  5235     0E36                     	;# 
  5236     0E37                     	;# 
  5237     0E8F                     	;# 
  5238     0E90                     	;# 
  5239     0E91                     	;# 
  5240     0E92                     	;# 
  5241     0E93                     	;# 
  5242     0E94                     	;# 
  5243     0E95                     	;# 
  5244     0E96                     	;# 
  5245     0E97                     	;# 
  5246     0E9C                     	;# 
  5247     0E9D                     	;# 
  5248     0E9E                     	;# 
  5249     0EA1                     	;# 
  5250     0EA2                     	;# 
  5251     0EA3                     	;# 
  5252     0EA4                     	;# 
  5253     0EA5                     	;# 
  5254     0EA9                     	;# 
  5255     0EAA                     	;# 
  5256     0EAB                     	;# 
  5257     0EAC                     	;# 
  5258     0EB1                     	;# 
  5259     0EB2                     	;# 
  5260     0EB3                     	;# 
  5261     0EB8                     	;# 
  5262     0EB9                     	;# 
  5263     0EBA                     	;# 
  5264     0EBB                     	;# 
  5265     0EBC                     	;# 
  5266     0EBD                     	;# 
  5267     0EBE                     	;# 
  5268     0EC3                     	;# 
  5269     0EC5                     	;# 
  5270     0EC6                     	;# 
  5271     0EC7                     	;# 
  5272     0EC8                     	;# 
  5273     0EC9                     	;# 
  5274     0ECA                     	;# 
  5275     0ECB                     	;# 
  5276     0ECC                     	;# 
  5277     0F10                     	;# 
  5278     0F11                     	;# 
  5279     0F12                     	;# 
  5280     0F13                     	;# 
  5281     0F14                     	;# 
  5282     0F15                     	;# 
  5283     0F16                     	;# 
  5284     0F17                     	;# 
  5285     0F18                     	;# 
  5286     0F19                     	;# 
  5287     0F1A                     	;# 
  5288     0F1B                     	;# 
  5289     0F1C                     	;# 
  5290     0F1D                     	;# 
  5291     0F1E                     	;# 
  5292     0F1F                     	;# 
  5293     0F20                     	;# 
  5294     0F21                     	;# 
  5295     0F22                     	;# 
  5296     0F23                     	;# 
  5297     0F24                     	;# 
  5298     0F25                     	;# 
  5299     0F26                     	;# 
  5300     0F27                     	;# 
  5301     0F38                     	;# 
  5302     0F39                     	;# 
  5303     0F3A                     	;# 
  5304     0F3B                     	;# 
  5305     0F3C                     	;# 
  5306     0F3D                     	;# 
  5307     0F3E                     	;# 
  5308     0F3F                     	;# 
  5309     0F40                     	;# 
  5310     0F41                     	;# 
  5311     0F43                     	;# 
  5312     0F44                     	;# 
  5313     0F45                     	;# 
  5314     0F46                     	;# 
  5315     0F47                     	;# 
  5316     0F48                     	;# 
  5317     0F49                     	;# 
  5318     0F4A                     	;# 
  5319     0F4B                     	;# 
  5320     0F4C                     	;# 
  5321     0F4E                     	;# 
  5322     0F4F                     	;# 
  5323     0F50                     	;# 
  5324     0F51                     	;# 
  5325     0F52                     	;# 
  5326     0F53                     	;# 
  5327     0F54                     	;# 
  5328     0F55                     	;# 
  5329     0F56                     	;# 
  5330     0F57                     	;# 
  5331     0F65                     	;# 
  5332     0F68                     	;# 
  5333     0F69                     	;# 
  5334     0F6A                     	;# 
  5335     0F6B                     	;# 
  5336     0FE4                     	;# 
  5337     0FE5                     	;# 
  5338     0FE6                     	;# 
  5339     0FE7                     	;# 
  5340     0FE8                     	;# 
  5341     0FE9                     	;# 
  5342     0FEA                     	;# 
  5343     0FEB                     	;# 
  5344     0FED                     	;# 
  5345     0FEE                     	;# 
  5346     0FEF                     	;_aic32config_page
  5347                           
  5348 ;; Function _MASTER0_open is unused but had its address taken
  5349     0000                     
  5350 ;; Function _SPI2_ExchangeByte is unused but had its address taken
  5351     0000                     
  5352 ;; Function _SPI2_ExchangeBlock is unused but had its address taken
  5353     0000                     
  5354 ;; Function _SPI2_WriteBlock is unused but had its address taken
  5355     0000                     
  5356 ;; Function _SPI2_ReadBlock is unused but had its address taken
  5357     0000                     
  5358                           	psect	idataBIGRAM
  5359     0E2A                     __pidataBIGRAM:
  5360                           
  5361                           ;initializer for _aic32config_page
  5362     0E2A  3400               	retlw	0
  5363     0E2B  3400               	retlw	0
  5364     0E2C  3401               	retlw	1
  5365     0E2D  3401               	retlw	1
  5366     0E2E  340B               	retlw	11
  5367     0E2F  3481               	retlw	129
  5368     0E30  340C               	retlw	12
  5369     0E31  3482               	retlw	130
  5370     0E32  340D               	retlw	13
  5371     0E33  3400               	retlw	0
  5372     0E34  340E               	retlw	14
  5373     0E35  3480               	retlw	128
  5374     0E36  3412               	retlw	18
  5375     0E37  3481               	retlw	129
  5376     0E38  3413               	retlw	19
  5377     0E39  3482               	retlw	130
  5378     0E3A  3414               	retlw	20
  5379     0E3B  3480               	retlw	128
  5380     0E3C  341B               	retlw	27
  5381     0E3D  3400               	retlw	0
  5382     0E3E  3437               	retlw	55
  5383     0E3F  340E               	retlw	14
  5384     0E40  3438               	retlw	56
  5385     0E41  3402               	retlw	2
  5386     0E42  343C               	retlw	60
  5387     0E43  3408               	retlw	8
  5388     0E44  343D               	retlw	61
  5389     0E45  3401               	retlw	1
  5390     0E46  3400               	retlw	0
  5391     0E47  3401               	retlw	1
  5392     0E48  3401               	retlw	1
  5393     0E49  3408               	retlw	8
  5394     0E4A  3402               	retlw	2
  5395     0E4B  3400               	retlw	0
  5396     0E4C  340A               	retlw	10
  5397     0E4D  3400               	retlw	0
  5398     0E4E  3447               	retlw	71
  5399     0E4F  3431               	retlw	49
  5400     0E50  347B               	retlw	123
  5401     0E51  3401               	retlw	1
  5402     0E52  3414               	retlw	20
  5403     0E53  3465               	retlw	101
  5404     0E54  340C               	retlw	12
  5405     0E55  3408               	retlw	8
  5406     0E56  340D               	retlw	13
  5407     0E57  3408               	retlw	8
  5408     0E58  3434               	retlw	52
  5409     0E59  3404               	retlw	4
  5410     0E5A  3436               	retlw	54
  5411     0E5B  3404               	retlw	4
  5412     0E5C  3437               	retlw	55
  5413     0E5D  3404               	retlw	4
  5414     0E5E  3439               	retlw	57
  5415     0E5F  3408               	retlw	8
  5416     0E60  3400               	retlw	0
  5417     0E61  3408               	retlw	8
  5418     0E62  3418               	retlw	24
  5419     0E63  347F               	retlw	127
  5420     0E64  3419               	retlw	25
  5421     0E65  34FF               	retlw	255
  5422     0E66  341A               	retlw	26
  5423     0E67  3400               	retlw	0
  5424     0E68  341C               	retlw	28
  5425     0E69  3480               	retlw	128
  5426     0E6A  341D               	retlw	29
  5427     0E6B  3401               	retlw	1
  5428     0E6C  341E               	retlw	30
  5429     0E6D  3400               	retlw	0
  5430     0E6E  3420               	retlw	32
  5431     0E6F  347F               	retlw	127
  5432     0E70  3421               	retlw	33
  5433     0E71  34FC               	retlw	252
  5434     0E72  3422               	retlw	34
  5435     0E73  3400               	retlw	0
  5436     0E74  3400               	retlw	0
  5437     0E75  3409               	retlw	9
  5438     0E76  3420               	retlw	32
  5439     0E77  347F               	retlw	127
  5440     0E78  3421               	retlw	33
  5441     0E79  34FF               	retlw	255
  5442     0E7A  3422               	retlw	34
  5443     0E7B  3400               	retlw	0
  5444     0E7C  3424               	retlw	36
  5445     0E7D  3480               	retlw	128
  5446     0E7E  3425               	retlw	37
  5447     0E7F  3401               	retlw	1
  5448     0E80  3426               	retlw	38
  5449     0E81  3400               	retlw	0
  5450     0E82  3428               	retlw	40
  5451     0E83  347F               	retlw	127
  5452     0E84  3429               	retlw	41
  5453     0E85  34FC               	retlw	252
  5454     0E86  342A               	retlw	42
  5455     0E87  3400               	retlw	0
  5456     0E88  3400               	retlw	0
  5457     0E89  3401               	retlw	1
  5458     0E8A  3433               	retlw	51
  5459     0E8B  3444               	retlw	68
  5460     0E8C  3410               	retlw	16
  5461     0E8D  3400               	retlw	0
  5462     0E8E  3411               	retlw	17
  5463     0E8F  3400               	retlw	0
  5464     0E90  3409               	retlw	9
  5465     0E91  3430               	retlw	48
  5466     0E92  343B               	retlw	59
  5467     0E93  349D               	retlw	157
  5468     0E94  343C               	retlw	60
  5469     0E95  349D               	retlw	157
  5470     0E96  3400               	retlw	0
  5471     0E97  3400               	retlw	0
  5472     0E98  343F               	retlw	63
  5473     0E99  34D6               	retlw	214
  5474     0E9A  3440               	retlw	64
  5475     0E9B  3400               	retlw	0
  5476     0E9C  3441               	retlw	65
  5477     0E9D  3481               	retlw	129
  5478     0E9E  3442               	retlw	66
  5479     0E9F  3481               	retlw	129
  5480     0EA0  3451               	retlw	81
  5481     0EA1  34C0               	retlw	192
  5482     0EA2  3452               	retlw	82
  5483     0EA3  3400               	retlw	0
  5484     0EA4  340B               	retlw	11
  5485     0EA5  3481               	retlw	129
  5486     0EA6  340C               	retlw	12
  5487     0EA7  3482               	retlw	130
  5488     0EA8  3400               	retlw	0
  5489     0EA9  3400               	retlw	0
  5490     0EAA  3401               	retlw	1
  5491     0EAB  3401               	retlw	1
  5492     0EAC  340B               	retlw	11
  5493     0EAD  3481               	retlw	129
  5494     0EAE  340C               	retlw	12
  5495     0EAF  3482               	retlw	130
  5496     0EB0  340D               	retlw	13
  5497     0EB1  3400               	retlw	0
  5498     0EB2  340E               	retlw	14
  5499     0EB3  3480               	retlw	128
  5500     0EB4  3412               	retlw	18
  5501     0EB5  3481               	retlw	129
  5502     0EB6  3413               	retlw	19
  5503     0EB7  3482               	retlw	130
  5504     0EB8  3414               	retlw	20
  5505     0EB9  3480               	retlw	128
  5506     0EBA  341B               	retlw	27
  5507     0EBB  3400               	retlw	0
  5508     0EBC  3437               	retlw	55
  5509     0EBD  340E               	retlw	14
  5510     0EBE  3438               	retlw	56
  5511     0EBF  3402               	retlw	2
  5512     0EC0  343C               	retlw	60
  5513     0EC1  3408               	retlw	8
  5514     0EC2  343D               	retlw	61
  5515     0EC3  3401               	retlw	1
  5516     0EC4  3400               	retlw	0
  5517     0EC5  3401               	retlw	1
  5518     0EC6  3401               	retlw	1
  5519     0EC7  3408               	retlw	8
  5520     0EC8  3402               	retlw	2
  5521     0EC9  3400               	retlw	0
  5522     0ECA  340A               	retlw	10
  5523     0ECB  3400               	retlw	0
  5524     0ECC  3447               	retlw	71
  5525     0ECD  3431               	retlw	49
  5526     0ECE  347B               	retlw	123
  5527     0ECF  3401               	retlw	1
  5528     0ED0  3414               	retlw	20
  5529     0ED1  3465               	retlw	101
  5530     0ED2  340C               	retlw	12
  5531     0ED3  3408               	retlw	8
  5532     0ED4  340D               	retlw	13
  5533     0ED5  3408               	retlw	8
  5534     0ED6  3434               	retlw	52
  5535     0ED7  3404               	retlw	4
  5536     0ED8  3436               	retlw	54
  5537     0ED9  3404               	retlw	4
  5538     0EDA  3437               	retlw	55
  5539     0EDB  3404               	retlw	4
  5540     0EDC  3439               	retlw	57
  5541     0EDD  3408               	retlw	8
  5542     0EDE  3400               	retlw	0
  5543     0EDF  3408               	retlw	8
  5544     0EE0  3418               	retlw	24
  5545     0EE1  347F               	retlw	127
  5546     0EE2  3419               	retlw	25
  5547     0EE3  34FF               	retlw	255
  5548     0EE4  341A               	retlw	26
  5549     0EE5  3400               	retlw	0
  5550     0EE6  341C               	retlw	28
  5551     0EE7  3480               	retlw	128
  5552     0EE8  341D               	retlw	29
  5553     0EE9  3401               	retlw	1
  5554     0EEA  341E               	retlw	30
  5555     0EEB  3400               	retlw	0
  5556     0EEC  3420               	retlw	32
  5557     0EED  347F               	retlw	127
  5558     0EEE  3421               	retlw	33
  5559     0EEF  34FC               	retlw	252
  5560     0EF0  3422               	retlw	34
  5561     0EF1  3400               	retlw	0
  5562     0EF2  3400               	retlw	0
  5563     0EF3  3409               	retlw	9
  5564     0EF4  3420               	retlw	32
  5565     0EF5  347F               	retlw	127
  5566     0EF6  3421               	retlw	33
  5567     0EF7  34FF               	retlw	255
  5568     0EF8  3422               	retlw	34
  5569     0EF9  3400               	retlw	0
  5570     0EFA  3424               	retlw	36
  5571     0EFB  3480               	retlw	128
  5572     0EFC  3425               	retlw	37
  5573     0EFD  3401               	retlw	1
  5574     0EFE  3426               	retlw	38
  5575     0EFF  3400               	retlw	0
  5576     0F00  3428               	retlw	40
  5577     0F01  347F               	retlw	127
  5578     0F02  3429               	retlw	41
  5579     0F03  34FC               	retlw	252
  5580     0F04  342A               	retlw	42
  5581     0F05  3400               	retlw	0
  5582     0F06  3400               	retlw	0
  5583     0F07  3401               	retlw	1
  5584     0F08  3433               	retlw	51
  5585     0F09  3444               	retlw	68
  5586     0F0A  3410               	retlw	16
  5587     0F0B  340E               	retlw	14
  5588     0F0C  3411               	retlw	17
  5589     0F0D  340E               	retlw	14
  5590     0F0E  3409               	retlw	9
  5591     0F0F  3430               	retlw	48
  5592     0F10  343B               	retlw	59
  5593     0F11  349D               	retlw	157
  5594     0F12  343C               	retlw	60
  5595     0F13  349D               	retlw	157
  5596     0F14  3400               	retlw	0
  5597     0F15  3400               	retlw	0
  5598     0F16  343F               	retlw	63
  5599     0F17  34D6               	retlw	214
  5600     0F18  3440               	retlw	64
  5601     0F19  3400               	retlw	0
  5602     0F1A  3441               	retlw	65
  5603     0F1B  34E5               	retlw	229
  5604     0F1C  3442               	retlw	66
  5605     0F1D  34E5               	retlw	229
  5606     0F1E  3451               	retlw	81
  5607     0F1F  34C0               	retlw	192
  5608     0F20  3452               	retlw	82
  5609     0F21  3400               	retlw	0
  5610                           
  5611                           ;initializer for _cc8531_init_data
  5612     0F22  34DF               	retlw	223
  5613     0F23  3402               	retlw	2
  5614     0F24  3400               	retlw	0
  5615     0F25  34B0               	retlw	176
  5616     0F26  3490               	retlw	144
  5617     0F27  3418               	retlw	24
  5618     0F28  3400               	retlw	0
  5619     0F29  34B0               	retlw	176
  5620     0F2A  3400               	retlw	0
  5621     0F2B  3400               	retlw	0
  5622     0F2C  3400               	retlw	0
  5623     0F2D  3400               	retlw	0
  5624     0F2E  3400               	retlw	0
  5625     0F2F  3400               	retlw	0
  5626     0F30  3400               	retlw	0
  5627     0F31  3400               	retlw	0
  5628     0F32  3400               	retlw	0
  5629     0F33  3400               	retlw	0
  5630     0F34  3400               	retlw	0
  5631     0F35  3400               	retlw	0
  5632     0F36  3400               	retlw	0
  5633     0F37  3400               	retlw	0
  5634     0F38  3400               	retlw	0
  5635     0F39  3400               	retlw	0
  5636     0F3A  341A               	retlw	26
  5637     0F3B  3400               	retlw	0
  5638     0F3C  3452               	retlw	82
  5639     0F3D  34B7               	retlw	183
  5640     0F3E  3401               	retlw	1
  5641     0F3F  3400               	retlw	0
  5642     0F40  34D9               	retlw	217
  5643     0F41  3401               	retlw	1
  5644     0F42  343F               	retlw	63
  5645     0F43  34C8               	retlw	200
  5646     0F44  3410               	retlw	16
  5647     0F45  3480               	retlw	128
  5648     0F46  3464               	retlw	100
  5649     0F47  3400               	retlw	0
  5650     0F48  3400               	retlw	0
  5651     0F49  3400               	retlw	0
  5652     0F4A  3400               	retlw	0
  5653     0F4B  3400               	retlw	0
  5654     0F4C  3400               	retlw	0
  5655     0F4D  3400               	retlw	0
  5656     0F4E  3400               	retlw	0
  5657     0F4F  3400               	retlw	0
  5658     0F50  3400               	retlw	0
  5659     0F51  3400               	retlw	0
  5660     0F52  3400               	retlw	0
  5661     0F53  3400               	retlw	0
  5662     0F54  3480               	retlw	128
  5663     0F55  34A0               	retlw	160
  5664     0F56  3410               	retlw	16
  5665     0F57  3480               	retlw	128
  5666     0F58  3464               	retlw	100
  5667     0F59  3400               	retlw	0
  5668     0F5A  3400               	retlw	0
  5669     0F5B  3400               	retlw	0
  5670     0F5C  3400               	retlw	0
  5671     0F5D  3400               	retlw	0
  5672     0F5E  3400               	retlw	0
  5673     0F5F  3400               	retlw	0
  5674     0F60  3400               	retlw	0
  5675     0F61  3400               	retlw	0
  5676     0F62  3400               	retlw	0
  5677     0F63  3400               	retlw	0
  5678     0F64  3400               	retlw	0
  5679     0F65  3400               	retlw	0
  5680     0F66  3480               	retlw	128
  5681     0F67  3400               	retlw	0
  5682     0F68  3400               	retlw	0
  5683     0F69  3420               	retlw	32
  5684     0F6A  3400               	retlw	0
  5685     0F6B  3452               	retlw	82
  5686     0F6C  34B7               	retlw	183
  5687     0F6D  3401               	retlw	1
  5688     0F6E  3400               	retlw	0
  5689     0F6F  3440               	retlw	64
  5690     0F70  3400               	retlw	0
  5691     0F71  3404               	retlw	4
  5692     0F72  343C               	retlw	60
  5693     0F73  34A0               	retlw	160
  5694     0F74  341C               	retlw	28
  5695     0F75  34C9               	retlw	201
  5696     0F76  3412               	retlw	18
  5697     0F77  3400               	retlw	0
  5698     0F78  3464               	retlw	100
  5699     0F79  3400               	retlw	0
  5700     0F7A  3400               	retlw	0
  5701     0F7B  3400               	retlw	0
  5702     0F7C  3400               	retlw	0
  5703     0F7D  3400               	retlw	0
  5704     0F7E  3400               	retlw	0
  5705     0F7F  3400               	retlw	0
  5706     0F80  3400               	retlw	0
  5707     0F81  3400               	retlw	0
  5708     0F82  3400               	retlw	0
  5709     0F83  3400               	retlw	0
  5710     0F84  3400               	retlw	0
  5711     0F85  3400               	retlw	0
  5712     0F86  3400               	retlw	0
  5713     0F87  3400               	retlw	0
  5714     0F88  3400               	retlw	0
  5715     0F89  34CA               	retlw	202
  5716     0F8A  3400               	retlw	0
  5717     0F8B  34A0               	retlw	160
  5718     0F8C  3400               	retlw	0
  5719     0F8D  3400               	retlw	0
  5720     0F8E  3464               	retlw	100
  5721     0F8F  3420               	retlw	32
  5722     0F90  34D6               	retlw	214
  5723     0F91  3445               	retlw	69
  5724     0F92  3457               	retlw	87
  5725     0F93  3400               	retlw	0
  5726     0F94  3400               	retlw	0
  5727     0F95  3400               	retlw	0
  5728     0F96  3400               	retlw	0
  5729     0F97  3400               	retlw	0
  5730     0F98  3400               	retlw	0
  5731     0F99  3400               	retlw	0
  5732     0F9A  3400               	retlw	0
  5733     0F9B  3400               	retlw	0
  5734     0F9C  3400               	retlw	0
  5735     0F9D  3400               	retlw	0
  5736     0F9E  3400               	retlw	0
  5737     0F9F  3422               	retlw	34
  5738     0FA0  3400               	retlw	0
  5739     0FA1  3452               	retlw	82
  5740     0FA2  34B7               	retlw	183
  5741     0FA3  3401               	retlw	1
  5742     0FA4  3400               	retlw	0
  5743     0FA5  3440               	retlw	64
  5744     0FA6  3400               	retlw	0
  5745     0FA7  3406               	retlw	6
  5746     0FA8  343C               	retlw	60
  5747     0FA9  34A0               	retlw	160
  5748     0FAA  341C               	retlw	28
  5749     0FAB  3401               	retlw	1
  5750     0FAC  3400               	retlw	0
  5751     0FAD  34CB               	retlw	203
  5752     0FAE  3410               	retlw	16
  5753     0FAF  3400               	retlw	0
  5754     0FB0  3401               	retlw	1
  5755     0FB1  34FF               	retlw	255
  5756     0FB2  34FF               	retlw	255
  5757     0FB3  34FF               	retlw	255
  5758     0FB4  34FF               	retlw	255
  5759     0FB5  34FF               	retlw	255
  5760     0FB6  34FF               	retlw	255
  5761     0FB7  34FF               	retlw	255
  5762     0FB8  34FF               	retlw	255
  5763     0FB9  34FF               	retlw	255
  5764     0FBA  34FF               	retlw	255
  5765     0FBB  3400               	retlw	0
  5766     0FBC  34FF               	retlw	255
  5767     0FBD  34FF               	retlw	255
  5768     0FBE  34FF               	retlw	255
  5769     0FBF  3480               	retlw	128
  5770     0FC0  3400               	retlw	0
  5771     0FC1  34D6               	retlw	214
  5772     0FC2  3401               	retlw	1
  5773     0FC3  3431               	retlw	49
  5774     0FC4  34D6               	retlw	214
  5775     0FC5  3401               	retlw	1
  5776     0FC6  3430               	retlw	48
  5777     0FC7  3490               	retlw	144
  5778     0FC8  3402               	retlw	2
  5779     0FC9  3430               	retlw	48
  5780     0FCA  3401               	retlw	1
  5781     0FCB  34D6               	retlw	214
  5782     0FCC  3401               	retlw	1
  5783     0FCD  3431               	retlw	49
  5784     0FCE  34D6               	retlw	214
  5785     0FCF  3401               	retlw	1
  5786     0FD0  3430               	retlw	48
  5787     0FD1  3490               	retlw	144
  5788     0FD2  3402               	retlw	2
  5789     0FD3  3430               	retlw	48
  5790     0FD4  3401               	retlw	1
  5791     0FD5  34DD               	retlw	221
  5792     0FD6  3400               	retlw	0
  5793     0FD7  34A0               	retlw	160
  5794     0FD8  3400               	retlw	0
  5795     0FD9  3432               	retlw	50
  5796     0FDA  3401               	retlw	1
  5797     0FDB  34FF               	retlw	255
  5798     0FDC  34FF               	retlw	255
  5799     0FDD  34FF               	retlw	255
  5800     0FDE  34FF               	retlw	255
  5801     0FDF  34FF               	retlw	255
  5802     0FE0  34FF               	retlw	255
  5803     0FE1  34FF               	retlw	255
  5804     0FE2  34FF               	retlw	255
  5805     0FE3  34FF               	retlw	255
  5806     0FE4  34FF               	retlw	255
  5807     0FE5  3400               	retlw	0
  5808     0FE6  34FF               	retlw	255
  5809     0FE7  34FF               	retlw	255
  5810     0FE8  34FF               	retlw	255
  5811     0FE9  3480               	retlw	128
  5812     0FEA  3400               	retlw	0
  5813     0FEB  34D6               	retlw	214
  5814     0FEC  3401               	retlw	1
  5815     0FED  3431               	retlw	49
  5816     0FEE  34D6               	retlw	214
  5817     0FEF  3401               	retlw	1
  5818     0FF0  3430               	retlw	48
  5819     0FF1  3490               	retlw	144
  5820     0FF2  3402               	retlw	2
  5821     0FF3  3430               	retlw	48
  5822     0FF4  3401               	retlw	1
  5823     0FF5  34D6               	retlw	214
  5824     0FF6  3401               	retlw	1
  5825     0FF7  3431               	retlw	49
  5826     0FF8  34D6               	retlw	214
  5827     0FF9  3401               	retlw	1
  5828     0FFA  3430               	retlw	48
  5829     0FFB  3490               	retlw	144
  5830     0FFC  3402               	retlw	2
  5831     0FFD  3430               	retlw	48
  5832     0FFE  3401               	retlw	1
  5833     0FFF  3400               	retlw	0
  5834                           
  5835                           	psect	idataBANK0
  5836     157D                     __pidataBANK0:
  5837                           
  5838                           ;initializer for _tlv320_volume@tlv320aic32$F2047
  5839     157D  3481               	retlw	129
  5840     157E  34F1               	retlw	241
  5841     157F  34F9               	retlw	249
  5842     1580  3400               	retlw	0
  5843     1581  3408               	retlw	8
  5844     1582  3410               	retlw	16
  5845     1583  3418               	retlw	24
  5846     1584  3420               	retlw	32
  5847     1585  3428               	retlw	40
  5848     1586  3430               	retlw	48
  5849                           
  5850                           ;initializer for _tlv320_streaming_off
  5851     1587  3400               	retlw	0
  5852     1588  3400               	retlw	0
  5853     1589  3440               	retlw	64
  5854     158A  340C               	retlw	12
  5855     158B  3400               	retlw	0
  5856     158C  3400               	retlw	0
  5857     158D  3440               	retlw	64
  5858     158E  3400               	retlw	0
  5859                           
  5860                           ;initializer for _tlv320_volume_up2
  5861     158F  3400               	retlw	0
  5862     1590  3400               	retlw	0
  5863     1591  3440               	retlw	64
  5864     1592  3400               	retlw	0
  5865                           
  5866                           ;initializer for _mic_state_choosed
  5867     1593  3402               	retlw	2
  5868                           
  5869                           	psect	idataBANK1
  5870     1771                     __pidataBANK1:
  5871                           
  5872                           ;initializer for _tlv320_volume_up
  5873     1771  3400               	retlw	0
  5874     1772  3400               	retlw	0
  5875     1773  3441               	retlw	65
  5876     1774  3408               	retlw	8
  5877     1775  3442               	retlw	66
  5878     1776  3408               	retlw	8
  5879     1777  3400               	retlw	0
  5880     1778  3401               	retlw	1
  5881     1779  3410               	retlw	16
  5882     177A  340E               	retlw	14
  5883     177B  3411               	retlw	17
  5884     177C  340E               	retlw	14
  5885     177D  3400               	retlw	0
  5886     177E  3400               	retlw	0
  5887     177F  3440               	retlw	64
  5888     1780  3400               	retlw	0
  5889                           
  5890                           ;initializer for _tlv320_volume@tlv320aic32$F2104
  5891     1781  3481               	retlw	129
  5892     1782  34F1               	retlw	241
  5893     1783  34F9               	retlw	249
  5894     1784  3400               	retlw	0
  5895     1785  3408               	retlw	8
  5896     1786  3410               	retlw	16
  5897     1787  3418               	retlw	24
  5898     1788  3420               	retlw	32
  5899     1789  3428               	retlw	40
  5900     178A  3430               	retlw	48
  5901                           
  5902                           ;initializer for _tlv320_volume@tlv320aic32$F2067
  5903     178B  3481               	retlw	129
  5904     178C  34F1               	retlw	241
  5905     178D  34F9               	retlw	249
  5906     178E  3400               	retlw	0
  5907     178F  3408               	retlw	8
  5908     1790  3410               	retlw	16
  5909     1791  3418               	retlw	24
  5910     1792  3420               	retlw	32
  5911     1793  3428               	retlw	40
  5912     1794  3430               	retlw	48
  5913                           
  5914                           ;initializer for _tlv320_volume
  5915     1795  3481               	retlw	129
  5916     1796  34F1               	retlw	241
  5917     1797  34F9               	retlw	249
  5918     1798  3400               	retlw	0
  5919     1799  3408               	retlw	8
  5920     179A  3410               	retlw	16
  5921     179B  3418               	retlw	24
  5922     179C  3420               	retlw	32
  5923     179D  3428               	retlw	40
  5924     179E  3430               	retlw	48
  5925                           
  5926                           	psect	idataBANK2
  5927     08D7                     __pidataBANK2:
  5928                           
  5929                           ;initializer for _tlv320_mic_control
  5930     08D7  3400               	retlw	0
  5931     08D8  3400               	retlw	0
  5932     08D9  3451               	retlw	81
  5933     08DA  3400               	retlw	0
  5934     08DB  3400               	retlw	0
  5935     08DC  3401               	retlw	1
  5936     08DD  3401               	retlw	1
  5937     08DE  3408               	retlw	8
  5938     08DF  3402               	retlw	2
  5939     08E0  3400               	retlw	0
  5940     08E1  34A0               	retlw	160
  5941     08E2  3400               	retlw	0
  5942     08E3  343D               	retlw	61
  5943     08E4  3400               	retlw	0
  5944     08E5  3447               	retlw	71
  5945     08E6  3432               	retlw	50
  5946     08E7  347B               	retlw	123
  5947     08E8  3401               	retlw	1
  5948     08E9  3437               	retlw	55
  5949     08EA  3404               	retlw	4
  5950     08EB  3439               	retlw	57
  5951     08EC  3404               	retlw	4
  5952     08ED  343C               	retlw	60
  5953     08EE  345F               	retlw	95
  5954     08EF  3400               	retlw	0
  5955     08F0  3400               	retlw	0
  5956     08F1  3451               	retlw	81
  5957     08F2  34C0               	retlw	192
  5958     08F3  3452               	retlw	82
  5959     08F4  3400               	retlw	0
  5960     08F5  3400               	retlw	0
  5961     08F6  3400               	retlw	0
  5962     08F7  3400               	retlw	0
  5963     08F8  3400               	retlw	0
  5964                           
  5965                           ;initializer for _tlv320_volume_down
  5966     08F9  3400               	retlw	0
  5967     08FA  3400               	retlw	0
  5968     08FB  3441               	retlw	65
  5969     08FC  34EF               	retlw	239
  5970     08FD  3442               	retlw	66
  5971     08FE  34EF               	retlw	239
  5972     08FF  3400               	retlw	0
  5973     0900  3401               	retlw	1
  5974     0901  3410               	retlw	16
  5975     0902  340E               	retlw	14
  5976     0903  3411               	retlw	17
  5977     0904  340E               	retlw	14
  5978                           
  5979                           ;initializer for _tlv320_volume@tlv320aic32$F2117
  5980     0905  3481               	retlw	129
  5981     0906  34F1               	retlw	241
  5982     0907  34F9               	retlw	249
  5983     0908  3400               	retlw	0
  5984     0909  3408               	retlw	8
  5985     090A  3410               	retlw	16
  5986     090B  3418               	retlw	24
  5987     090C  3420               	retlw	32
  5988     090D  3428               	retlw	40
  5989     090E  3430               	retlw	48
  5990                           
  5991                           	psect	idataBANK3
  5992     0983                     __pidataBANK3:
  5993                           
  5994                           ;initializer for _cc8531_polling_data
  5995     0983  34D6               	retlw	214
  5996     0984  3401               	retlw	1
  5997     0985  3433               	retlw	51
  5998     0986  34D6               	retlw	214
  5999     0987  3401               	retlw	1
  6000     0988  3432               	retlw	50
  6001     0989  3490               	retlw	144
  6002     098A  3402               	retlw	2
  6003     098B  3432               	retlw	50
  6004     098C  3401               	retlw	1
  6005     098D  34D6               	retlw	214
  6006     098E  3401               	retlw	1
  6007     098F  3433               	retlw	51
  6008     0990  34D6               	retlw	214
  6009     0991  3401               	retlw	1
  6010     0992  3432               	retlw	50
  6011     0993  3490               	retlw	144
  6012     0994  3402               	retlw	2
  6013     0995  3432               	retlw	50
  6014     0996  3401               	retlw	1
  6015     0997  34DD               	retlw	221
  6016     0998  3400               	retlw	0
  6017     0999  34A0               	retlw	160
  6018     099A  3400               	retlw	0
  6019     099B  3432               	retlw	50
  6020     099C  3401               	retlw	1
  6021     099D  34FF               	retlw	255
  6022     099E  34FF               	retlw	255
  6023     099F  34FF               	retlw	255
  6024     09A0  34FF               	retlw	255
  6025     09A1  34FF               	retlw	255
  6026     09A2  34FF               	retlw	255
  6027     09A3  34FF               	retlw	255
  6028     09A4  34FF               	retlw	255
  6029     09A5  34FF               	retlw	255
  6030     09A6  34FF               	retlw	255
  6031     09A7  3400               	retlw	0
  6032     09A8  34FF               	retlw	255
  6033     09A9  34FF               	retlw	255
  6034     09AA  34FF               	retlw	255
  6035     09AB  3480               	retlw	128
  6036     09AC  3400               	retlw	0
  6037     09AD  34D6               	retlw	214
  6038     09AE  3401               	retlw	1
  6039     09AF  3431               	retlw	49
  6040     09B0  34D6               	retlw	214
  6041     09B1  3401               	retlw	1
  6042     09B2  3430               	retlw	48
  6043     09B3  3490               	retlw	144
  6044     09B4  3402               	retlw	2
  6045     09B5  3430               	retlw	48
  6046     09B6  3401               	retlw	1
  6047     09B7  34D6               	retlw	214
  6048     09B8  3401               	retlw	1
  6049     09B9  3431               	retlw	49
  6050     09BA  34D6               	retlw	214
  6051     09BB  3401               	retlw	1
  6052     09BC  3430               	retlw	48
  6053     09BD  3490               	retlw	144
  6054     09BE  3402               	retlw	2
  6055     09BF  3430               	retlw	48
  6056     09C0  3401               	retlw	1
  6057                           
  6058                           	psect	stringtext1
  6059     1800                     __pstringtext1:
  6060     1800                     _i2c1_fsmStateTable:
  6061     1800  34CD               	retlw	low _I2C1_DO_IDLE
  6062     1801  3413               	retlw	high _I2C1_DO_IDLE
  6063     1802  342A               	retlw	low _I2C1_DO_SEND_ADR_READ
  6064     1803  3414               	retlw	high _I2C1_DO_SEND_ADR_READ
  6065     1804  341A               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  6066     1805  3414               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  6067     1806  349C               	retlw	low _I2C1_DO_TX
  6068     1807  340A               	retlw	high _I2C1_DO_TX
  6069     1808  34C1               	retlw	low _I2C1_DO_RX
  6070     1809  3409               	retlw	high _I2C1_DO_RX
  6071     180A  340C               	retlw	low _I2C1_DO_RCEN
  6072     180B  3414               	retlw	high _I2C1_DO_RCEN
  6073     180C  3417               	retlw	low _I2C1_DO_TX_EMPTY
  6074     180D  3417               	retlw	high _I2C1_DO_TX_EMPTY
  6075     180E  34D2               	retlw	low _I2C1_DO_SEND_RESTART_READ
  6076     180F  3413               	retlw	high _I2C1_DO_SEND_RESTART_READ
  6077     1810  34D7               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  6078     1811  3413               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  6079     1812  34DC               	retlw	low _I2C1_DO_SEND_RESTART
  6080     1813  3413               	retlw	high _I2C1_DO_SEND_RESTART
  6081     1814  34E1               	retlw	low _I2C1_DO_SEND_STOP
  6082     1815  3413               	retlw	high _I2C1_DO_SEND_STOP
  6083     1816  34E6               	retlw	low _I2C1_DO_RX_ACK
  6084     1817  3413               	retlw	high _I2C1_DO_RX_ACK
  6085     1818  34EB               	retlw	low _I2C1_DO_RX_NACK_STOP
  6086     1819  3413               	retlw	high _I2C1_DO_RX_NACK_STOP
  6087     181A  34F0               	retlw	low _I2C1_DO_RX_NACK_RESTART
  6088     181B  3413               	retlw	high _I2C1_DO_RX_NACK_RESTART
  6089     181C  34F5               	retlw	low _I2C1_DO_RESET
  6090     181D  3413               	retlw	high _I2C1_DO_RESET
  6091     181E  34C7               	retlw	low _I2C1_DO_ADDRESS_NACK
  6092     181F  3416               	retlw	high _I2C1_DO_ADDRESS_NACK
  6093     1820                     __end_of_i2c1_fsmStateTable:
  6094                           
  6095                           	psect	stringtext2
  6096     1820                     __pstringtext2:
  6097     1820                     _spiMaster:
  6098     1820  34B5               	retlw	low _SPI2_Close
  6099     1821  3413               	retlw	high _SPI2_Close
  6100     1822  3400               	retlw	0
  6101     1823  3400               	retlw	0
  6102     1824  3400               	retlw	0
  6103     1825  3400               	retlw	0
  6104     1826  3400               	retlw	0
  6105     1827  3400               	retlw	0
  6106     1828  3400               	retlw	0
  6107     1829  3400               	retlw	0
  6108     182A  3400               	retlw	0
  6109     182B  3400               	retlw	0
  6110     182C  34C0               	retlw	low _SPI2_WriteByte
  6111     182D  3413               	retlw	high _SPI2_WriteByte
  6112     182E  34B2               	retlw	low _SPI2_ReadByte
  6113     182F  3413               	retlw	high _SPI2_ReadByte
  6114     1830  3400               	retlw	0
  6115     1831  3400               	retlw	0
  6116     1832  3400               	retlw	0
  6117     1833  3400               	retlw	0
  6118     1834                     __end_of_spiMaster:
  6119                           
  6120                           	psect	stringtext3
  6121     1834                     __pstringtext3:
  6122     1834                     _spi2_configuration:
  6123     1834  340A               	retlw	10
  6124     1835  3440               	retlw	64
  6125     1836  3401               	retlw	1
  6126     1837  3400               	retlw	0
  6127     1838  3401               	retlw	1
  6128     1839  3440               	retlw	64
  6129     183A  3401               	retlw	1
  6130     183B  3400               	retlw	0
  6131     183C                     __end_of_spi2_configuration:
  6132                           
  6133                           	psect	nvBANK0
  6134     0069                     __pnvBANK0:
  6135     0069                     _volume_count:
  6136     0069                     	ds	2
  6137     0017                     _LATBbits	set	23
  6138     0018                     _LATCbits	set	24
  6139     0016                     _LATAbits	set	22
  6140     000C                     _PORTAbits	set	12
  6141     000D                     _PORTBbits	set	13
  6142     000E                     _PORTCbits	set	14
  6143     000B                     _INTCONbits	set	11
  6144     0012                     _TRISBbits	set	18
  6145     0013                     _TRISC	set	19
  6146     0012                     _TRISB	set	18
  6147     0011                     _TRISA	set	17
  6148     0018                     _LATC	set	24
  6149     0017                     _LATB	set	23
  6150     0016                     _LATA	set	22
  6151     0094                     _ADCON1bits	set	148
  6152     008E                     _ADPREVL	set	142
  6153     008F                     _ADPREVH	set	143
  6154     0097                     _ADSTATbits	set	151
  6155     0090                     _ADACCL	set	144
  6156     0091                     _ADACCH	set	145
  6157     0095                     _ADCON2bits	set	149
  6158     0096                     _ADCON3bits	set	150
  6159     008C                     _ADRESL	set	140
  6160     008D                     _ADRESH	set	141
  6161     0093                     _ADCON0bits	set	147
  6162     009D                     _ADACQ	set	157
  6163     0093                     _ADCON0	set	147
  6164     0098                     _ADCLK	set	152
  6165     0099                     _ADACT	set	153
  6166     009A                     _ADREF	set	154
  6167     0097                     _ADSTAT	set	151
  6168     0096                     _ADCON3	set	150
  6169     0095                     _ADCON2	set	149
  6170     0094                     _ADCON1	set	148
  6171     009C                     _ADPRE	set	156
  6172     009B                     _ADCAP	set	155
  6173     009E                     _ADPCH	set	158
  6174     0116                     _ADERRL	set	278
  6175     0117                     _ADERRH	set	279
  6176     0114                     _ADFLTRL	set	276
  6177     0115                     _ADFLTRH	set	277
  6178     010C                     _ADCNT	set	268
  6179     010D                     _ADRPT	set	269
  6180     0113                     _ADSTPTH	set	275
  6181     0112                     _ADSTPTL	set	274
  6182     0111                     _ADUTHH	set	273
  6183     0110                     _ADUTHL	set	272
  6184     010F                     _ADLTHH	set	271
  6185     010E                     _ADLTHL	set	270
  6186     0196                     _SSP2BUF	set	406
  6187     019B                     _SSP2CON2	set	411
  6188     019A                     _SSP2CON1bits	set	410
  6189     0197                     _SSP2ADD	set	407
  6190     019A                     _SSP2CON1	set	410
  6191     0199                     _SSP2STAT	set	409
  6192     018F                     _SSP1STATbits	set	399
  6193     0191                     _SSP1CON2bits	set	401
  6194     018C                     _SSP1BUF	set	396
  6195     0190                     _SSP1CON1bits	set	400
  6196     018D                     _SSP1ADD	set	397
  6197     0191                     _SSP1CON2	set	401
  6198     0190                     _SSP1CON1	set	400
  6199     018F                     _SSP1STAT	set	399
  6200     0719                     _PIE3bits	set	1817
  6201     070F                     _PIR3bits	set	1807
  6202     079B                     _PMD5	set	1947
  6203     079A                     _PMD4	set	1946
  6204     0799                     _PMD3	set	1945
  6205     0798                     _PMD2	set	1944
  6206     0797                     _PMD1	set	1943
  6207     0796                     _PMD0	set	1942
  6208     081F                     _NVMCON2	set	2079
  6209     081C                     _NVMDATL	set	2076
  6210     081D                     _NVMDATH	set	2077
  6211     081E                     _NVMCON1bits	set	2078
  6212     081B                     _NVMADRH	set	2075
  6213     081A                     _NVMADRL	set	2074
  6214     0892                     _OSCTUNE	set	2194
  6215     0893                     _OSCFRQ	set	2195
  6216     0891                     _OSCEN	set	2193
  6217     088F                     _OSCCON3	set	2191
  6218     088D                     _OSCCON1	set	2189
  6219     0EC8                     _SSP2CLKPPS	set	3784
  6220     0EC6                     _SSP1DATPPS	set	3782
  6221     0EC5                     _SSP1CLKPPS	set	3781
  6222     0EC9                     _SSP2DATPPS	set	3785
  6223     0F1B                     _RB3PPS	set	3867
  6224     0F24                     _RC4PPS	set	3876
  6225     0F23                     _RC3PPS	set	3875
  6226     0F19                     _RB1PPS	set	3865
  6227     0F68                     _INLVLE	set	3944
  6228     0F52                     _INLVLC	set	3922
  6229     0F47                     _INLVLB	set	3911
  6230     0F3C                     _INLVLA	set	3900
  6231     0F51                     _SLRCONC	set	3921
  6232     0F46                     _SLRCONB	set	3910
  6233     0F3B                     _SLRCONA	set	3899
  6234     0F50                     _ODCONC	set	3920
  6235     0F45                     _ODCONB	set	3909
  6236     0F3A                     _ODCONA	set	3898
  6237     0F4F                     _WPUC	set	3919
  6238     0F39                     _WPUA	set	3897
  6239     0F44                     _WPUB	set	3908
  6240     0F65                     _WPUE	set	3941
  6241     0F38                     _ANSELA	set	3896
  6242     0F43                     _ANSELB	set	3907
  6243     0F4E                     _ANSELC	set	3918
  6244                           
  6245                           	psect	cinit
  6246     07A4                     start_initialization:	
  6247                           ; #config settings
  6248                           
  6249     07A4                     __initialization:	;BIGRAM
  6250                           
  6251                           ; Initialize objects allocated to BIGRAM
  6252     07A4  302A               	movlw	low __pidataBIGRAM
  6253     07A5  0084               	movwf	4
  6254     07A6  308E               	movlw	(high __pidataBIGRAM)| (0+128)
  6255     07A7  0085               	movwf	5
  6256     07A8  301A               	movlw	low (0+8730)
  6257     07A9  0086               	movwf	6
  6258     07AA  3022               	movlw	high (0+8730)
  6259     07AB  0087               	movwf	7
  6260     07AC  3001               	movlw	1
  6261     07AD  00FF               	movwf	btemp+1
  6262     07AE  30D6               	movlw	214
  6263     07AF  3194  2474  3187   	fcall	init_ram
  6264                           
  6265                           ; Initialize objects allocated to BANK0
  6266     07B2  307D               	movlw	low __pidataBANK0
  6267     07B3  0084               	movwf	4
  6268     07B4  3095               	movlw	(high __pidataBANK0)| (0+128)
  6269     07B5  0085               	movwf	5
  6270     07B6  304A               	movlw	low __pdataBANK0
  6271     07B7  0086               	movwf	6
  6272     07B8  3000               	movlw	high __pdataBANK0
  6273     07B9  0087               	movwf	7
  6274     07BA  3000               	movlw	0
  6275     07BB  00FF               	movwf	btemp+1
  6276     07BC  3017               	movlw	23
  6277     07BD  3194  2474  3187   	fcall	init_ram
  6278                           
  6279                           ; Initialize objects allocated to BANK1
  6280     07C0  3071               	movlw	low __pidataBANK1
  6281     07C1  0084               	movwf	4
  6282     07C2  3097               	movlw	(high __pidataBANK1)| (0+128)
  6283     07C3  0085               	movwf	5
  6284     07C4  30A0               	movlw	low __pdataBANK1
  6285     07C5  0086               	movwf	6
  6286     07C6  3000               	movlw	high __pdataBANK1
  6287     07C7  0087               	movwf	7
  6288     07C8  3000               	movlw	0
  6289     07C9  00FF               	movwf	btemp+1
  6290     07CA  302E               	movlw	46
  6291     07CB  3194  2474  3187   	fcall	init_ram
  6292                           
  6293                           ; Initialize objects allocated to BANK2
  6294     07CE  30D7               	movlw	low __pidataBANK2
  6295     07CF  0084               	movwf	4
  6296     07D0  3088               	movlw	(high __pidataBANK2)| (0+128)
  6297     07D1  0085               	movwf	5
  6298     07D2  3020               	movlw	low __pdataBANK2
  6299     07D3  0086               	movwf	6
  6300     07D4  3001               	movlw	high __pdataBANK2
  6301     07D5  0087               	movwf	7
  6302     07D6  3000               	movlw	0
  6303     07D7  00FF               	movwf	btemp+1
  6304     07D8  3038               	movlw	56
  6305     07D9  3194  2474  3187   	fcall	init_ram
  6306                           
  6307                           ; Initialize objects allocated to BANK3
  6308     07DC  3083               	movlw	low __pidataBANK3
  6309     07DD  0084               	movwf	4
  6310     07DE  3089               	movlw	(high __pidataBANK3)| (0+128)
  6311     07DF  0085               	movwf	5
  6312     07E0  30A0               	movlw	low __pdataBANK3
  6313     07E1  0086               	movwf	6
  6314     07E2  3001               	movlw	high __pdataBANK3
  6315     07E3  0087               	movwf	7
  6316     07E4  3000               	movlw	0
  6317     07E5  00FF               	movwf	btemp+1
  6318     07E6  303E               	movlw	62
  6319     07E7  3194  2474  3187   	fcall	init_ram
  6320                           
  6321                           ; Clear objects allocated to BANK0
  6322     07EA  01E1               	clrf	__pbssBANK0& (0+127)
  6323     07EB  01E2               	clrf	(__pbssBANK0+1)& (0+127)
  6324     07EC  01E3               	clrf	(__pbssBANK0+2)& (0+127)
  6325     07ED  01E4               	clrf	(__pbssBANK0+3)& (0+127)
  6326     07EE  01E5               	clrf	(__pbssBANK0+4)& (0+127)
  6327     07EF  01E6               	clrf	(__pbssBANK0+5)& (0+127)
  6328     07F0  01E7               	clrf	(__pbssBANK0+6)& (0+127)
  6329     07F1  01E8               	clrf	(__pbssBANK0+7)& (0+127)
  6330                           
  6331                           ; Clear objects allocated to BANK1
  6332     07F2  30CE               	movlw	low __pbssBANK1
  6333     07F3  0084               	movwf	4
  6334     07F4  3000               	movlw	high __pbssBANK1
  6335     07F5  0085               	movwf	5
  6336     07F6  301D               	movlw	29
  6337     07F7  00FE               	movwf	btemp
  6338     07F8  3000               	movlw	0
  6339     07F9  00FF               	movwf	btemp+1
  6340     07FA  3194  2468  3187   	fcall	clear_ram0
  6341     07FD                     end_of_initialization:	
  6342                           ;End of C runtime variable initialization code
  6343                           
  6344     07FD                     __end_of__initialization:
  6345     07FD  0020               	movlb	0
  6346     07FE  3188  28A0         	ljmp	_main	;jump to C main() function
  6347                           
  6348                           	psect	bssBANK0
  6349     0061                     __pbssBANK0:
  6350     0061                     _key_count:
  6351     0061                     	ds	2
  6352     0063                     _streaming_off_flag:
  6353     0063                     	ds	1
  6354     0064                     _battery_count:
  6355     0064                     	ds	1
  6356     0065                     _key_pressed_mute:
  6357     0065                     	ds	1
  6358     0066                     _key_pressed_volume:
  6359     0066                     	ds	1
  6360     0067                     _led_state:
  6361     0067                     	ds	1
  6362     0068                     _count_2_Second:
  6363     0068                     	ds	1
  6364                           
  6365                           	psect	dataBANK0
  6366     004A                     __pdataBANK0:
  6367     004A                     _tlv320_volume@tlv320aic32$F2047:
  6368     004A                     	ds	10
  6369     0054                     _tlv320_streaming_off:
  6370     0054                     	ds	8
  6371     005C                     _tlv320_volume_up2:
  6372     005C                     	ds	4
  6373     0060                     _mic_state_choosed:
  6374     0060                     	ds	1
  6375                           
  6376                           	psect	bssBANK1
  6377     00CE                     __pbssBANK1:
  6378     00CE                     _I2C1_Status:
  6379     00CE                     	ds	29
  6380                           
  6381                           	psect	dataBANK1
  6382     00A0                     __pdataBANK1:
  6383     00A0                     _tlv320_volume_up:
  6384     00A0                     	ds	16
  6385     00B0                     _tlv320_volume@tlv320aic32$F2104:
  6386     00B0                     	ds	10
  6387     00BA                     _tlv320_volume@tlv320aic32$F2067:
  6388     00BA                     	ds	10
  6389     00C4                     _tlv320_volume:
  6390     00C4                     	ds	10
  6391                           
  6392                           	psect	dataBANK2
  6393     0120                     __pdataBANK2:
  6394     0120                     _tlv320_mic_control:
  6395     0120                     	ds	34
  6396     0142                     _tlv320_volume_down:
  6397     0142                     	ds	12
  6398     014E                     _tlv320_volume@tlv320aic32$F2117:
  6399     014E                     	ds	10
  6400                           
  6401                           	psect	dataBANK3
  6402     01A0                     __pdataBANK3:
  6403     01A0                     _cc8531_polling_data:
  6404     01A0                     	ds	62
  6405                           
  6406                           	psect	inittext
  6407     1474                     init_ram:
  6408     1474  00FE               	movwf	btemp
  6409     1475                     initloop:
  6410     1475  0012               	moviw fsr0++
  6411     1476  001E               	movwi fsr1++
  6412     1477  3001               	movlw	1
  6413     1478  02FE               	subwf	btemp,f
  6414     1479  3000               	movlw	0
  6415     147A  3BFF               	subwfb	btemp+1,f
  6416     147B  087F               	movf	btemp+1,w
  6417     147C  047E               	iorwf	btemp,w
  6418     147D  1D03               	skipz
  6419     147E  2C75               	goto	initloop
  6420     147F  3400               	retlw	0
  6421                           
  6422                           	psect	clrtext
  6423     1468                     clear_ram0:	
  6424                           ;	Called with FSR0 containing the base address, and
  6425                           ;	btemp/btemp+1 has the size to clear
  6426                           
  6427     1468  0064               	clrwdt	;clear the watchdog before getting into this loop
  6428     1469                     clrloop0:
  6429     1469  0180               	clrf	0	;clear RAM location pointed to by FSR
  6430     146A  3101               	addfsr 0,1
  6431     146B  3001               	movlw	1
  6432     146C  02FE               	subwf	btemp,f
  6433     146D  3000               	movlw	0
  6434     146E  3BFF               	subwfb	btemp+1,f
  6435     146F  087F               	movf	btemp+1,w
  6436     1470  047E               	iorwf	btemp,w
  6437     1471  1D03               	skipz
  6438     1472  2C69               	goto	clrloop0	;have we reached the end yet?
  6439     1473  3400               	retlw	0	;all done for this memory range, return
  6440                           
  6441                           	psect	cstackCOMMON
  6442     0070                     __pcstackCOMMON:
  6443     0070                     ?_I2C1_SetBuffer:
  6444     0070                     ?_I2C1_Open:	
  6445                           ; 1 bytes @ 0x0
  6446                           
  6447     0070                     ??_I2C1_Open:	
  6448                           ; 1 bytes @ 0x0
  6449                           
  6450     0070                     ?_I2C1_MasterWrite:	
  6451                           ; 1 bytes @ 0x0
  6452                           
  6453     0070                     ?_I2C1_Close:	
  6454                           ; 1 bytes @ 0x0
  6455                           
  6456     0070                     ??_I2C1_Close:	
  6457                           ; 1 bytes @ 0x0
  6458                           
  6459     0070                     ?_SPI2_Close:	
  6460                           ; 1 bytes @ 0x0
  6461                           
  6462     0070                     ??_SPI2_Close:	
  6463                           ; 1 bytes @ 0x0
  6464                           
  6465     0070                     ?_SPI2_WriteByte:	
  6466                           ; 1 bytes @ 0x0
  6467                           
  6468     0070                     ?_SPI2_ReadByte:	
  6469                           ; 1 bytes @ 0x0
  6470                           
  6471     0070                     ??_SPI2_ReadByte:	
  6472                           ; 1 bytes @ 0x0
  6473                           
  6474     0070                     ?_SPI2_Open:	
  6475                           ; 1 bytes @ 0x0
  6476                           
  6477     0070                     ??_SPI2_Open:	
  6478                           ; 1 bytes @ 0x0
  6479                           
  6480     0070                     ?_PMD_Initialize:	
  6481                           ; 1 bytes @ 0x0
  6482                           
  6483     0070                     ??_PMD_Initialize:	
  6484                           ; 1 bytes @ 0x0
  6485                           
  6486     0070                     ?_I2C1_Initialize:	
  6487                           ; 1 bytes @ 0x0
  6488                           
  6489     0070                     ??_I2C1_Initialize:	
  6490                           ; 1 bytes @ 0x0
  6491                           
  6492     0070                     ?_SPI2_Initialize:	
  6493                           ; 1 bytes @ 0x0
  6494                           
  6495     0070                     ??_SPI2_Initialize:	
  6496                           ; 1 bytes @ 0x0
  6497                           
  6498     0070                     ?_OSCILLATOR_Initialize:	
  6499                           ; 1 bytes @ 0x0
  6500                           
  6501     0070                     ??_OSCILLATOR_Initialize:	
  6502                           ; 1 bytes @ 0x0
  6503                           
  6504     0070                     ?_ADCC_Initialize:	
  6505                           ; 1 bytes @ 0x0
  6506                           
  6507     0070                     ??_ADCC_Initialize:	
  6508                           ; 1 bytes @ 0x0
  6509                           
  6510     0070                     ?_I2C1_DO_IDLE:	
  6511                           ; 1 bytes @ 0x0
  6512                           
  6513     0070                     ??_I2C1_DO_IDLE:	
  6514                           ; 1 bytes @ 0x0
  6515                           
  6516     0070                     ?_I2C1_DO_SEND_ADR_READ:	
  6517                           ; 1 bytes @ 0x0
  6518                           
  6519     0070                     ??_I2C1_DO_SEND_ADR_READ:	
  6520                           ; 1 bytes @ 0x0
  6521                           
  6522     0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  6523                           ; 1 bytes @ 0x0
  6524                           
  6525     0070                     ?_I2C1_DO_TX:	
  6526                           ; 1 bytes @ 0x0
  6527                           
  6528     0070                     ?_I2C1_DO_RX:	
  6529                           ; 1 bytes @ 0x0
  6530                           
  6531     0070                     ?_I2C1_DO_RCEN:	
  6532                           ; 1 bytes @ 0x0
  6533                           
  6534     0070                     ??_I2C1_DO_RCEN:	
  6535                           ; 1 bytes @ 0x0
  6536                           
  6537     0070                     ?_I2C1_DO_TX_EMPTY:	
  6538                           ; 1 bytes @ 0x0
  6539                           
  6540     0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  6541                           ; 1 bytes @ 0x0
  6542                           
  6543     0070                     ??_I2C1_DO_SEND_RESTART_READ:	
  6544                           ; 1 bytes @ 0x0
  6545                           
  6546     0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  6547                           ; 1 bytes @ 0x0
  6548                           
  6549     0070                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  6550                           ; 1 bytes @ 0x0
  6551                           
  6552     0070                     ?_I2C1_DO_SEND_RESTART:	
  6553                           ; 1 bytes @ 0x0
  6554                           
  6555     0070                     ??_I2C1_DO_SEND_RESTART:	
  6556                           ; 1 bytes @ 0x0
  6557                           
  6558     0070                     ?_I2C1_DO_SEND_STOP:	
  6559                           ; 1 bytes @ 0x0
  6560                           
  6561     0070                     ??_I2C1_DO_SEND_STOP:	
  6562                           ; 1 bytes @ 0x0
  6563                           
  6564     0070                     ?_I2C1_DO_RX_ACK:	
  6565                           ; 1 bytes @ 0x0
  6566                           
  6567     0070                     ??_I2C1_DO_RX_ACK:	
  6568                           ; 1 bytes @ 0x0
  6569                           
  6570     0070                     ?_I2C1_DO_RX_NACK_STOP:	
  6571                           ; 1 bytes @ 0x0
  6572                           
  6573     0070                     ??_I2C1_DO_RX_NACK_STOP:	
  6574                           ; 1 bytes @ 0x0
  6575                           
  6576     0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  6577                           ; 1 bytes @ 0x0
  6578                           
  6579     0070                     ??_I2C1_DO_RX_NACK_RESTART:	
  6580                           ; 1 bytes @ 0x0
  6581                           
  6582     0070                     ?_I2C1_DO_RESET:	
  6583                           ; 1 bytes @ 0x0
  6584                           
  6585     0070                     ??_I2C1_DO_RESET:	
  6586                           ; 1 bytes @ 0x0
  6587                           
  6588     0070                     ?_I2C1_DO_ADDRESS_NACK:	
  6589                           ; 1 bytes @ 0x0
  6590                           
  6591     0070                     ?_I2C1_MasterClearIrq:	
  6592                           ; 1 bytes @ 0x0
  6593                           
  6594     0070                     ??_I2C1_MasterClearIrq:	
  6595                           ; 1 bytes @ 0x0
  6596                           
  6597     0070                     ?_I2C1_MasterOpen:	
  6598                           ; 1 bytes @ 0x0
  6599                           
  6600     0070                     ??_I2C1_MasterOpen:	
  6601                           ; 1 bytes @ 0x0
  6602                           
  6603     0070                     ?_I2C1_MasterDisableIrq:	
  6604                           ; 1 bytes @ 0x0
  6605                           
  6606     0070                     ??_I2C1_MasterDisableIrq:	
  6607                           ; 1 bytes @ 0x0
  6608                           
  6609     0070                     ?_I2C1_MasterClose:	
  6610                           ; 1 bytes @ 0x0
  6611                           
  6612     0070                     ??_I2C1_MasterClose:	
  6613                           ; 1 bytes @ 0x0
  6614                           
  6615     0070                     ?_I2C1_MasterStart:	
  6616                           ; 1 bytes @ 0x0
  6617                           
  6618     0070                     ??_I2C1_MasterStart:	
  6619                           ; 1 bytes @ 0x0
  6620                           
  6621     0070                     ?_I2C1_Poller:	
  6622                           ; 1 bytes @ 0x0
  6623                           
  6624     0070                     ?_I2C1_SetCallback:	
  6625                           ; 1 bytes @ 0x0
  6626                           
  6627     0070                     ?_I2C1_MasterWaitForEvent:	
  6628                           ; 1 bytes @ 0x0
  6629                           
  6630     0070                     ??_I2C1_MasterWaitForEvent:	
  6631                           ; 1 bytes @ 0x0
  6632                           
  6633     0070                     ?_I2C1_MasterFsm:	
  6634                           ; 1 bytes @ 0x0
  6635                           
  6636     0070                     ?_I2C1_MasterIsNack:	
  6637                           ; 1 bytes @ 0x0
  6638                           
  6639     0070                     ??_I2C1_MasterIsNack:	
  6640                           ; 1 bytes @ 0x0
  6641                           
  6642     0070                     ?_I2C1_MasterSendTxData:	
  6643                           ; 1 bytes @ 0x0
  6644                           
  6645     0070                     ??_I2C1_MasterSendTxData:	
  6646                           ; 1 bytes @ 0x0
  6647                           
  6648     0070                     ?_I2C1_MasterGetRxData:	
  6649                           ; 1 bytes @ 0x0
  6650                           
  6651     0070                     ??_I2C1_MasterGetRxData:	
  6652                           ; 1 bytes @ 0x0
  6653                           
  6654     0070                     ?_I2C1_MasterSendAck:	
  6655                           ; 1 bytes @ 0x0
  6656                           
  6657     0070                     ??_I2C1_MasterSendAck:	
  6658                           ; 1 bytes @ 0x0
  6659                           
  6660     0070                     ?_I2C1_MasterStartRx:	
  6661                           ; 1 bytes @ 0x0
  6662                           
  6663     0070                     ??_I2C1_MasterStartRx:	
  6664                           ; 1 bytes @ 0x0
  6665                           
  6666     0070                     ?_I2C1_MasterSetIrq:	
  6667                           ; 1 bytes @ 0x0
  6668                           
  6669     0070                     ??_I2C1_MasterSetIrq:	
  6670                           ; 1 bytes @ 0x0
  6671                           
  6672     0070                     ?_I2C1_MasterEnableRestart:	
  6673                           ; 1 bytes @ 0x0
  6674                           
  6675     0070                     ??_I2C1_MasterEnableRestart:	
  6676                           ; 1 bytes @ 0x0
  6677                           
  6678     0070                     ?_I2C1_MasterStop:	
  6679                           ; 1 bytes @ 0x0
  6680                           
  6681     0070                     ??_I2C1_MasterStop:	
  6682                           ; 1 bytes @ 0x0
  6683                           
  6684     0070                     ?_I2C1_MasterSendNack:	
  6685                           ; 1 bytes @ 0x0
  6686                           
  6687     0070                     ??_I2C1_MasterSendNack:	
  6688                           ; 1 bytes @ 0x0
  6689                           
  6690     0070                     ?_TLV320_SetHeadphoneVol:	
  6691                           ; 1 bytes @ 0x0
  6692                           
  6693     0070                     ?_power_on:	
  6694                           ; 1 bytes @ 0x0
  6695                           
  6696     0070                     ?_volume_control:	
  6697                           ; 1 bytes @ 0x0
  6698                           
  6699     0070                     ?_charge_display:	
  6700                           ; 1 bytes @ 0x0
  6701                           
  6702     0070                     ?_power_off:	
  6703                           ; 1 bytes @ 0x0
  6704                           
  6705     0070                     ?_mic_detect:	
  6706                           ; 1 bytes @ 0x0
  6707                           
  6708     0070                     ?_CC8531_Polling_Data_Send:	
  6709                           ; 1 bytes @ 0x0
  6710                           
  6711     0070                     ?_led_control:	
  6712                           ; 1 bytes @ 0x0
  6713                           
  6714     0070                     ??_led_control:	
  6715                           ; 1 bytes @ 0x0
  6716                           
  6717     0070                     ?_power_off_sequence:	
  6718                           ; 1 bytes @ 0x0
  6719                           
  6720     0070                     ?_TLV320_Mute:	
  6721                           ; 1 bytes @ 0x0
  6722                           
  6723     0070                     ?_button_push_play:	
  6724                           ; 1 bytes @ 0x0
  6725                           
  6726     0070                     ?_CC8531_Init_Data_Send:	
  6727                           ; 1 bytes @ 0x0
  6728                           
  6729     0070                     ?_PIN_MANAGER_Initialize:	
  6730                           ; 1 bytes @ 0x0
  6731                           
  6732     0070                     ??_PIN_MANAGER_Initialize:	
  6733                           ; 1 bytes @ 0x0
  6734                           
  6735     0070                     ?_SYSTEM_Initialize:	
  6736                           ; 1 bytes @ 0x0
  6737                           
  6738     0070                     ??_SYSTEM_Initialize:	
  6739                           ; 1 bytes @ 0x0
  6740                           
  6741     0070                     ?_I2C1_MasterOperation:	
  6742                           ; 1 bytes @ 0x0
  6743                           
  6744     0070                     ?_ADCC_StartConversion:	
  6745                           ; 1 bytes @ 0x0
  6746                           
  6747     0070                     ??_ADCC_StartConversion:	
  6748                           ; 1 bytes @ 0x0
  6749                           
  6750     0070                     ?_ADCC_IsConversionDone:	
  6751                           ; 1 bytes @ 0x0
  6752                           
  6753     0070                     ??_ADCC_IsConversionDone:	
  6754                           ; 1 bytes @ 0x0
  6755                           
  6756     0070                     ?_DELAY_milliseconds:	
  6757                           ; 1 bytes @ 0x0
  6758                           
  6759     0070                     ?_DELAY_microseconds:	
  6760                           ; 1 bytes @ 0x0
  6761                           
  6762     0070                     ?_DATAEE_WriteByte:	
  6763                           ; 1 bytes @ 0x0
  6764                           
  6765     0070                     ?_DATAEE_ReadByte:	
  6766                           ; 1 bytes @ 0x0
  6767                           
  6768     0070                     ?_main:	
  6769                           ; 1 bytes @ 0x0
  6770                           
  6771     0070                     ?_power_on_buzzer:	
  6772                           ; 1 bytes @ 0x0
  6773                           
  6774     0070                     ?_power_off_buzzer:	
  6775                           ; 1 bytes @ 0x0
  6776                           
  6777     0070                     ?_aic32_test:	
  6778                           ; 1 bytes @ 0x0
  6779                           
  6780     0070                     ?_aic32_headphoneout:	
  6781                           ; 2 bytes @ 0x0
  6782                           
  6783     0070                     ?_ADCC_GetConversionResult:	
  6784                           ; 2 bytes @ 0x0
  6785                           
  6786     0070                     ?___wmul:	
  6787                           ; 2 bytes @ 0x0
  6788                           
  6789     0070                     I2C1_Open@address:	
  6790                           ; 2 bytes @ 0x0
  6791                           
  6792     0070                     I2C1_Close@returnValue:	
  6793                           ; 1 bytes @ 0x0
  6794                           
  6795     0070                     I2C1_MasterSendTxData@data:	
  6796                           ; 1 bytes @ 0x0
  6797                           
  6798     0070                     ADCC_StartConversion@channel:	
  6799                           ; 1 bytes @ 0x0
  6800                           
  6801     0070                     SPI2_WriteByte@byte:	
  6802                           ; 1 bytes @ 0x0
  6803                           
  6804     0070                     I2C1_SetBuffer@bufferSize:	
  6805                           ; 1 bytes @ 0x0
  6806                           
  6807     0070                     I2C1_SetCallback@cb:	
  6808                           ; 2 bytes @ 0x0
  6809                           
  6810     0070                     DELAY_milliseconds@milliseconds:	
  6811                           ; 2 bytes @ 0x0
  6812                           
  6813     0070                     DELAY_microseconds@microseconds:	
  6814                           ; 2 bytes @ 0x0
  6815                           
  6816     0070                     DATAEE_WriteByte@bAdd:	
  6817                           ; 2 bytes @ 0x0
  6818                           
  6819     0070                     DATAEE_ReadByte@bAdd:	
  6820                           ; 2 bytes @ 0x0
  6821                           
  6822     0070                     ___wmul@multiplier:	
  6823                           ; 2 bytes @ 0x0
  6824                           
  6825                           
  6826                           ; 2 bytes @ 0x0
  6827     0070                     	ds	1
  6828     0071                     ??_SPI2_WriteByte:
  6829     0071                     ??_I2C1_DO_SEND_ADR_WRITE:	
  6830                           ; 1 bytes @ 0x1
  6831                           
  6832     0071                     I2C1_Open@returnValue:	
  6833                           ; 1 bytes @ 0x1
  6834                           
  6835                           
  6836                           ; 1 bytes @ 0x1
  6837     0071                     	ds	1
  6838     0072                     ??_I2C1_SetBuffer:
  6839     0072                     ??_ADCC_GetConversionResult:	
  6840                           ; 1 bytes @ 0x2
  6841                           
  6842     0072                     ??_DELAY_milliseconds:	
  6843                           ; 1 bytes @ 0x2
  6844                           
  6845     0072                     ??_DELAY_microseconds:	
  6846                           ; 1 bytes @ 0x2
  6847                           
  6848     0072                     ??_DATAEE_ReadByte:	
  6849                           ; 1 bytes @ 0x2
  6850                           
  6851     0072                     I2C1_SetBuffer@buffer:	
  6852                           ; 1 bytes @ 0x2
  6853                           
  6854     0072                     I2C1_SetCallback@ptr:	
  6855                           ; 1 bytes @ 0x2
  6856                           
  6857     0072                     DATAEE_WriteByte@bData:	
  6858                           ; 1 bytes @ 0x2
  6859                           
  6860     0072                     led_control@led_state:	
  6861                           ; 1 bytes @ 0x2
  6862                           
  6863     0072                     ___wmul@multiplicand:	
  6864                           ; 1 bytes @ 0x2
  6865                           
  6866                           
  6867                           ; 2 bytes @ 0x2
  6868     0072                     	ds	1
  6869     0073                     ??_I2C1_SetCallback:
  6870     0073                     ??_DATAEE_WriteByte:	
  6871                           ; 1 bytes @ 0x3
  6872                           
  6873     0073                     I2C1_SetCallback@idx:	
  6874                           ; 1 bytes @ 0x3
  6875                           
  6876     0073                     SPI2_Open@spi2UniqueConfiguration:	
  6877                           ; 1 bytes @ 0x3
  6878                           
  6879     0073                     DATAEE_WriteByte@GIEBitValue:	
  6880                           ; 1 bytes @ 0x3
  6881                           
  6882                           
  6883                           ; 1 bytes @ 0x3
  6884     0073                     	ds	1
  6885     0074                     ?_I2C1_SetDataCompleteCallback:
  6886     0074                     ?_I2C1_SetAddressNackCallback:	
  6887                           ; 1 bytes @ 0x4
  6888                           
  6889     0074                     ??___wmul:	
  6890                           ; 1 bytes @ 0x4
  6891                           
  6892     0074                     I2C1_SetDataCompleteCallback@cb:	
  6893                           ; 1 bytes @ 0x4
  6894                           
  6895     0074                     I2C1_SetAddressNackCallback@cb:	
  6896                           ; 2 bytes @ 0x4
  6897                           
  6898     0074                     ___wmul@product:	
  6899                           ; 2 bytes @ 0x4
  6900                           
  6901                           
  6902                           ; 2 bytes @ 0x4
  6903     0074                     	ds	2
  6904     0076                     ?___aldiv:
  6905     0076                     I2C1_SetDataCompleteCallback@ptr:	
  6906                           ; 4 bytes @ 0x6
  6907                           
  6908     0076                     I2C1_SetAddressNackCallback@ptr:	
  6909                           ; 1 bytes @ 0x6
  6910                           
  6911     0076                     ___aldiv@divisor:	
  6912                           ; 1 bytes @ 0x6
  6913                           
  6914                           
  6915                           ; 4 bytes @ 0x6
  6916     0076                     	ds	1
  6917     0077                     ??_I2C1_SetDataCompleteCallback:
  6918     0077                     ??_I2C1_SetAddressNackCallback:	
  6919                           ; 1 bytes @ 0x7
  6920                           
  6921     0077                     ?_rd1RegCompleteHandler:	
  6922                           ; 1 bytes @ 0x7
  6923                           
  6924     0077                     ?_rd2RegCompleteHandler:	
  6925                           ; 1 bytes @ 0x7
  6926                           
  6927     0077                     ?_wr1RegCompleteHandler:	
  6928                           ; 1 bytes @ 0x7
  6929                           
  6930     0077                     ?_wr2RegCompleteHandler:	
  6931                           ; 1 bytes @ 0x7
  6932                           
  6933     0077                     ?_rdBlkRegCompleteHandler:	
  6934                           ; 1 bytes @ 0x7
  6935                           
  6936     0077                     ?_I2C1_CallbackReturnStop:	
  6937                           ; 1 bytes @ 0x7
  6938                           
  6939     0077                     ?_I2C1_CallbackReturnReset:	
  6940                           ; 1 bytes @ 0x7
  6941                           
  6942     0077                     ?_wr1RegCompleteHandler@xxtofl$F2543:	
  6943                           ; 1 bytes @ 0x7
  6944                           
  6945     0077                     ?_rd1RegCompleteHandler@xxtofl$F2552:	
  6946                           ; 1 bytes @ 0x7
  6947                           
  6948     0077                     ?_rd2RegCompleteHandler@xxtofl$F2558:	
  6949                           ; 1 bytes @ 0x7
  6950                           
  6951     0077                     ?_wr2RegCompleteHandler@xxtofl$F2564:	
  6952                           ; 1 bytes @ 0x7
  6953                           
  6954     0077                     ?_rdBlkRegCompleteHandler@xxtofl$F2570:	
  6955                           ; 1 bytes @ 0x7
  6956                           
  6957     0077                     wr1RegCompleteHandler@p:	
  6958                           ; 1 bytes @ 0x7
  6959                           
  6960     0077                     rd1RegCompleteHandler@p:	
  6961                           ; 1 bytes @ 0x7
  6962                           
  6963     0077                     rd2RegCompleteHandler@p:	
  6964                           ; 1 bytes @ 0x7
  6965                           
  6966     0077                     wr2RegCompleteHandler@p:	
  6967                           ; 1 bytes @ 0x7
  6968                           
  6969     0077                     rdBlkRegCompleteHandler@p:	
  6970                           ; 1 bytes @ 0x7
  6971                           
  6972     0077                     rd1RegCompleteHandler@i2c1_master_example$F264@ptr:	
  6973                           ; 1 bytes @ 0x7
  6974                           
  6975     0077                     rd2RegCompleteHandler@i2c1_master_example$F275@ptr:	
  6976                           ; 1 bytes @ 0x7
  6977                           
  6978     0077                     wr1RegCompleteHandler@i2c1_master_example$F281@ptr:	
  6979                           ; 1 bytes @ 0x7
  6980                           
  6981     0077                     wr2RegCompleteHandler@i2c1_master_example$F287@ptr:	
  6982                           ; 1 bytes @ 0x7
  6983                           
  6984     0077                     rdBlkRegCompleteHandler@i2c1_master_example$F298@ptr:	
  6985                           ; 1 bytes @ 0x7
  6986                           
  6987     0077                     I2C1_CallbackReturnStop@funPtr:	
  6988                           ; 1 bytes @ 0x7
  6989                           
  6990     0077                     I2C1_CallbackReturnReset@funPtr:	
  6991                           ; 1 bytes @ 0x7
  6992                           
  6993                           
  6994                           ; 1 bytes @ 0x7
  6995     0077                     	ds	1
  6996     0078                     ??_rd1RegCompleteHandler:
  6997     0078                     ??_rd2RegCompleteHandler:	
  6998                           ; 1 bytes @ 0x8
  6999                           
  7000     0078                     ??_wr1RegCompleteHandler:	
  7001                           ; 1 bytes @ 0x8
  7002                           
  7003     0078                     ??_wr2RegCompleteHandler:	
  7004                           ; 1 bytes @ 0x8
  7005                           
  7006     0078                     ??_rdBlkRegCompleteHandler:	
  7007                           ; 1 bytes @ 0x8
  7008                           
  7009     0078                     ??_I2C1_DO_TX:	
  7010                           ; 1 bytes @ 0x8
  7011                           
  7012     0078                     ??_I2C1_DO_RX:	
  7013                           ; 1 bytes @ 0x8
  7014                           
  7015     0078                     ??_I2C1_DO_TX_EMPTY:	
  7016                           ; 1 bytes @ 0x8
  7017                           
  7018     0078                     ??_I2C1_DO_ADDRESS_NACK:	
  7019                           ; 1 bytes @ 0x8
  7020                           
  7021     0078                     ??_I2C1_CallbackReturnStop:	
  7022                           ; 1 bytes @ 0x8
  7023                           
  7024     0078                     ??_I2C1_CallbackReturnReset:	
  7025                           ; 1 bytes @ 0x8
  7026                           
  7027     0078                     ??_wr1RegCompleteHandler@xxtofl$F2545:	
  7028                           ; 1 bytes @ 0x8
  7029                           
  7030     0078                     ??_rd1RegCompleteHandler@xxtofl$F2554:	
  7031                           ; 1 bytes @ 0x8
  7032                           
  7033     0078                     ??_rd2RegCompleteHandler@xxtofl$F2560:	
  7034                           ; 1 bytes @ 0x8
  7035                           
  7036     0078                     ??_wr2RegCompleteHandler@xxtofl$F2566:	
  7037                           ; 1 bytes @ 0x8
  7038                           
  7039     0078                     ??_rdBlkRegCompleteHandler@xxtofl$F2572:	
  7040                           ; 1 bytes @ 0x8
  7041                           
  7042                           
  7043                           ; 1 bytes @ 0x8
  7044     0078                     	ds	2
  7045     007A                     ??_I2C1_MasterFsm:
  7046     007A                     ___aldiv@dividend:	
  7047                           ; 1 bytes @ 0xA
  7048                           
  7049                           
  7050                           ; 4 bytes @ 0xA
  7051     007A                     	ds	2
  7052     007C                     ??_I2C1_Poller:
  7053     007C                     ??_I2C1_MasterOperation:	
  7054                           ; 1 bytes @ 0xC
  7055                           
  7056     007C                     I2C1_MasterOperation@read:	
  7057                           ; 1 bytes @ 0xC
  7058                           
  7059                           
  7060                           ; 1 bytes @ 0xC
  7061     007C                     	ds	1
  7062     007D                     I2C1_MasterOperation@returnValue:
  7063                           
  7064                           ; 1 bytes @ 0xD
  7065     007D                     	ds	1
  7066     007E                     ??_I2C1_MasterWrite:
  7067     007E                     ??_power_on:	
  7068                           ; 1 bytes @ 0xE
  7069                           
  7070     007E                     ??_volume_control:	
  7071                           ; 1 bytes @ 0xE
  7072                           
  7073     007E                     ??_power_off:	
  7074                           ; 1 bytes @ 0xE
  7075                           
  7076     007E                     ??_mic_detect:	
  7077                           ; 1 bytes @ 0xE
  7078                           
  7079     007E                     ??_power_off_sequence:	
  7080                           ; 1 bytes @ 0xE
  7081                           
  7082     007E                     ??_button_push_play:	
  7083                           ; 1 bytes @ 0xE
  7084                           
  7085     007E                     ??_aic32_test:	
  7086                           ; 1 bytes @ 0xE
  7087                           
  7088     007E                     ??_aic32_headphoneout:	
  7089                           ; 1 bytes @ 0xE
  7090                           
  7091     007E                     ??_I2C1_Write1ByteRegister:	
  7092                           ; 1 bytes @ 0xE
  7093                           
  7094     007E                     ??_power_on_buzzer:	
  7095                           ; 1 bytes @ 0xE
  7096                           
  7097     007E                     ??_power_off_buzzer:	
  7098                           ; 1 bytes @ 0xE
  7099                           
  7100     007E                     ??_TLV320AIC32_openCodec:	
  7101                           ; 1 bytes @ 0xE
  7102                           
  7103                           
  7104                           	psect	cstackBANK0
  7105     0020                     __pcstackBANK0:	
  7106                           ; 1 bytes @ 0xE
  7107                           
  7108     0020                     ?_I2C1_Write1ByteRegister:
  7109     0020                     ??___aldiv:	
  7110                           ; 1 bytes @ 0x0
  7111                           
  7112     0020                     I2C1_Write1ByteRegister@reg:	
  7113                           ; 1 bytes @ 0x0
  7114                           
  7115                           
  7116                           ; 1 bytes @ 0x0
  7117     0020                     	ds	1
  7118     0021                     I2C1_Write1ByteRegister@data:
  7119     0021                     ___aldiv@counter:	
  7120                           ; 1 bytes @ 0x1
  7121                           
  7122                           
  7123                           ; 1 bytes @ 0x1
  7124     0021                     	ds	1
  7125     0022                     I2C1_Write1ByteRegister@address:
  7126     0022                     ___aldiv@sign:	
  7127                           ; 1 bytes @ 0x2
  7128                           
  7129                           
  7130                           ; 1 bytes @ 0x2
  7131     0022                     	ds	1
  7132     0023                     ??_TLV320_SetHeadphoneVol:
  7133     0023                     ?_TLV320AIC32_config:	
  7134                           ; 1 bytes @ 0x3
  7135                           
  7136     0023                     TLV320AIC32_config@aic32:	
  7137                           ; 2 bytes @ 0x3
  7138                           
  7139     0023                     ___aldiv@quotient:	
  7140                           ; 2 bytes @ 0x3
  7141                           
  7142                           
  7143                           ; 4 bytes @ 0x3
  7144     0023                     	ds	1
  7145     0024                     TLV320_SetHeadphoneVol@cmd:
  7146                           
  7147                           ; 1 bytes @ 0x4
  7148     0024                     	ds	1
  7149     0025                     TLV320_SetHeadphoneVol@regval:
  7150     0025                     TLV320AIC32_config@config:	
  7151                           ; 1 bytes @ 0x5
  7152                           
  7153                           
  7154                           ; 2 bytes @ 0x5
  7155     0025                     	ds	1
  7156     0026                     TLV320_SetHeadphoneVol@volume:
  7157                           
  7158                           ; 1 bytes @ 0x6
  7159     0026                     	ds	1
  7160     0027                     ?_beep:
  7161     0027                     ??_TLV320AIC32_config:	
  7162                           ; 1 bytes @ 0x7
  7163                           
  7164     0027                     TLV320_SetHeadphoneVol@i:	
  7165                           ; 1 bytes @ 0x7
  7166                           
  7167     0027                     beep@note:	
  7168                           ; 1 bytes @ 0x7
  7169                           
  7170                           
  7171                           ; 2 bytes @ 0x7
  7172     0027                     	ds	2
  7173     0029                     beep@duration:
  7174     0029                     TLV320AIC32_config@retcode:	
  7175                           ; 2 bytes @ 0x9
  7176                           
  7177                           
  7178                           ; 2 bytes @ 0x9
  7179     0029                     	ds	2
  7180     002B                     ??_beep:
  7181     002B                     TLV320AIC32_config@cmd:	
  7182                           ; 1 bytes @ 0xB
  7183                           
  7184                           
  7185                           ; 1 bytes @ 0xB
  7186     002B                     	ds	1
  7187     002C                     TLV320AIC32_config@regval:
  7188                           
  7189                           ; 1 bytes @ 0xC
  7190     002C                     	ds	1
  7191     002D                     TLV320AIC32_config@i:
  7192                           
  7193                           ; 2 bytes @ 0xD
  7194     002D                     	ds	2
  7195     002F                     ?_TLV320AIC32_openCodec:
  7196     002F                     TLV320AIC32_openCodec@id:	
  7197                           ; 2 bytes @ 0xF
  7198                           
  7199                           
  7200                           ; 4 bytes @ 0xF
  7201     002F                     	ds	1
  7202     0030                     beep@time:
  7203                           
  7204                           ; 4 bytes @ 0x10
  7205     0030                     	ds	3
  7206     0033                     TLV320AIC32_openCodec@config:
  7207                           
  7208                           ; 2 bytes @ 0x13
  7209     0033                     	ds	1
  7210     0034                     beep@i:
  7211                           
  7212                           ; 2 bytes @ 0x14
  7213     0034                     	ds	1
  7214     0035                     TLV320AIC32_openCodec@retcode:
  7215                           
  7216                           ; 2 bytes @ 0x15
  7217     0035                     	ds	1
  7218     0036                     beep@beepDelay:
  7219                           
  7220                           ; 4 bytes @ 0x16
  7221     0036                     	ds	4
  7222     003A                     ??_charge_display:
  7223     003A                     ??_CC8531_Polling_Data_Send:	
  7224                           ; 1 bytes @ 0x1A
  7225                           
  7226     003A                     ??_TLV320_Mute:	
  7227                           ; 1 bytes @ 0x1A
  7228                           
  7229     003A                     ??_CC8531_Init_Data_Send:	
  7230                           ; 1 bytes @ 0x1A
  7231                           
  7232     003A                     volume_control@convertedValue:	
  7233                           ; 1 bytes @ 0x1A
  7234                           
  7235                           
  7236                           ; 2 bytes @ 0x1A
  7237     003A                     	ds	1
  7238     003B                     CC8531_Polling_Data_Send@cmd_count:
  7239     003B                     TLV320_Mute@on_off:	
  7240                           ; 1 bytes @ 0x1B
  7241                           
  7242                           
  7243                           ; 1 bytes @ 0x1B
  7244     003B                     	ds	1
  7245     003C                     TLV320_Mute@cmd:
  7246     003C                     charge_display@charger_temp:	
  7247                           ; 1 bytes @ 0x1C
  7248                           
  7249                           
  7250                           ; 2 bytes @ 0x1C
  7251     003C                     	ds	1
  7252     003D                     TLV320_Mute@regval:
  7253                           
  7254                           ; 1 bytes @ 0x1D
  7255     003D                     	ds	1
  7256     003E                     TLV320_Mute@i:
  7257     003E                     charge_display@charger_value:	
  7258                           ; 1 bytes @ 0x1E
  7259                           
  7260                           
  7261                           ; 2 bytes @ 0x1E
  7262     003E                     	ds	1
  7263     003F                     mic_detect@mic_detect_value:
  7264                           
  7265                           ; 2 bytes @ 0x1F
  7266     003F                     	ds	2
  7267     0041                     CC8531_Init_Data_Send@check_connected_retry_count:
  7268                           
  7269                           ; 1 bytes @ 0x21
  7270     0041                     	ds	1
  7271     0042                     CC8531_Init_Data_Send@check_connected:
  7272                           
  7273                           ; 1 bytes @ 0x22
  7274     0042                     	ds	1
  7275     0043                     CC8531_Init_Data_Send@i:
  7276                           
  7277                           ; 2 bytes @ 0x23
  7278     0043                     	ds	2
  7279     0045                     CC8531_Init_Data_Send@i_2032:
  7280                           
  7281                           ; 2 bytes @ 0x25
  7282     0045                     	ds	2
  7283     0047                     CC8531_Init_Data_Send@cmd_count:
  7284                           
  7285                           ; 1 bytes @ 0x27
  7286     0047                     	ds	1
  7287     0048                     ??_main:
  7288                           
  7289                           ; 1 bytes @ 0x28
  7290     0048                     	ds	2
  7291                           
  7292                           	psect	maintext
  7293     08A0                     __pmaintext:	
  7294 ;;
  7295 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7296 ;;
  7297 ;; *************** function _main *****************
  7298 ;; Defined at:
  7299 ;;		line 84 in file "main.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;		None
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : B1F/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7317 ;;Total ram usage:        2 bytes
  7318 ;; Hardware stack levels required when called: 14
  7319 ;; This function calls:
  7320 ;;		_CC8531_Polling_Data_Send
  7321 ;;		_DATAEE_ReadByte
  7322 ;;		_SYSTEM_Initialize
  7323 ;;		_TLV320_SetHeadphoneVol
  7324 ;;		_charge_display
  7325 ;;		_mic_detect
  7326 ;;		_power_off
  7327 ;;		_power_on
  7328 ;;		_volume_control
  7329 ;; This function is called by:
  7330 ;;		Startup code after reset
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334     08A0                     _main:	
  7335                           ;psect for function _main
  7336                           
  7337     08A0                     l6719:	
  7338                           ;incstack = 0
  7339                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7340                           
  7341                           
  7342                           ;main.c: 87:     SYSTEM_Initialize();
  7343     08A0  3195  2554  3188   	fcall	_SYSTEM_Initialize
  7344     08A3                     l6721:
  7345                           
  7346                           ;main.c: 106:     volume_count = DATAEE_ReadByte(0xF000);
  7347     08A3  3000               	movlw	0
  7348     08A4  00F0               	movwf	DATAEE_ReadByte@bAdd
  7349     08A5  30F0               	movlw	240
  7350     08A6  00F1               	movwf	DATAEE_ReadByte@bAdd+1
  7351     08A7  3194  245C  3188   	fcall	_DATAEE_ReadByte
  7352     08AA  0020               	movlb	0	; select bank0
  7353     08AB  00C8               	movwf	??_main
  7354     08AC  01C9               	clrf	??_main+1
  7355     08AD  0848               	movf	??_main,w
  7356     08AE  00E9               	movwf	_volume_count
  7357     08AF  0849               	movf	??_main+1,w
  7358     08B0  00EA               	movwf	_volume_count+1
  7359     08B1                     l6723:
  7360                           
  7361                           ;main.c: 107:     if(volume_count > 9) volume_count = 4;
  7362     08B1  3000               	movlw	0
  7363     08B2  026A               	subwf	_volume_count+1,w
  7364     08B3  300A               	movlw	10
  7365     08B4  1903               	skipnz
  7366     08B5  0269               	subwf	_volume_count,w
  7367     08B6  1C03               	skipc
  7368     08B7  28B9               	goto	u3161
  7369     08B8  28BA               	goto	u3160
  7370     08B9                     u3161:
  7371     08B9  28BE               	goto	l6727
  7372     08BA                     u3160:
  7373     08BA                     l6725:
  7374     08BA  3004               	movlw	4
  7375     08BB  00E9               	movwf	_volume_count
  7376     08BC  3000               	movlw	0
  7377     08BD  00EA               	movwf	_volume_count+1
  7378     08BE                     l6727:
  7379                           
  7380                           ;main.c: 108:     TLV320_SetHeadphoneVol(volume_count);
  7381     08BE  0869               	movf	_volume_count,w
  7382     08BF  3189  2149  3188   	fcall	_TLV320_SetHeadphoneVol
  7383     08C2                     l6729:
  7384                           
  7385                           ;main.c: 110:     power_on();
  7386     08C2  318B  23AF  3188   	fcall	_power_on
  7387     08C5                     l6731:
  7388                           
  7389                           ;main.c: 113:     {;main.c: 115:         volume_control();
  7390     08C5  318C  2410  3188   	fcall	_volume_control
  7391     08C8                     l6733:
  7392                           
  7393                           ;main.c: 116:         charge_display();
  7394     08C8  318D  2597  3188   	fcall	_charge_display
  7395     08CB                     l6735:
  7396                           
  7397                           ;main.c: 117:         power_off();
  7398     08CB  3195  25F5  3188   	fcall	_power_off
  7399     08CE                     l6737:
  7400                           
  7401                           ;main.c: 118:         mic_detect();
  7402     08CE  318B  234F  3188   	fcall	_mic_detect
  7403     08D1                     l6739:
  7404                           
  7405                           ;main.c: 119:         CC8531_Polling_Data_Send();
  7406     08D1  3180  205D  3188   	fcall	_CC8531_Polling_Data_Send
  7407     08D4  28C5               	goto	l6731
  7408     08D5  3180  2802         	ljmp	start
  7409     08D7                     __end_of_main:
  7410                           
  7411                           	psect	text1
  7412     0C10                     __ptext1:	
  7413 ;; *************** function _volume_control *****************
  7414 ;; Defined at:
  7415 ;;		line 220 in file "main.c"
  7416 ;; Parameters:    Size  Location     Type
  7417 ;;		None
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  convertedVal    2   26[BANK0 ] unsigned short 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      void 
  7422 ;; Registers used:
  7423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7432 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;Total ram usage:        2 bytes
  7434 ;; Hardware stack levels used: 1
  7435 ;; Hardware stack levels required when called: 10
  7436 ;; This function calls:
  7437 ;;		_ADCC_GetConversionResult
  7438 ;;		_ADCC_IsConversionDone
  7439 ;;		_ADCC_StartConversion
  7440 ;;		_TLV320_SetHeadphoneVol
  7441 ;;		_button_push_play
  7442 ;; This function is called by:
  7443 ;;		_main
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447     0C10                     _volume_control:	
  7448                           ;psect for function _volume_control
  7449                           
  7450     0C10                     l6037:	
  7451                           ;incstack = 0
  7452                           ; Regs used in _volume_control: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7453                           
  7454                           
  7455                           ;main.c: 221:     adc_result_t convertedValue;;main.c: 223:     ADCC_StartConversion(cha
      +                          nnel_ANA3);
  7456     0C10  3003               	movlw	3
  7457     0C11  3188  2000  318C   	fcall	_ADCC_StartConversion
  7458     0C14                     l6039:	
  7459                           ;main.c: 224:     while(!ADCC_IsConversionDone());
  7460                           
  7461     0C14  3194  2413  318C   	fcall	_ADCC_IsConversionDone
  7462     0C17  3A00               	xorlw	0
  7463     0C18  1903               	skipnz
  7464     0C19  2C1B               	goto	u2431
  7465     0C1A  2C1C               	goto	u2430
  7466     0C1B                     u2431:
  7467     0C1B  2C14               	goto	l6039
  7468     0C1C                     u2430:
  7469     0C1C                     l6041:
  7470                           
  7471                           ;main.c: 225:     convertedValue = ADCC_GetConversionResult();
  7472     0C1C  3194  2406  318C   	fcall	_ADCC_GetConversionResult
  7473     0C1F  0871               	movf	?_ADCC_GetConversionResult+1,w
  7474     0C20  0020               	movlb	0	; select bank0
  7475     0C21  00BB               	movwf	volume_control@convertedValue+1
  7476     0C22  0870               	movf	?_ADCC_GetConversionResult,w
  7477     0C23  00BA               	movwf	volume_control@convertedValue
  7478     0C24                     l6043:
  7479                           
  7480                           ;main.c: 227:     if(convertedValue <= 0x300){
  7481     0C24  3003               	movlw	3
  7482     0C25  023B               	subwf	volume_control@convertedValue+1,w
  7483     0C26  3001               	movlw	1
  7484     0C27  1903               	skipnz
  7485     0C28  023A               	subwf	volume_control@convertedValue,w
  7486     0C29  1803               	skipnc
  7487     0C2A  2C2C               	goto	u2441
  7488     0C2B  2C2D               	goto	u2440
  7489     0C2C                     u2441:
  7490     0C2C  2C4E               	goto	l6059
  7491     0C2D                     u2440:
  7492     0C2D                     l6045:
  7493                           
  7494                           ;main.c: 228:         if(volume_count > 8){
  7495     0C2D  3000               	movlw	0
  7496     0C2E  026A               	subwf	_volume_count+1,w
  7497     0C2F  3009               	movlw	9
  7498     0C30  1903               	skipnz
  7499     0C31  0269               	subwf	_volume_count,w
  7500     0C32  1C03               	skipc
  7501     0C33  2C35               	goto	u2451
  7502     0C34  2C36               	goto	u2450
  7503     0C35                     u2451:
  7504     0C35  2C3E               	goto	l6051
  7505     0C36                     u2450:
  7506     0C36                     l6047:
  7507                           
  7508                           ;main.c: 229:             volume_count = 9;
  7509     0C36  3009               	movlw	9
  7510     0C37  00E9               	movwf	_volume_count
  7511     0C38  3000               	movlw	0
  7512     0C39  00EA               	movwf	_volume_count+1
  7513     0C3A                     l6049:
  7514                           
  7515                           ;main.c: 230:             button_push_play();
  7516     0C3A  3195  25DC  318C   	fcall	_button_push_play
  7517                           
  7518                           ;main.c: 231:         }
  7519     0C3D  2C7A               	goto	l1110
  7520     0C3E                     l6051:
  7521                           
  7522                           ;main.c: 233:             if(key_pressed_volume == 0){
  7523     0C3E  0866               	movf	_key_pressed_volume,w
  7524     0C3F  1D03               	btfss	3,2
  7525     0C40  2C42               	goto	u2461
  7526     0C41  2C43               	goto	u2460
  7527     0C42                     u2461:
  7528     0C42  2C7A               	goto	l1110
  7529     0C43                     u2460:
  7530     0C43                     l6053:
  7531                           
  7532                           ;main.c: 234:                 volume_count++;
  7533     0C43  3001               	movlw	1
  7534     0C44  07E9               	addwf	_volume_count,f
  7535     0C45  3000               	movlw	0
  7536     0C46  3DEA               	addwfc	_volume_count+1,f
  7537     0C47                     l6055:
  7538                           
  7539                           ;main.c: 235:                 key_pressed_volume = 1;
  7540     0C47  01E6               	clrf	_key_pressed_volume
  7541     0C48  0AE6               	incf	_key_pressed_volume,f
  7542     0C49                     l6057:
  7543                           
  7544                           ;main.c: 237:                 TLV320_SetHeadphoneVol(volume_count);
  7545     0C49  0869               	movf	_volume_count,w
  7546     0C4A  3189  2149  318C   	fcall	_TLV320_SetHeadphoneVol
  7547     0C4D  2C7A               	goto	l1110
  7548     0C4E                     l6059:
  7549     0C4E  3003               	movlw	3
  7550     0C4F  023B               	subwf	volume_control@convertedValue+1,w
  7551     0C50  3001               	movlw	1
  7552     0C51  1903               	skipnz
  7553     0C52  023A               	subwf	volume_control@convertedValue,w
  7554     0C53  1C03               	skipc
  7555     0C54  2C56               	goto	u2471
  7556     0C55  2C57               	goto	u2470
  7557     0C56                     u2471:
  7558     0C56  2C79               	goto	l6077
  7559     0C57                     u2470:
  7560     0C57                     l6061:
  7561     0C57  3003               	movlw	3
  7562     0C58  023B               	subwf	volume_control@convertedValue+1,w
  7563     0C59  3051               	movlw	81
  7564     0C5A  1903               	skipnz
  7565     0C5B  023A               	subwf	volume_control@convertedValue,w
  7566     0C5C  1803               	skipnc
  7567     0C5D  2C5F               	goto	u2481
  7568     0C5E  2C60               	goto	u2480
  7569     0C5F                     u2481:
  7570     0C5F  2C79               	goto	l6077
  7571     0C60                     u2480:
  7572     0C60                     l6063:
  7573                           
  7574                           ;main.c: 242:         if(volume_count < 1){
  7575     0C60  0869               	movf	_volume_count,w
  7576     0C61  046A               	iorwf	_volume_count+1,w
  7577     0C62  1D03               	btfss	3,2
  7578     0C63  2C65               	goto	u2491
  7579     0C64  2C66               	goto	u2490
  7580     0C65                     u2491:
  7581     0C65  2C69               	goto	l6069
  7582     0C66                     u2490:
  7583     0C66                     l6065:
  7584                           
  7585                           ;main.c: 243:             volume_count = 0;
  7586     0C66  01E9               	clrf	_volume_count
  7587     0C67  01EA               	clrf	_volume_count+1
  7588     0C68  2C3A               	goto	l6049
  7589     0C69                     l6069:
  7590                           
  7591                           ;main.c: 247:             if(key_pressed_volume == 0){
  7592     0C69  0866               	movf	_key_pressed_volume,w
  7593     0C6A  1D03               	btfss	3,2
  7594     0C6B  2C6D               	goto	u2501
  7595     0C6C  2C6E               	goto	u2500
  7596     0C6D                     u2501:
  7597     0C6D  2C7A               	goto	l1110
  7598     0C6E                     u2500:
  7599     0C6E                     l6071:
  7600                           
  7601                           ;main.c: 248:                 volume_count--;
  7602     0C6E  3001               	movlw	1
  7603     0C6F  02E9               	subwf	_volume_count,f
  7604     0C70  3000               	movlw	0
  7605     0C71  3BEA               	subwfb	_volume_count+1,f
  7606     0C72                     l6073:
  7607                           
  7608                           ;main.c: 249:                 key_pressed_volume = 1;
  7609     0C72  01E6               	clrf	_key_pressed_volume
  7610     0C73  0AE6               	incf	_key_pressed_volume,f
  7611     0C74                     l6075:
  7612                           
  7613                           ;main.c: 251:                 TLV320_SetHeadphoneVol(volume_count);
  7614     0C74  0869               	movf	_volume_count,w
  7615     0C75  3189  2149  318C   	fcall	_TLV320_SetHeadphoneVol
  7616     0C78  2C7A               	goto	l1110
  7617     0C79                     l6077:
  7618                           
  7619                           ;main.c: 257:          key_pressed_volume = 0;
  7620     0C79  01E6               	clrf	_key_pressed_volume
  7621     0C7A                     l1110:
  7622     0C7A  0008               	return
  7623     0C7B                     __end_of_volume_control:
  7624                           
  7625                           	psect	text2
  7626     0949                     __ptext2:	
  7627 ;; *************** function _TLV320_SetHeadphoneVol *****************
  7628 ;; Defined at:
  7629 ;;		line 42 in file "tlv320aic32.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  volume          1    wreg     unsigned char 
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;  volume          1    6[BANK0 ] unsigned char 
  7634 ;;  i               1    7[BANK0 ] unsigned char 
  7635 ;;  regval          1    5[BANK0 ] unsigned char 
  7636 ;;  cmd             1    4[BANK0 ] unsigned char 
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      void 
  7639 ;; Registers used:
  7640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7647 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7650 ;;Total ram usage:        5 bytes
  7651 ;; Hardware stack levels used: 1
  7652 ;; Hardware stack levels required when called: 9
  7653 ;; This function calls:
  7654 ;;		_DELAY_milliseconds
  7655 ;;		_I2C1_Write1ByteRegister
  7656 ;; This function is called by:
  7657 ;;		_main
  7658 ;;		_volume_control
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662     0949                     _TLV320_SetHeadphoneVol:	
  7663                           ;psect for function _TLV320_SetHeadphoneVol
  7664                           
  7665                           
  7666                           ;incstack = 0
  7667                           ; Regs used in _TLV320_SetHeadphoneVol: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7668                           ;TLV320_SetHeadphoneVol@volume stored from wreg
  7669     0949  0020               	movlb	0	; select bank0
  7670     094A  00A6               	movwf	TLV320_SetHeadphoneVol@volume
  7671     094B                     l5417:
  7672                           
  7673                           ;tlv320aic32.c: 43:     uint8_t cmd, regval, i;;tlv320aic32.c: 44:     tlv320_volume_up[
      +                          3] = tlv320_volume[volume];
  7674     094B  0826               	movf	TLV320_SetHeadphoneVol@volume,w
  7675     094C  3E4A               	addlw	(low (_tlv320_volume@tlv320aic32$F2047| 0))& (0+255)
  7676     094D  0086               	movwf	6
  7677     094E  0187               	clrf	7
  7678     094F  0801               	movf	1,w
  7679     0950  0021               	movlb	1	; select bank1
  7680     0951  00A3               	movwf	(_tlv320_volume_up^(0+128)+3)
  7681                           
  7682                           ;tlv320aic32.c: 45:     tlv320_volume_up[5] = tlv320_volume[volume];
  7683     0952  0020               	movlb	0	; select bank0
  7684     0953  0826               	movf	TLV320_SetHeadphoneVol@volume,w
  7685     0954  3E4A               	addlw	(low (_tlv320_volume@tlv320aic32$F2047| 0))& (0+255)
  7686     0955  0086               	movwf	6
  7687     0956  0187               	clrf	7
  7688     0957  0801               	movf	1,w
  7689     0958  0021               	movlb	1	; select bank1
  7690     0959  00A5               	movwf	(_tlv320_volume_up^(0+128)+5)
  7691     095A                     l5419:
  7692                           
  7693                           ;tlv320aic32.c: 47:     for (i = 0; i< 16; i+= 2){
  7694     095A  0020               	movlb	0	; select bank0
  7695     095B  01A7               	clrf	TLV320_SetHeadphoneVol@i
  7696     095C                     l5425:
  7697                           
  7698                           ;tlv320aic32.c: 48:         cmd = (tlv320_volume_up[i]);
  7699     095C  0827               	movf	TLV320_SetHeadphoneVol@i,w
  7700     095D  3EA0               	addlw	(low (_tlv320_volume_up| 0))& (0+255)
  7701     095E  0086               	movwf	6
  7702     095F  0187               	clrf	7
  7703     0960  0801               	movf	1,w
  7704     0961  00A4               	movwf	TLV320_SetHeadphoneVol@cmd
  7705                           
  7706                           ;tlv320aic32.c: 49:         regval = tlv320_volume_up[i+1];
  7707     0962  0827               	movf	TLV320_SetHeadphoneVol@i,w
  7708     0963  3EA1               	addlw	(low ((_tlv320_volume_up| 0+1)))& (0+255)
  7709     0964  0086               	movwf	6
  7710     0965  0187               	clrf	7
  7711     0966  0801               	movf	1,w
  7712     0967  00A5               	movwf	TLV320_SetHeadphoneVol@regval
  7713     0968                     l5427:
  7714                           
  7715                           ;tlv320aic32.c: 50:         I2C1_Write1ByteRegister( 0x18, cmd, regval );
  7716     0968  0824               	movf	TLV320_SetHeadphoneVol@cmd,w
  7717     0969  00A0               	movwf	I2C1_Write1ByteRegister@reg
  7718     096A  0825               	movf	TLV320_SetHeadphoneVol@regval,w
  7719     096B  00A1               	movwf	I2C1_Write1ByteRegister@data
  7720     096C  3018               	movlw	24
  7721     096D  3197  279F  3189   	fcall	_I2C1_Write1ByteRegister
  7722     0970                     l5429:
  7723                           
  7724                           ;tlv320aic32.c: 51:         DELAY_milliseconds(1);
  7725     0970  3001               	movlw	1
  7726     0971  00F0               	movwf	DELAY_milliseconds@milliseconds
  7727     0972  3000               	movlw	0
  7728     0973  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  7729     0974  3195  2542  3189   	fcall	_DELAY_milliseconds
  7730     0977                     l5431:
  7731                           
  7732                           ;tlv320aic32.c: 52:     }
  7733     0977  3002               	movlw	2
  7734     0978  0020               	movlb	0	; select bank0
  7735     0979  00A3               	movwf	??_TLV320_SetHeadphoneVol
  7736     097A  0823               	movf	??_TLV320_SetHeadphoneVol,w
  7737     097B  07A7               	addwf	TLV320_SetHeadphoneVol@i,f
  7738     097C                     l5433:
  7739     097C  3010               	movlw	16
  7740     097D  0227               	subwf	TLV320_SetHeadphoneVol@i,w
  7741     097E  1C03               	skipc
  7742     097F  2981               	goto	u2071
  7743     0980  2982               	goto	u2070
  7744     0981                     u2071:
  7745     0981  295C               	goto	l5425
  7746     0982                     u2070:
  7747     0982                     l1505:
  7748     0982  0008               	return
  7749     0983                     __end_of_TLV320_SetHeadphoneVol:
  7750                           
  7751                           	psect	text3
  7752     0BAF                     __ptext3:	
  7753 ;; *************** function _power_on *****************
  7754 ;; Defined at:
  7755 ;;		line 346 in file "main.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;		None
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      void 
  7762 ;; Registers used:
  7763 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7773 ;;Total ram usage:        0 bytes
  7774 ;; Hardware stack levels used: 1
  7775 ;; Hardware stack levels required when called: 13
  7776 ;; This function calls:
  7777 ;;		_ADCC_Initialize
  7778 ;;		_CC8531_Init_Data_Send
  7779 ;;		_DELAY_milliseconds
  7780 ;;		_SPI2_Initialize
  7781 ;;		_aic32_test
  7782 ;;		_led_control
  7783 ;;		_power_on_buzzer
  7784 ;; This function is called by:
  7785 ;;		_main
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789     0BAF                     _power_on:	
  7790                           ;psect for function _power_on
  7791                           
  7792     0BAF                     l1172:	
  7793                           ;incstack = 0
  7794                           ; Regs used in _power_on: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7795                           ;main.c: 349:             do { LATAbits.LATA2 = 1; } while(0);
  7796                           
  7797     0BAF  0020               	movlb	0	; select bank0
  7798     0BB0  1516               	bsf	22,2	;volatile
  7799     0BB1                     l6005:
  7800                           
  7801                           ;main.c: 350:             power_on_buzzer();
  7802     0BB1  3188  2007  318B   	fcall	_power_on_buzzer
  7803                           
  7804                           ;main.c: 352:             DELAY_milliseconds(100);
  7805     0BB4  3064               	movlw	100
  7806     0BB5  00F0               	movwf	DELAY_milliseconds@milliseconds
  7807     0BB6  3000               	movlw	0
  7808     0BB7  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  7809     0BB8  3195  2542  318B   	fcall	_DELAY_milliseconds
  7810     0BBB                     l6007:
  7811     0BBB  0020               	movlb	0	; select bank0
  7812     0BBC  1696               	bsf	22,5	;volatile
  7813     0BBD                     l6009:
  7814     0BBD  1617               	bsf	23,4	;volatile
  7815     0BBE                     l6011:
  7816                           
  7817                           ;main.c: 359:             led_control(BLUE_LED_ON);
  7818     0BBE  3002               	movlw	2
  7819     0BBF  3197  2744  318B   	fcall	_led_control
  7820     0BC2                     l6013:
  7821                           
  7822                           ;main.c: 360:             DELAY_milliseconds(200);
  7823     0BC2  30C8               	movlw	200
  7824     0BC3  00F0               	movwf	DELAY_milliseconds@milliseconds
  7825     0BC4  3000               	movlw	0
  7826     0BC5  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  7827     0BC6  3195  2542  318B   	fcall	_DELAY_milliseconds
  7828                           
  7829                           ;main.c: 361:             led_control(LED_OFF);
  7830     0BC9  3003               	movlw	3
  7831     0BCA  3197  2744  318B   	fcall	_led_control
  7832     0BCD                     l6015:
  7833                           
  7834                           ;main.c: 362:             DELAY_milliseconds(200);
  7835     0BCD  30C8               	movlw	200
  7836     0BCE  00F0               	movwf	DELAY_milliseconds@milliseconds
  7837     0BCF  3000               	movlw	0
  7838     0BD0  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  7839     0BD1  3195  2542  318B   	fcall	_DELAY_milliseconds
  7840     0BD4                     l6017:
  7841                           
  7842                           ;main.c: 363:             led_control(BLUE_LED_ON);
  7843     0BD4  3002               	movlw	2
  7844     0BD5  3197  2744  318B   	fcall	_led_control
  7845                           
  7846                           ;main.c: 364:             DELAY_milliseconds(200);
  7847     0BD8  30C8               	movlw	200
  7848     0BD9  00F0               	movwf	DELAY_milliseconds@milliseconds
  7849     0BDA  3000               	movlw	0
  7850     0BDB  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  7851     0BDC  3195  2542  318B   	fcall	_DELAY_milliseconds
  7852     0BDF                     l6019:
  7853                           
  7854                           ;main.c: 365:             led_control(LED_OFF);
  7855     0BDF  3003               	movlw	3
  7856     0BE0  3197  2744  318B   	fcall	_led_control
  7857     0BE3                     l6021:
  7858                           
  7859                           ;main.c: 366:             DELAY_milliseconds(200);
  7860     0BE3  30C8               	movlw	200
  7861     0BE4  00F0               	movwf	DELAY_milliseconds@milliseconds
  7862     0BE5  3000               	movlw	0
  7863     0BE6  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  7864     0BE7  3195  2542  318B   	fcall	_DELAY_milliseconds
  7865                           
  7866                           ;main.c: 367:             led_control(BLUE_LED_ON);
  7867     0BEA  3002               	movlw	2
  7868     0BEB  3197  2744  318B   	fcall	_led_control
  7869     0BEE                     l6023:
  7870                           
  7871                           ;main.c: 374:             ADCC_Initialize();
  7872     0BEE  3196  260F  318B   	fcall	_ADCC_Initialize
  7873     0BF1                     l6025:
  7874                           
  7875                           ;main.c: 375:             DELAY_milliseconds(100);
  7876     0BF1  3064               	movlw	100
  7877     0BF2  00F0               	movwf	DELAY_milliseconds@milliseconds
  7878     0BF3  3000               	movlw	0
  7879     0BF4  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  7880     0BF5  3195  2542  318B   	fcall	_DELAY_milliseconds
  7881     0BF8                     l6027:
  7882                           
  7883                           ;main.c: 376:             SPI2_Initialize();
  7884     0BF8  3195  2567  318B   	fcall	_SPI2_Initialize
  7885     0BFB                     l6029:
  7886                           
  7887                           ;main.c: 377:             DELAY_milliseconds(100);
  7888     0BFB  3064               	movlw	100
  7889     0BFC  00F0               	movwf	DELAY_milliseconds@milliseconds
  7890     0BFD  3000               	movlw	0
  7891     0BFE  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  7892     0BFF  3195  2542  318B   	fcall	_DELAY_milliseconds
  7893     0C02                     l6031:
  7894                           
  7895                           ;main.c: 378:             aic32_test();
  7896     0C02  3193  23C4  318B   	fcall	_aic32_test
  7897     0C05                     l6033:
  7898                           
  7899                           ;main.c: 380:             DELAY_milliseconds(300);
  7900     0C05  302C               	movlw	44
  7901     0C06  00F0               	movwf	DELAY_milliseconds@milliseconds
  7902     0C07  3001               	movlw	1
  7903     0C08  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  7904     0C09  3195  2542  318B   	fcall	_DELAY_milliseconds
  7905     0C0C                     l6035:
  7906                           
  7907                           ;main.c: 381:             CC8531_Init_Data_Send();
  7908     0C0C  3183  2311  318B   	fcall	_CC8531_Init_Data_Send
  7909     0C0F                     l1178:
  7910     0C0F  0008               	return
  7911     0C10                     __end_of_power_on:
  7912                           
  7913                           	psect	text4
  7914     0807                     __ptext4:	
  7915 ;; *************** function _power_on_buzzer *****************
  7916 ;; Defined at:
  7917 ;;		line 291 in file "main.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;		None
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      void 
  7924 ;; Registers used:
  7925 ;;		wreg, status,2, status,0, pclath, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7935 ;;Total ram usage:        0 bytes
  7936 ;; Hardware stack levels used: 1
  7937 ;; Hardware stack levels required when called: 2
  7938 ;; This function calls:
  7939 ;;		_beep
  7940 ;; This function is called by:
  7941 ;;		_power_on
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945     0807                     _power_on_buzzer:	
  7946                           ;psect for function _power_on_buzzer
  7947                           
  7948     0807                     l5469:	
  7949                           ;incstack = 0
  7950                           ; Regs used in _power_on_buzzer: [wreg+status,2+status,0+pclath+cstack]
  7951                           
  7952                           
  7953                           ;main.c: 293:  beep( 277, 500);
  7954     0807  3015               	movlw	21
  7955     0808  0020               	movlb	0	; select bank0
  7956     0809  00A7               	movwf	beep@note
  7957     080A  3001               	movlw	1
  7958     080B  00A8               	movwf	beep@note+1
  7959     080C  30F4               	movlw	244
  7960     080D  00A9               	movwf	beep@duration
  7961     080E  3001               	movlw	1
  7962     080F  00AA               	movwf	beep@duration+1
  7963     0810  318C  247B  3188   	fcall	_beep
  7964                           
  7965                           ;main.c: 294:  beep( 349, 500);
  7966     0813  305D               	movlw	93
  7967     0814  0020               	movlb	0	; select bank0
  7968     0815  00A7               	movwf	beep@note
  7969     0816  3001               	movlw	1
  7970     0817  00A8               	movwf	beep@note+1
  7971     0818  30F4               	movlw	244
  7972     0819  00A9               	movwf	beep@duration
  7973     081A  3001               	movlw	1
  7974     081B  00AA               	movwf	beep@duration+1
  7975     081C  318C  247B  3188   	fcall	_beep
  7976                           
  7977                           ;main.c: 295:     beep( 415, 500);
  7978     081F  309F               	movlw	159
  7979     0820  0020               	movlb	0	; select bank0
  7980     0821  00A7               	movwf	beep@note
  7981     0822  3001               	movlw	1
  7982     0823  00A8               	movwf	beep@note+1
  7983     0824  30F4               	movlw	244
  7984     0825  00A9               	movwf	beep@duration
  7985     0826  3001               	movlw	1
  7986     0827  00AA               	movwf	beep@duration+1
  7987     0828  318C  247B  3188   	fcall	_beep
  7988                           
  7989                           ;main.c: 296:     beep( 554, 500);
  7990     082B  302A               	movlw	42
  7991     082C  0020               	movlb	0	; select bank0
  7992     082D  00A7               	movwf	beep@note
  7993     082E  3002               	movlw	2
  7994     082F  00A8               	movwf	beep@note+1
  7995     0830  30F4               	movlw	244
  7996     0831  00A9               	movwf	beep@duration
  7997     0832  3001               	movlw	1
  7998     0833  00AA               	movwf	beep@duration+1
  7999     0834  318C  247B  3188   	fcall	_beep
  8000     0837                     l1129:
  8001     0837  0008               	return
  8002     0838                     __end_of_power_on_buzzer:
  8003                           
  8004                           	psect	text5
  8005     13C4                     __ptext5:	
  8006 ;; *************** function _aic32_test *****************
  8007 ;; Defined at:
  8008 ;;		line 36 in file "tlv320aic32.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;		None
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;		None
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  2  1016[None  ] short 
  8015 ;; Registers used:
  8016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;Total ram usage:        0 bytes
  8027 ;; Hardware stack levels used: 1
  8028 ;; Hardware stack levels required when called: 12
  8029 ;; This function calls:
  8030 ;;		_aic32_headphoneout
  8031 ;; This function is called by:
  8032 ;;		_power_on
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036     13C4                     _aic32_test:	
  8037                           ;psect for function _aic32_test
  8038                           
  8039     13C4                     l5471:	
  8040                           ;incstack = 0
  8041                           ; Regs used in _aic32_test: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8042                           
  8043                           
  8044                           ;tlv320aic32.c: 38:     aic32_headphoneout();
  8045     13C4  3195  2531  3193   	fcall	_aic32_headphoneout
  8046     13C7                     l1500:
  8047     13C7  0008               	return
  8048     13C8                     __end_of_aic32_test:
  8049                           
  8050                           	psect	text6
  8051     1531                     __ptext6:	
  8052 ;; *************** function _aic32_headphoneout *****************
  8053 ;; Defined at:
  8054 ;;		line 167 in file "tlv320aic32_headphoneout.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;		None
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  aic32           2    0        short 
  8059 ;;  sample          2    0        short 
  8060 ;;  sec             2    0        short 
  8061 ;;  msec            2    0        short 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  2  1479[None  ] short 
  8064 ;; Registers used:
  8065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;Total ram usage:        0 bytes
  8076 ;; Hardware stack levels used: 1
  8077 ;; Hardware stack levels required when called: 11
  8078 ;; This function calls:
  8079 ;;		_TLV320AIC32_openCodec
  8080 ;; This function is called by:
  8081 ;;		_aic32_test
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085     1531                     _aic32_headphoneout:	
  8086                           ;psect for function _aic32_headphoneout
  8087                           
  8088     1531                     l5301:	
  8089                           ;incstack = 0
  8090                           ; Regs used in _aic32_headphoneout: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8091                           
  8092     1531  3000               	movlw	0
  8093     1532  0020               	movlb	0	; select bank0
  8094     1533  00B2               	movwf	TLV320AIC32_openCodec@id+3
  8095     1534  3000               	movlw	0
  8096     1535  00B1               	movwf	TLV320AIC32_openCodec@id+2
  8097     1536  3000               	movlw	0
  8098     1537  00B0               	movwf	TLV320AIC32_openCodec@id+1
  8099     1538  3000               	movlw	0
  8100     1539  00AF               	movwf	TLV320AIC32_openCodec@id
  8101     153A  301A               	movlw	26
  8102     153B  00B3               	movwf	TLV320AIC32_openCodec@config
  8103     153C  3022               	movlw	34
  8104     153D  00B4               	movwf	TLV320AIC32_openCodec@config+1
  8105     153E  3188  2038  3195   	fcall	_TLV320AIC32_openCodec
  8106     1541                     l1587:
  8107     1541  0008               	return
  8108     1542                     __end_of_aic32_headphoneout:
  8109                           
  8110                           	psect	text7
  8111     0838                     __ptext7:	
  8112 ;; *************** function _TLV320AIC32_openCodec *****************
  8113 ;; Defined at:
  8114 ;;		line 24 in file "tlv320aic32_aic32_opencodec.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  id              4   15[BANK0 ] unsigned long 
  8117 ;;  config          2   19[BANK0 ] PTR unsigned char 
  8118 ;;		 -> aic32config_page(248), 
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;  aic32           2    0        short 
  8121 ;;  retcode         2   21[BANK0 ] short 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  2   15[BANK0 ] short 
  8124 ;; Registers used:
  8125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8131 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8135 ;;Total ram usage:        8 bytes
  8136 ;; Hardware stack levels used: 1
  8137 ;; Hardware stack levels required when called: 10
  8138 ;; This function calls:
  8139 ;;		_TLV320AIC32_config
  8140 ;; This function is called by:
  8141 ;;		_aic32_headphoneout
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145     0838                     _TLV320AIC32_openCodec:	
  8146                           ;psect for function _TLV320AIC32_openCodec
  8147                           
  8148     0838                     l5227:	
  8149                           ;incstack = 0
  8150                           ; Regs used in _TLV320AIC32_openCodec: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8151                           
  8152                           
  8153                           ;tlv320aic32_aic32_opencodec.c: 24: AIC32_Handle TLV320AIC32_openCodec( uint32_t id, uin
      +                          t8_t *config );tlv320aic32_aic32_opencodec.c: 25: {;tlv320aic32_aic32_opencodec.c: 26:  
      +                             int16_t retcode = 0;
  8154     0838  0020               	movlb	0	; select bank0
  8155     0839  01B5               	clrf	TLV320AIC32_openCodec@retcode
  8156     083A  01B6               	clrf	TLV320AIC32_openCodec@retcode+1
  8157     083B                     l5229:
  8158                           
  8159                           ;tlv320aic32_aic32_opencodec.c: 28:     AIC32_Handle aic32;;tlv320aic32_aic32_opencodec.
      +                          c: 29:     if ( ( id != 0 ) || ( config == 0 ) )
  8160     083B  0832               	movf	TLV320AIC32_openCodec@id+3,w
  8161     083C  0431               	iorwf	TLV320AIC32_openCodec@id+2,w
  8162     083D  0430               	iorwf	TLV320AIC32_openCodec@id+1,w
  8163     083E  042F               	iorwf	TLV320AIC32_openCodec@id,w
  8164     083F  1D03               	skipz
  8165     0840  2842               	goto	u2011
  8166     0841  2843               	goto	u2010
  8167     0842                     u2011:
  8168     0842  2849               	goto	l5233
  8169     0843                     u2010:
  8170     0843                     l5231:
  8171     0843  0833               	movf	TLV320AIC32_openCodec@config,w
  8172     0844  0434               	iorwf	TLV320AIC32_openCodec@config+1,w
  8173     0845  1D03               	btfss	3,2
  8174     0846  2848               	goto	u2021
  8175     0847  2849               	goto	u2020
  8176     0848                     u2021:
  8177     0848  284E               	goto	l5237
  8178     0849                     u2020:
  8179     0849                     l5233:
  8180                           
  8181                           ;tlv320aic32_aic32_opencodec.c: 30:         return -1;
  8182     0849  30FF               	movlw	255
  8183     084A  00AF               	movwf	?_TLV320AIC32_openCodec
  8184     084B  30FF               	movlw	255
  8185     084C  00B0               	movwf	?_TLV320AIC32_openCodec+1
  8186     084D  2869               	goto	l1567
  8187     084E                     l5237:
  8188     084E                     l5239:
  8189                           
  8190                           ;tlv320aic32_aic32_opencodec.c: 54:     retcode |= TLV320AIC32_config( aic32, config );
  8191     084E  3018               	movlw	24
  8192     084F  00A3               	movwf	TLV320AIC32_config@aic32
  8193     0850  3000               	movlw	0
  8194     0851  00A4               	movwf	TLV320AIC32_config@aic32+1
  8195     0852  0834               	movf	TLV320AIC32_openCodec@config+1,w
  8196     0853  00A6               	movwf	TLV320AIC32_config@config+1
  8197     0854  0833               	movf	TLV320AIC32_openCodec@config,w
  8198     0855  00A5               	movwf	TLV320AIC32_config@config
  8199     0856  318A  224F  3188   	fcall	_TLV320AIC32_config
  8200     0859  0020               	movlb	0	; select bank0
  8201     085A  0823               	movf	?_TLV320AIC32_config,w
  8202     085B  04B5               	iorwf	TLV320AIC32_openCodec@retcode,f
  8203     085C  0824               	movf	?_TLV320AIC32_config+1,w
  8204     085D  04B6               	iorwf	TLV320AIC32_openCodec@retcode+1,f
  8205     085E                     l5241:
  8206                           
  8207                           ;tlv320aic32_aic32_opencodec.c: 57:     if ( retcode )
  8208     085E  0835               	movf	TLV320AIC32_openCodec@retcode,w
  8209     085F  0436               	iorwf	TLV320AIC32_openCodec@retcode+1,w
  8210     0860  1903               	btfsc	3,2
  8211     0861  2863               	goto	u2031
  8212     0862  2864               	goto	u2030
  8213     0863                     u2031:
  8214     0863  2865               	goto	l5247
  8215     0864                     u2030:
  8216     0864  2849               	goto	l5233
  8217     0865                     l5247:
  8218                           
  8219                           ;tlv320aic32_aic32_opencodec.c: 59:     return aic32;
  8220     0865  3018               	movlw	24
  8221     0866  00AF               	movwf	?_TLV320AIC32_openCodec
  8222     0867  3000               	movlw	0
  8223     0868  00B0               	movwf	?_TLV320AIC32_openCodec+1
  8224     0869                     l1567:
  8225     0869  0008               	return
  8226     086A                     __end_of_TLV320AIC32_openCodec:
  8227                           
  8228                           	psect	text8
  8229     0A4F                     __ptext8:	
  8230 ;; *************** function _TLV320AIC32_config *****************
  8231 ;; Defined at:
  8232 ;;		line 92 in file "tlv320aic32_registers.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;  aic32           2    3[BANK0 ] short 
  8235 ;;  config          2    5[BANK0 ] PTR unsigned char 
  8236 ;;		 -> aic32config_page(248), 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  i               2   13[BANK0 ] short 
  8239 ;;  retcode         2    9[BANK0 ] short 
  8240 ;;  data            2    0        short 
  8241 ;;  regval          1   12[BANK0 ] unsigned char 
  8242 ;;  cmd             1   11[BANK0 ] unsigned char 
  8243 ;;  len             1    0        unsigned char 
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  2    3[BANK0 ] short 
  8246 ;; Registers used:
  8247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8253 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;Total ram usage:       12 bytes
  8258 ;; Hardware stack levels used: 1
  8259 ;; Hardware stack levels required when called: 9
  8260 ;; This function calls:
  8261 ;;		_DELAY_milliseconds
  8262 ;;		_I2C1_Write1ByteRegister
  8263 ;; This function is called by:
  8264 ;;		_TLV320AIC32_openCodec
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268     0A4F                     _TLV320AIC32_config:	
  8269                           ;psect for function _TLV320AIC32_config
  8270                           
  8271     0A4F                     l5165:	
  8272                           ;incstack = 0
  8273                           ; Regs used in _TLV320AIC32_config: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8274                           
  8275                           
  8276                           ;tlv320aic32_registers.c: 92: int16_t TLV320AIC32_config( AIC32_Handle aic32, uint8_t *c
      +                          onfig );tlv320aic32_registers.c: 93: {;tlv320aic32_registers.c: 94:     int16_t i, data;
      +                          ;tlv320aic32_registers.c: 95:     uint8_t cmd, regval;;tlv320aic32_registers.c: 96:     
      +                          int16_t retcode = 0;
  8277     0A4F  0020               	movlb	0	; select bank0
  8278     0A50  01A9               	clrf	TLV320AIC32_config@retcode
  8279     0A51  01AA               	clrf	TLV320AIC32_config@retcode+1
  8280     0A52                     l5167:
  8281     0A52                     l5169:
  8282                           
  8283                           ;tlv320aic32_registers.c: 99:     if ( config == 0 )
  8284     0A52  0825               	movf	TLV320AIC32_config@config,w
  8285     0A53  0426               	iorwf	TLV320AIC32_config@config+1,w
  8286     0A54  1D03               	btfss	3,2
  8287     0A55  2A57               	goto	u1981
  8288     0A56  2A58               	goto	u1980
  8289     0A57                     u1981:
  8290     0A57  2A5D               	goto	l5175
  8291     0A58                     u1980:
  8292     0A58                     l5171:
  8293                           
  8294                           ;tlv320aic32_registers.c: 100:         return -1;
  8295     0A58  30FF               	movlw	255
  8296     0A59  00A3               	movwf	?_TLV320AIC32_config
  8297     0A5A  30FF               	movlw	255
  8298     0A5B  00A4               	movwf	?_TLV320AIC32_config+1
  8299     0A5C  2A9B               	goto	l1545
  8300     0A5D                     l5175:
  8301                           
  8302                           ;tlv320aic32_registers.c: 107:     for (i = 0; i< 248; i+= 2){
  8303     0A5D  01AD               	clrf	TLV320AIC32_config@i
  8304     0A5E  01AE               	clrf	TLV320AIC32_config@i+1
  8305     0A5F                     l5181:
  8306                           
  8307                           ;tlv320aic32_registers.c: 112:         cmd = (config[i]);
  8308     0A5F  0020               	movlb	0	; select bank0
  8309     0A60  082D               	movf	TLV320AIC32_config@i,w
  8310     0A61  0725               	addwf	TLV320AIC32_config@config,w
  8311     0A62  0086               	movwf	6
  8312     0A63  082E               	movf	TLV320AIC32_config@i+1,w
  8313     0A64  3D26               	addwfc	TLV320AIC32_config@config+1,w
  8314     0A65  0087               	movwf	7
  8315     0A66  0801               	movf	1,w
  8316     0A67  00AB               	movwf	TLV320AIC32_config@cmd
  8317                           
  8318                           ;tlv320aic32_registers.c: 113:         regval = config[i+1];
  8319     0A68  082D               	movf	TLV320AIC32_config@i,w
  8320     0A69  0725               	addwf	TLV320AIC32_config@config,w
  8321     0A6A  00A7               	movwf	??_TLV320AIC32_config
  8322     0A6B  082E               	movf	TLV320AIC32_config@i+1,w
  8323     0A6C  3D26               	addwfc	TLV320AIC32_config@config+1,w
  8324     0A6D  00A8               	movwf	??_TLV320AIC32_config+1
  8325     0A6E  0827               	movf	??_TLV320AIC32_config,w
  8326     0A6F  0086               	movwf	6
  8327     0A70  0828               	movf	??_TLV320AIC32_config+1,w
  8328     0A71  0087               	movwf	7
  8329     0A72  3141               	addfsr 1,1
  8330     0A73  0801               	movf	1,w
  8331     0A74  00AC               	movwf	TLV320AIC32_config@regval
  8332     0A75                     l5183:
  8333                           
  8334                           ;tlv320aic32_registers.c: 115:             I2C1_Write1ByteRegister( 0x18, cmd, regval );
  8335     0A75  082B               	movf	TLV320AIC32_config@cmd,w
  8336     0A76  00A0               	movwf	I2C1_Write1ByteRegister@reg
  8337     0A77  082C               	movf	TLV320AIC32_config@regval,w
  8338     0A78  00A1               	movwf	I2C1_Write1ByteRegister@data
  8339     0A79  3018               	movlw	24
  8340     0A7A  3197  279F  318A   	fcall	_I2C1_Write1ByteRegister
  8341     0A7D                     l5185:
  8342                           
  8343                           ;tlv320aic32_registers.c: 116:             DELAY_milliseconds(1);
  8344     0A7D  3001               	movlw	1
  8345     0A7E  00F0               	movwf	DELAY_milliseconds@milliseconds
  8346     0A7F  3000               	movlw	0
  8347     0A80  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  8348     0A81  3195  2542  318A   	fcall	_DELAY_milliseconds
  8349     0A84                     l5187:
  8350                           
  8351                           ;tlv320aic32_registers.c: 117:     }
  8352     0A84  3002               	movlw	2
  8353     0A85  0020               	movlb	0	; select bank0
  8354     0A86  07AD               	addwf	TLV320AIC32_config@i,f
  8355     0A87  3000               	movlw	0
  8356     0A88  3DAE               	addwfc	TLV320AIC32_config@i+1,f
  8357     0A89                     l5189:
  8358     0A89  082E               	movf	TLV320AIC32_config@i+1,w
  8359     0A8A  3A80               	xorlw	128
  8360     0A8B  00A7               	movwf	??_TLV320AIC32_config
  8361     0A8C  3080               	movlw	128
  8362     0A8D  0227               	subwf	??_TLV320AIC32_config,w
  8363     0A8E  1D03               	skipz
  8364     0A8F  2A92               	goto	u1995
  8365     0A90  30F8               	movlw	248
  8366     0A91  022D               	subwf	TLV320AIC32_config@i,w
  8367     0A92                     u1995:
  8368     0A92  1C03               	skipc
  8369     0A93  2A95               	goto	u1991
  8370     0A94  2A96               	goto	u1990
  8371     0A95                     u1991:
  8372     0A95  2A5F               	goto	l5181
  8373     0A96                     u1990:
  8374     0A96                     l5191:
  8375                           
  8376                           ;tlv320aic32_registers.c: 118:     return retcode;
  8377     0A96  0020               	movlb	0	; select bank0
  8378     0A97  082A               	movf	TLV320AIC32_config@retcode+1,w
  8379     0A98  00A4               	movwf	?_TLV320AIC32_config+1
  8380     0A99  0829               	movf	TLV320AIC32_config@retcode,w
  8381     0A9A  00A3               	movwf	?_TLV320AIC32_config
  8382     0A9B                     l1545:
  8383     0A9B  0008               	return
  8384     0A9C                     __end_of_TLV320AIC32_config:
  8385                           
  8386                           	psect	text9
  8387     0311                     __ptext9:	
  8388 ;; *************** function _CC8531_Init_Data_Send *****************
  8389 ;; Defined at:
  8390 ;;		line 11 in file "CC8531_Control_spi.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  i               2   35[BANK0 ] unsigned short 
  8395 ;;  i               2   37[BANK0 ] unsigned short 
  8396 ;;  cmd_count       1   39[BANK0 ] unsigned char 
  8397 ;;  check_connec    1   34[BANK0 ] unsigned char 
  8398 ;;  check_connec    1   33[BANK0 ] unsigned char 
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  1    wreg      void 
  8401 ;; Registers used:
  8402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;Total ram usage:       14 bytes
  8413 ;; Hardware stack levels used: 1
  8414 ;; Hardware stack levels required when called: 4
  8415 ;; This function calls:
  8416 ;;		_DELAY_microseconds
  8417 ;;		_DELAY_milliseconds
  8418 ;;		_SPI2_Close
  8419 ;;		_SPI2_Open
  8420 ;;		_SPI2_ReadByte
  8421 ;;		_SPI2_WriteByte
  8422 ;;		_power_off_sequence
  8423 ;; This function is called by:
  8424 ;;		_power_on
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428     0311                     _CC8531_Init_Data_Send:	
  8429                           ;psect for function _CC8531_Init_Data_Send
  8430                           
  8431     0311                     l5475:	
  8432                           ;incstack = 0
  8433                           ; Regs used in _CC8531_Init_Data_Send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8434                           
  8435                           
  8436                           ;CC8531_Control_spi.c: 13:     unsigned char check_connected = 0;
  8437     0311  0020               	movlb	0	; select bank0
  8438     0312  01C2               	clrf	CC8531_Init_Data_Send@check_connected
  8439                           
  8440                           ;CC8531_Control_spi.c: 14:     unsigned char check_connected_retry_count = 0;
  8441     0313  01C1               	clrf	CC8531_Init_Data_Send@check_connected_retry_count
  8442     0314                     l5477:
  8443                           
  8444                           ;CC8531_Control_spi.c: 15:     SPI2_Open(SPI2_DEFAULT);
  8445     0314  3001               	movlw	1
  8446     0315  3180  2009  3183   	fcall	_SPI2_Open
  8447     0318                     l5479:
  8448     0318  0020               	movlb	0	; select bank0
  8449     0319  1417               	bsf	23,0	;volatile
  8450     031A                     l5481:
  8451                           
  8452                           ;CC8531_Control_spi.c: 19:         DELAY_microseconds(100);
  8453     031A  3064               	movlw	100
  8454     031B  00F0               	movwf	DELAY_microseconds@microseconds
  8455     031C  3000               	movlw	0
  8456     031D  00F1               	movwf	DELAY_microseconds@microseconds+1
  8457     031E  3196  2683  3183   	fcall	_DELAY_microseconds
  8458     0321                     l5483:
  8459     0321  0020               	movlb	0	; select bank0
  8460     0322  1017               	bcf	23,0	;volatile
  8461     0323                     l5485:
  8462                           
  8463                           ;CC8531_Control_spi.c: 22:         for(cmd_count = 0; cmd_count < 4; cmd_count++){
  8464     0323  01C7               	clrf	CC8531_Init_Data_Send@cmd_count
  8465     0324                     l5491:
  8466                           
  8467                           ;CC8531_Control_spi.c: 23:             SPI2_WriteByte(cc8531_init_data[cmd_count]);
  8468     0324  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  8469     0325  3E12               	addlw	18
  8470     0326  0086               	movwf	6
  8471     0327  0187               	clrf	7
  8472     0328  3023               	movlw	35
  8473     0329  3D87               	addwfc	7,f
  8474     032A  0801               	movf	1,w
  8475     032B  00F0               	movwf	SPI2_WriteByte@byte
  8476     032C  3193  23C0  3183   	fcall	_SPI2_WriteByte
  8477     032F                     l5493:
  8478                           
  8479                           ;CC8531_Control_spi.c: 24:             DELAY_microseconds(1);
  8480     032F  3001               	movlw	1
  8481     0330  00F0               	movwf	DELAY_microseconds@microseconds
  8482     0331  3000               	movlw	0
  8483     0332  00F1               	movwf	DELAY_microseconds@microseconds+1
  8484     0333  3196  2683  3183   	fcall	_DELAY_microseconds
  8485     0336                     l5495:
  8486                           
  8487                           ;CC8531_Control_spi.c: 25:         }
  8488     0336  3001               	movlw	1
  8489     0337  0020               	movlb	0	; select bank0
  8490     0338  00BA               	movwf	??_CC8531_Init_Data_Send
  8491     0339  083A               	movf	??_CC8531_Init_Data_Send,w
  8492     033A  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  8493     033B                     l5497:
  8494     033B  3004               	movlw	4
  8495     033C  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  8496     033D  1C03               	skipc
  8497     033E  2B40               	goto	u2111
  8498     033F  2B41               	goto	u2110
  8499     0340                     u2111:
  8500     0340  2B24               	goto	l5491
  8501     0341                     u2110:
  8502     0341                     l1224:	
  8503                           ;CC8531_Control_spi.c: 26:         do { LATBbits.LATB0 = 1; } while(0);
  8504                           
  8505     0341  1417               	bsf	23,0	;volatile
  8506     0342                     l5499:
  8507                           
  8508                           ;CC8531_Control_spi.c: 27:         DELAY_milliseconds(1);
  8509     0342  3001               	movlw	1
  8510     0343  00F0               	movwf	DELAY_milliseconds@milliseconds
  8511     0344  3000               	movlw	0
  8512     0345  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  8513     0346  3195  2542  3183   	fcall	_DELAY_milliseconds
  8514     0349                     l5501:
  8515     0349  0020               	movlb	0	; select bank0
  8516     034A  1017               	bcf	23,0	;volatile
  8517     034B                     l5503:
  8518                           
  8519                           ;CC8531_Control_spi.c: 29:         for(cmd_count = 4; cmd_count < 30; cmd_count++){
  8520     034B  3004               	movlw	4
  8521     034C  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  8522     034D                     l5509:
  8523                           
  8524                           ;CC8531_Control_spi.c: 30:             SPI2_WriteByte(cc8531_init_data[cmd_count]);
  8525     034D  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  8526     034E  3E12               	addlw	18
  8527     034F  0086               	movwf	6
  8528     0350  0187               	clrf	7
  8529     0351  3023               	movlw	35
  8530     0352  3D87               	addwfc	7,f
  8531     0353  0801               	movf	1,w
  8532     0354  00F0               	movwf	SPI2_WriteByte@byte
  8533     0355  3193  23C0  3183   	fcall	_SPI2_WriteByte
  8534     0358                     l5511:
  8535                           
  8536                           ;CC8531_Control_spi.c: 31:             DELAY_microseconds(1);
  8537     0358  3001               	movlw	1
  8538     0359  00F0               	movwf	DELAY_microseconds@microseconds
  8539     035A  3000               	movlw	0
  8540     035B  00F1               	movwf	DELAY_microseconds@microseconds+1
  8541     035C  3196  2683  3183   	fcall	_DELAY_microseconds
  8542     035F                     l5513:
  8543                           
  8544                           ;CC8531_Control_spi.c: 32:         }
  8545     035F  3001               	movlw	1
  8546     0360  0020               	movlb	0	; select bank0
  8547     0361  00BA               	movwf	??_CC8531_Init_Data_Send
  8548     0362  083A               	movf	??_CC8531_Init_Data_Send,w
  8549     0363  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  8550     0364                     l5515:
  8551     0364  301E               	movlw	30
  8552     0365  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  8553     0366  1C03               	skipc
  8554     0367  2B69               	goto	u2121
  8555     0368  2B6A               	goto	u2120
  8556     0369                     u2121:
  8557     0369  2B4D               	goto	l5509
  8558     036A                     u2120:
  8559     036A                     l1230:	
  8560                           ;CC8531_Control_spi.c: 34:         do { LATBbits.LATB0 = 1; } while(0);
  8561                           
  8562     036A  1417               	bsf	23,0	;volatile
  8563     036B                     l5517:
  8564                           
  8565                           ;CC8531_Control_spi.c: 35:         DELAY_microseconds(500);
  8566     036B  30F4               	movlw	244
  8567     036C  00F0               	movwf	DELAY_microseconds@microseconds
  8568     036D  3001               	movlw	1
  8569     036E  00F1               	movwf	DELAY_microseconds@microseconds+1
  8570     036F  3196  2683  3183   	fcall	_DELAY_microseconds
  8571     0372                     l5519:
  8572     0372  0020               	movlb	0	; select bank0
  8573     0373  1017               	bcf	23,0	;volatile
  8574     0374                     l5521:
  8575                           
  8576                           ;CC8531_Control_spi.c: 37:         for(cmd_count = 30; cmd_count < 33; cmd_count++){
  8577     0374  301E               	movlw	30
  8578     0375  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  8579     0376                     l5527:
  8580                           
  8581                           ;CC8531_Control_spi.c: 38:             SPI2_WriteByte(cc8531_init_data[cmd_count]);
  8582     0376  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  8583     0377  3E12               	addlw	18
  8584     0378  0086               	movwf	6
  8585     0379  0187               	clrf	7
  8586     037A  3023               	movlw	35
  8587     037B  3D87               	addwfc	7,f
  8588     037C  0801               	movf	1,w
  8589     037D  00F0               	movwf	SPI2_WriteByte@byte
  8590     037E  3193  23C0  3183   	fcall	_SPI2_WriteByte
  8591     0381                     l5529:
  8592                           
  8593                           ;CC8531_Control_spi.c: 39:             DELAY_microseconds(1);
  8594     0381  3001               	movlw	1
  8595     0382  00F0               	movwf	DELAY_microseconds@microseconds
  8596     0383  3000               	movlw	0
  8597     0384  00F1               	movwf	DELAY_microseconds@microseconds+1
  8598     0385  3196  2683  3183   	fcall	_DELAY_microseconds
  8599     0388                     l5531:
  8600                           
  8601                           ;CC8531_Control_spi.c: 40:         }
  8602     0388  3001               	movlw	1
  8603     0389  0020               	movlb	0	; select bank0
  8604     038A  00BA               	movwf	??_CC8531_Init_Data_Send
  8605     038B  083A               	movf	??_CC8531_Init_Data_Send,w
  8606     038C  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  8607     038D                     l5533:
  8608     038D  3021               	movlw	33
  8609     038E  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  8610     038F  1C03               	skipc
  8611     0390  2B92               	goto	u2131
  8612     0391  2B93               	goto	u2130
  8613     0392                     u2131:
  8614     0392  2B76               	goto	l5527
  8615     0393                     u2130:
  8616     0393                     l1236:	
  8617                           ;CC8531_Control_spi.c: 42:         do { LATBbits.LATB0 = 1; } while(0);
  8618                           
  8619     0393  1417               	bsf	23,0	;volatile
  8620     0394                     l5535:
  8621                           
  8622                           ;CC8531_Control_spi.c: 43:         DELAY_milliseconds(1500);
  8623     0394  30DC               	movlw	220
  8624     0395  00F0               	movwf	DELAY_milliseconds@milliseconds
  8625     0396  3005               	movlw	5
  8626     0397  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  8627     0398  3195  2542  3183   	fcall	_DELAY_milliseconds
  8628     039B                     l5537:
  8629     039B  0020               	movlb	0	; select bank0
  8630     039C  1017               	bcf	23,0	;volatile
  8631     039D                     l5539:
  8632                           
  8633                           ;CC8531_Control_spi.c: 59:         for(cmd_count = 33; cmd_count < 51; cmd_count++){
  8634     039D  3021               	movlw	33
  8635     039E  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  8636     039F                     l5545:
  8637                           
  8638                           ;CC8531_Control_spi.c: 60:             SPI2_WriteByte(cc8531_init_data[cmd_count]);
  8639     039F  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  8640     03A0  3E12               	addlw	18
  8641     03A1  0086               	movwf	6
  8642     03A2  0187               	clrf	7
  8643     03A3  3023               	movlw	35
  8644     03A4  3D87               	addwfc	7,f
  8645     03A5  0801               	movf	1,w
  8646     03A6  00F0               	movwf	SPI2_WriteByte@byte
  8647     03A7  3193  23C0  3183   	fcall	_SPI2_WriteByte
  8648     03AA                     l5547:
  8649                           
  8650                           ;CC8531_Control_spi.c: 61:             DELAY_microseconds(1);
  8651     03AA  3001               	movlw	1
  8652     03AB  00F0               	movwf	DELAY_microseconds@microseconds
  8653     03AC  3000               	movlw	0
  8654     03AD  00F1               	movwf	DELAY_microseconds@microseconds+1
  8655     03AE  3196  2683  3183   	fcall	_DELAY_microseconds
  8656     03B1                     l5549:
  8657                           
  8658                           ;CC8531_Control_spi.c: 62:         }
  8659     03B1  3001               	movlw	1
  8660     03B2  0020               	movlb	0	; select bank0
  8661     03B3  00BA               	movwf	??_CC8531_Init_Data_Send
  8662     03B4  083A               	movf	??_CC8531_Init_Data_Send,w
  8663     03B5  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  8664     03B6                     l5551:
  8665     03B6  3033               	movlw	51
  8666     03B7  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  8667     03B8  1C03               	skipc
  8668     03B9  2BBB               	goto	u2141
  8669     03BA  2BBC               	goto	u2140
  8670     03BB                     u2141:
  8671     03BB  2B9F               	goto	l5545
  8672     03BC                     u2140:
  8673     03BC                     l5553:
  8674                           
  8675                           ;CC8531_Control_spi.c: 64:         for(uint16_t i = 0; i<3000; i++){
  8676     03BC  01C3               	clrf	CC8531_Init_Data_Send@i
  8677     03BD  01C4               	clrf	CC8531_Init_Data_Send@i+1
  8678     03BE                     l5555:
  8679     03BE  300B               	movlw	11
  8680     03BF  0244               	subwf	CC8531_Init_Data_Send@i+1,w
  8681     03C0  30B8               	movlw	184
  8682     03C1  1903               	skipnz
  8683     03C2  0243               	subwf	CC8531_Init_Data_Send@i,w
  8684     03C3  1C03               	skipc
  8685     03C4  2BC6               	goto	u2151
  8686     03C5  2BC7               	goto	u2150
  8687     03C6                     u2151:
  8688     03C6  2BC8               	goto	l1244
  8689     03C7                     u2150:
  8690     03C7  2BDF               	goto	l5567
  8691     03C8                     l1244:	
  8692                           ;CC8531_Control_spi.c: 65:             do { LATBbits.LATB0 = 1; } while(0);
  8693                           
  8694     03C8  1417               	bsf	23,0	;volatile
  8695     03C9                     l5559:
  8696                           
  8697                           ;CC8531_Control_spi.c: 66:             DELAY_microseconds(1);
  8698     03C9  3001               	movlw	1
  8699     03CA  00F0               	movwf	DELAY_microseconds@microseconds
  8700     03CB  3000               	movlw	0
  8701     03CC  00F1               	movwf	DELAY_microseconds@microseconds+1
  8702     03CD  3196  2683  3183   	fcall	_DELAY_microseconds
  8703     03D0                     l5561:
  8704     03D0  0020               	movlb	0	; select bank0
  8705     03D1  1017               	bcf	23,0	;volatile
  8706     03D2                     l1247:
  8707                           
  8708                           ;CC8531_Control_spi.c: 68:             DELAY_microseconds(1);
  8709     03D2  3001               	movlw	1
  8710     03D3  00F0               	movwf	DELAY_microseconds@microseconds
  8711     03D4  3000               	movlw	0
  8712     03D5  00F1               	movwf	DELAY_microseconds@microseconds+1
  8713     03D6  3196  2683  3183   	fcall	_DELAY_microseconds
  8714     03D9                     l5563:
  8715                           
  8716                           ;CC8531_Control_spi.c: 69:         }
  8717     03D9  3001               	movlw	1
  8718     03DA  0020               	movlb	0	; select bank0
  8719     03DB  07C3               	addwf	CC8531_Init_Data_Send@i,f
  8720     03DC  3000               	movlw	0
  8721     03DD  3DC4               	addwfc	CC8531_Init_Data_Send@i+1,f
  8722     03DE  2BBE               	goto	l5555
  8723     03DF                     l5567:
  8724                           
  8725                           ;CC8531_Control_spi.c: 71:         for(cmd_count = 51; cmd_count < 83; cmd_count++){
  8726     03DF  3033               	movlw	51
  8727     03E0  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  8728     03E1                     l5571:
  8729                           
  8730                           ;CC8531_Control_spi.c: 72:             SPI2_WriteByte(cc8531_init_data[cmd_count]);
  8731     03E1  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  8732     03E2  3E12               	addlw	18
  8733     03E3  0086               	movwf	6
  8734     03E4  0187               	clrf	7
  8735     03E5  3023               	movlw	35
  8736     03E6  3D87               	addwfc	7,f
  8737     03E7  0801               	movf	1,w
  8738     03E8  00F0               	movwf	SPI2_WriteByte@byte
  8739     03E9  3193  23C0  3183   	fcall	_SPI2_WriteByte
  8740     03EC                     l5573:
  8741                           
  8742                           ;CC8531_Control_spi.c: 73:             DELAY_microseconds(1);
  8743     03EC  3001               	movlw	1
  8744     03ED  00F0               	movwf	DELAY_microseconds@microseconds
  8745     03EE  3000               	movlw	0
  8746     03EF  00F1               	movwf	DELAY_microseconds@microseconds+1
  8747     03F0  3196  2683  3183   	fcall	_DELAY_microseconds
  8748     03F3                     l5575:
  8749                           
  8750                           ;CC8531_Control_spi.c: 74:             if(cmd_count == 54){
  8751     03F3  3036               	movlw	54
  8752     03F4  0020               	movlb	0	; select bank0
  8753     03F5  0647               	xorwf	CC8531_Init_Data_Send@cmd_count,w
  8754     03F6  1D03               	btfss	3,2
  8755     03F7  2BF9               	goto	u2161
  8756     03F8  2BFA               	goto	u2160
  8757     03F9                     u2161:
  8758     03F9  2C06               	goto	l5581
  8759     03FA                     u2160:
  8760     03FA                     l5577:
  8761                           
  8762                           ;CC8531_Control_spi.c: 75:                 DELAY_microseconds(1);
  8763     03FA  3001               	movlw	1
  8764     03FB  00F0               	movwf	DELAY_microseconds@microseconds
  8765     03FC  3000               	movlw	0
  8766     03FD  00F1               	movwf	DELAY_microseconds@microseconds+1
  8767     03FE  3196  2683  3183   	fcall	_DELAY_microseconds
  8768     0401                     l5579:
  8769                           
  8770                           ;CC8531_Control_spi.c: 76:                 check_connected = SPI2_ReadByte();
  8771     0401  3193  23B2  3183   	fcall	_SPI2_ReadByte
  8772     0404  0020               	movlb	0	; select bank0
  8773     0405  00C2               	movwf	CC8531_Init_Data_Send@check_connected
  8774     0406                     l5581:
  8775                           
  8776                           ;CC8531_Control_spi.c: 79:             if((cmd_count >= 55) && (cmd_count <= 58)){
  8777     0406  3037               	movlw	55
  8778     0407  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  8779     0408  1C03               	skipc
  8780     0409  2C0B               	goto	u2171
  8781     040A  2C0C               	goto	u2170
  8782     040B                     u2171:
  8783     040B  2C31               	goto	l5589
  8784     040C                     u2170:
  8785     040C                     l5583:
  8786     040C  303B               	movlw	59
  8787     040D  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  8788     040E  1803               	skipnc
  8789     040F  2C11               	goto	u2181
  8790     0410  2C12               	goto	u2180
  8791     0411                     u2181:
  8792     0411  2C31               	goto	l5589
  8793     0412                     u2180:
  8794     0412                     l5585:
  8795                           
  8796                           ;CC8531_Control_spi.c: 80:                 DELAY_microseconds(1);
  8797     0412  3001               	movlw	1
  8798     0413  00F0               	movwf	DELAY_microseconds@microseconds
  8799     0414  3000               	movlw	0
  8800     0415  00F1               	movwf	DELAY_microseconds@microseconds+1
  8801     0416  3196  2683  3183   	fcall	_DELAY_microseconds
  8802     0419                     l5587:
  8803                           
  8804                           ;CC8531_Control_spi.c: 81:                 cc8531_init_data[cmd_count +32] = SPI2_ReadBy
      +                          te();
  8805     0419  3193  23B2  3183   	fcall	_SPI2_ReadByte
  8806     041C  0020               	movlb	0	; select bank0
  8807     041D  00BA               	movwf	??_CC8531_Init_Data_Send
  8808     041E  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  8809     041F  00BB               	movwf	??_CC8531_Init_Data_Send+1
  8810     0420  01BC               	clrf	??_CC8531_Init_Data_Send+2
  8811     0421  3032               	movlw	50
  8812     0422  00BD               	movwf	??_CC8531_Init_Data_Send+3
  8813     0423  3023               	movlw	35
  8814     0424  00BE               	movwf	??_CC8531_Init_Data_Send+4
  8815     0425  083B               	movf	??_CC8531_Init_Data_Send+1,w
  8816     0426  073D               	addwf	??_CC8531_Init_Data_Send+3,w
  8817     0427  00BF               	movwf	??_CC8531_Init_Data_Send+5
  8818     0428  083C               	movf	??_CC8531_Init_Data_Send+2,w
  8819     0429  3D3E               	addwfc	??_CC8531_Init_Data_Send+4,w
  8820     042A  00C0               	movwf	??_CC8531_Init_Data_Send+6
  8821     042B  083F               	movf	??_CC8531_Init_Data_Send+5,w
  8822     042C  0086               	movwf	6
  8823     042D  0840               	movf	??_CC8531_Init_Data_Send+6,w
  8824     042E  0087               	movwf	7
  8825     042F  083A               	movf	??_CC8531_Init_Data_Send,w
  8826     0430  0081               	movwf	1
  8827     0431                     l5589:
  8828                           
  8829                           ;CC8531_Control_spi.c: 84:         }
  8830     0431  3001               	movlw	1
  8831     0432  00BA               	movwf	??_CC8531_Init_Data_Send
  8832     0433  083A               	movf	??_CC8531_Init_Data_Send,w
  8833     0434  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  8834     0435                     l5591:
  8835     0435  3053               	movlw	83
  8836     0436  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  8837     0437  1C03               	skipc
  8838     0438  2C3A               	goto	u2191
  8839     0439  2C3B               	goto	u2190
  8840     043A                     u2191:
  8841     043A  2BE1               	goto	l5571
  8842     043B                     u2190:
  8843     043B                     l1252:	
  8844                           ;CC8531_Control_spi.c: 85:         do { LATBbits.LATB0 = 1; } while(0);
  8845                           
  8846     043B  1417               	bsf	23,0	;volatile
  8847     043C                     l5593:
  8848                           
  8849                           ;CC8531_Control_spi.c: 86:         DELAY_microseconds(500);
  8850     043C  30F4               	movlw	244
  8851     043D  00F0               	movwf	DELAY_microseconds@microseconds
  8852     043E  3001               	movlw	1
  8853     043F  00F1               	movwf	DELAY_microseconds@microseconds+1
  8854     0440  3196  2683  3183   	fcall	_DELAY_microseconds
  8855     0443                     l5595:
  8856     0443  0020               	movlb	0	; select bank0
  8857     0444  1017               	bcf	23,0	;volatile
  8858     0445                     l5597:
  8859                           
  8860                           ;CC8531_Control_spi.c: 88:         for(cmd_count = 83 ; cmd_count < 103; cmd_count++){
  8861     0445  3053               	movlw	83
  8862     0446  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  8863     0447                     l5603:
  8864                           
  8865                           ;CC8531_Control_spi.c: 89:             SPI2_WriteByte(cc8531_init_data[cmd_count]);
  8866     0447  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  8867     0448  3E12               	addlw	18
  8868     0449  0086               	movwf	6
  8869     044A  0187               	clrf	7
  8870     044B  3023               	movlw	35
  8871     044C  3D87               	addwfc	7,f
  8872     044D  0801               	movf	1,w
  8873     044E  00F0               	movwf	SPI2_WriteByte@byte
  8874     044F  3193  23C0  3183   	fcall	_SPI2_WriteByte
  8875     0452                     l5605:
  8876                           
  8877                           ;CC8531_Control_spi.c: 90:             DELAY_microseconds(1);
  8878     0452  3001               	movlw	1
  8879     0453  00F0               	movwf	DELAY_microseconds@microseconds
  8880     0454  3000               	movlw	0
  8881     0455  00F1               	movwf	DELAY_microseconds@microseconds+1
  8882     0456  3196  2683  3183   	fcall	_DELAY_microseconds
  8883     0459                     l5607:
  8884                           
  8885                           ;CC8531_Control_spi.c: 91:         }
  8886     0459  3001               	movlw	1
  8887     045A  0020               	movlb	0	; select bank0
  8888     045B  00BA               	movwf	??_CC8531_Init_Data_Send
  8889     045C  083A               	movf	??_CC8531_Init_Data_Send,w
  8890     045D  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  8891     045E                     l5609:
  8892     045E  3067               	movlw	103
  8893     045F  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  8894     0460  1C03               	skipc
  8895     0461  2C63               	goto	u2201
  8896     0462  2C64               	goto	u2200
  8897     0463                     u2201:
  8898     0463  2C47               	goto	l5603
  8899     0464                     u2200:
  8900     0464                     l5611:
  8901                           
  8902                           ;CC8531_Control_spi.c: 94:         if(check_connected != 0x00){
  8903     0464  0842               	movf	CC8531_Init_Data_Send@check_connected,w
  8904     0465  1903               	btfsc	3,2
  8905     0466  2C68               	goto	u2211
  8906     0467  2C69               	goto	u2210
  8907     0468                     u2211:
  8908     0468  2C6A               	goto	l5615
  8909     0469                     u2210:
  8910     0469  2C74               	goto	l5619
  8911     046A                     l5615:
  8912                           
  8913                           ;CC8531_Control_spi.c: 99:         if(check_connected_retry_count > 20){
  8914     046A  3015               	movlw	21
  8915     046B  0241               	subwf	CC8531_Init_Data_Send@check_connected_retry_count,w
  8916     046C  1C03               	skipc
  8917     046D  2C6F               	goto	u2221
  8918     046E  2C70               	goto	u2220
  8919     046F                     u2221:
  8920     046F  2B18               	goto	l5479
  8921     0470                     u2220:
  8922     0470                     l5617:
  8923                           
  8924                           ;CC8531_Control_spi.c: 100:             power_off_sequence();
  8925     0470  318A  2204  3183   	fcall	_power_off_sequence
  8926     0473  2B18               	goto	l5479
  8927     0474                     l5619:
  8928                           
  8929                           ;CC8531_Control_spi.c: 104:     for(uint16_t i = 0; i<280; i++){
  8930     0474  01C5               	clrf	CC8531_Init_Data_Send@i_2032
  8931     0475  01C6               	clrf	CC8531_Init_Data_Send@i_2032+1
  8932     0476                     l5621:
  8933     0476  3001               	movlw	1
  8934     0477  0246               	subwf	CC8531_Init_Data_Send@i_2032+1,w
  8935     0478  3018               	movlw	24
  8936     0479  1903               	skipnz
  8937     047A  0245               	subwf	CC8531_Init_Data_Send@i_2032,w
  8938     047B  1C03               	skipc
  8939     047C  2C7E               	goto	u2231
  8940     047D  2C7F               	goto	u2230
  8941     047E                     u2231:
  8942     047E  2C80               	goto	l1264
  8943     047F                     u2230:
  8944     047F  2C97               	goto	l5633
  8945     0480                     l1264:	
  8946                           ;CC8531_Control_spi.c: 105:         do { LATBbits.LATB0 = 1; } while(0);
  8947                           
  8948     0480  1417               	bsf	23,0	;volatile
  8949     0481                     l5625:
  8950                           
  8951                           ;CC8531_Control_spi.c: 106:         DELAY_microseconds(1);
  8952     0481  3001               	movlw	1
  8953     0482  00F0               	movwf	DELAY_microseconds@microseconds
  8954     0483  3000               	movlw	0
  8955     0484  00F1               	movwf	DELAY_microseconds@microseconds+1
  8956     0485  3196  2683  3183   	fcall	_DELAY_microseconds
  8957     0488                     l5627:
  8958     0488  0020               	movlb	0	; select bank0
  8959     0489  1017               	bcf	23,0	;volatile
  8960     048A                     l1267:
  8961                           
  8962                           ;CC8531_Control_spi.c: 108:         DELAY_microseconds(1);
  8963     048A  3001               	movlw	1
  8964     048B  00F0               	movwf	DELAY_microseconds@microseconds
  8965     048C  3000               	movlw	0
  8966     048D  00F1               	movwf	DELAY_microseconds@microseconds+1
  8967     048E  3196  2683  3183   	fcall	_DELAY_microseconds
  8968     0491                     l5629:
  8969                           
  8970                           ;CC8531_Control_spi.c: 109:     }
  8971     0491  3001               	movlw	1
  8972     0492  0020               	movlb	0	; select bank0
  8973     0493  07C5               	addwf	CC8531_Init_Data_Send@i_2032,f
  8974     0494  3000               	movlw	0
  8975     0495  3DC6               	addwfc	CC8531_Init_Data_Send@i_2032+1,f
  8976     0496  2C76               	goto	l5621
  8977     0497                     l5633:
  8978                           
  8979                           ;CC8531_Control_spi.c: 111:     for(cmd_count = 103 ; cmd_count < 105; cmd_count++){
  8980     0497  3067               	movlw	103
  8981     0498  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  8982     0499                     l5637:
  8983                           
  8984                           ;CC8531_Control_spi.c: 112:     SPI2_WriteByte(cc8531_init_data[cmd_count]);
  8985     0499  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  8986     049A  3E12               	addlw	18
  8987     049B  0086               	movwf	6
  8988     049C  0187               	clrf	7
  8989     049D  3023               	movlw	35
  8990     049E  3D87               	addwfc	7,f
  8991     049F  0801               	movf	1,w
  8992     04A0  00F0               	movwf	SPI2_WriteByte@byte
  8993     04A1  3193  23C0  3183   	fcall	_SPI2_WriteByte
  8994     04A4                     l5639:
  8995                           
  8996                           ;CC8531_Control_spi.c: 113:     DELAY_microseconds(1);
  8997     04A4  3001               	movlw	1
  8998     04A5  00F0               	movwf	DELAY_microseconds@microseconds
  8999     04A6  3000               	movlw	0
  9000     04A7  00F1               	movwf	DELAY_microseconds@microseconds+1
  9001     04A8  3196  2683  3183   	fcall	_DELAY_microseconds
  9002     04AB                     l5641:
  9003                           
  9004                           ;CC8531_Control_spi.c: 114:     }
  9005     04AB  3001               	movlw	1
  9006     04AC  0020               	movlb	0	; select bank0
  9007     04AD  00BA               	movwf	??_CC8531_Init_Data_Send
  9008     04AE  083A               	movf	??_CC8531_Init_Data_Send,w
  9009     04AF  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9010     04B0                     l5643:
  9011     04B0  3069               	movlw	105
  9012     04B1  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9013     04B2  1C03               	skipc
  9014     04B3  2CB5               	goto	u2241
  9015     04B4  2CB6               	goto	u2240
  9016     04B5                     u2241:
  9017     04B5  2C99               	goto	l5637
  9018     04B6                     u2240:
  9019     04B6                     l1270:	
  9020                           ;CC8531_Control_spi.c: 116:     do { LATBbits.LATB0 = 1; } while(0);
  9021                           
  9022     04B6  1417               	bsf	23,0	;volatile
  9023     04B7                     l5645:
  9024                           
  9025                           ;CC8531_Control_spi.c: 117:     DELAY_microseconds(100);
  9026     04B7  3064               	movlw	100
  9027     04B8  00F0               	movwf	DELAY_microseconds@microseconds
  9028     04B9  3000               	movlw	0
  9029     04BA  00F1               	movwf	DELAY_microseconds@microseconds+1
  9030     04BB  3196  2683  3183   	fcall	_DELAY_microseconds
  9031     04BE                     l5647:
  9032     04BE  0020               	movlb	0	; select bank0
  9033     04BF  1017               	bcf	23,0	;volatile
  9034     04C0                     l5649:
  9035                           
  9036                           ;CC8531_Control_spi.c: 119:     for(cmd_count = 105 ; cmd_count < 139; cmd_count++){
  9037     04C0  3069               	movlw	105
  9038     04C1  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9039     04C2                     l5655:
  9040                           
  9041                           ;CC8531_Control_spi.c: 120:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9042     04C2  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9043     04C3  3E12               	addlw	18
  9044     04C4  0086               	movwf	6
  9045     04C5  0187               	clrf	7
  9046     04C6  3023               	movlw	35
  9047     04C7  3D87               	addwfc	7,f
  9048     04C8  0801               	movf	1,w
  9049     04C9  00F0               	movwf	SPI2_WriteByte@byte
  9050     04CA  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9051     04CD                     l5657:
  9052                           
  9053                           ;CC8531_Control_spi.c: 121:         DELAY_microseconds(1);
  9054     04CD  3001               	movlw	1
  9055     04CE  00F0               	movwf	DELAY_microseconds@microseconds
  9056     04CF  3000               	movlw	0
  9057     04D0  00F1               	movwf	DELAY_microseconds@microseconds+1
  9058     04D1  3196  2683  3183   	fcall	_DELAY_microseconds
  9059     04D4                     l5659:
  9060                           
  9061                           ;CC8531_Control_spi.c: 122:     }
  9062     04D4  3001               	movlw	1
  9063     04D5  0020               	movlb	0	; select bank0
  9064     04D6  00BA               	movwf	??_CC8531_Init_Data_Send
  9065     04D7  083A               	movf	??_CC8531_Init_Data_Send,w
  9066     04D8  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9067     04D9                     l5661:
  9068     04D9  308B               	movlw	139
  9069     04DA  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9070     04DB  1C03               	skipc
  9071     04DC  2CDE               	goto	u2251
  9072     04DD  2CDF               	goto	u2250
  9073     04DE                     u2251:
  9074     04DE  2CC2               	goto	l5655
  9075     04DF                     u2250:
  9076     04DF                     l1276:	
  9077                           ;CC8531_Control_spi.c: 124:     do { LATBbits.LATB0 = 1; } while(0);
  9078                           
  9079     04DF  1417               	bsf	23,0	;volatile
  9080     04E0                     l5663:
  9081                           
  9082                           ;CC8531_Control_spi.c: 125:     DELAY_milliseconds(1);
  9083     04E0  3001               	movlw	1
  9084     04E1  00F0               	movwf	DELAY_milliseconds@milliseconds
  9085     04E2  3000               	movlw	0
  9086     04E3  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  9087     04E4  3195  2542  3183   	fcall	_DELAY_milliseconds
  9088     04E7                     l5665:
  9089     04E7  0020               	movlb	0	; select bank0
  9090     04E8  1017               	bcf	23,0	;volatile
  9091     04E9                     l5667:
  9092                           
  9093                           ;CC8531_Control_spi.c: 127:     for(cmd_count = 139 ; cmd_count < 157; cmd_count++){
  9094     04E9  308B               	movlw	139
  9095     04EA  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9096     04EB                     l5673:
  9097                           
  9098                           ;CC8531_Control_spi.c: 128:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9099     04EB  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9100     04EC  3E12               	addlw	18
  9101     04ED  0086               	movwf	6
  9102     04EE  0187               	clrf	7
  9103     04EF  3023               	movlw	35
  9104     04F0  3D87               	addwfc	7,f
  9105     04F1  0801               	movf	1,w
  9106     04F2  00F0               	movwf	SPI2_WriteByte@byte
  9107     04F3  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9108     04F6                     l5675:
  9109                           
  9110                           ;CC8531_Control_spi.c: 129:         DELAY_microseconds(1);
  9111     04F6  3001               	movlw	1
  9112     04F7  00F0               	movwf	DELAY_microseconds@microseconds
  9113     04F8  3000               	movlw	0
  9114     04F9  00F1               	movwf	DELAY_microseconds@microseconds+1
  9115     04FA  3196  2683  3183   	fcall	_DELAY_microseconds
  9116     04FD                     l5677:
  9117                           
  9118                           ;CC8531_Control_spi.c: 130:     }
  9119     04FD  3001               	movlw	1
  9120     04FE  0020               	movlb	0	; select bank0
  9121     04FF  00BA               	movwf	??_CC8531_Init_Data_Send
  9122     0500  083A               	movf	??_CC8531_Init_Data_Send,w
  9123     0501  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9124     0502                     l5679:
  9125     0502  309D               	movlw	157
  9126     0503  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9127     0504  1C03               	skipc
  9128     0505  2D07               	goto	u2261
  9129     0506  2D08               	goto	u2260
  9130     0507                     u2261:
  9131     0507  2CEB               	goto	l5673
  9132     0508                     u2260:
  9133     0508                     l1282:	
  9134                           ;CC8531_Control_spi.c: 132:     do { LATBbits.LATB0 = 1; } while(0);
  9135                           
  9136     0508  1417               	bsf	23,0	;volatile
  9137     0509                     l5681:
  9138                           
  9139                           ;CC8531_Control_spi.c: 133:     DELAY_microseconds(500);
  9140     0509  30F4               	movlw	244
  9141     050A  00F0               	movwf	DELAY_microseconds@microseconds
  9142     050B  3001               	movlw	1
  9143     050C  00F1               	movwf	DELAY_microseconds@microseconds+1
  9144     050D  3196  2683  3183   	fcall	_DELAY_microseconds
  9145     0510                     l5683:
  9146     0510  0020               	movlb	0	; select bank0
  9147     0511  1017               	bcf	23,0	;volatile
  9148     0512                     l5685:
  9149                           
  9150                           ;CC8531_Control_spi.c: 135:     for(cmd_count = 157 ; cmd_count < 159; cmd_count++){
  9151     0512  309D               	movlw	157
  9152     0513  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9153     0514                     l5691:
  9154                           
  9155                           ;CC8531_Control_spi.c: 136:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9156     0514  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9157     0515  3E12               	addlw	18
  9158     0516  0086               	movwf	6
  9159     0517  0187               	clrf	7
  9160     0518  3023               	movlw	35
  9161     0519  3D87               	addwfc	7,f
  9162     051A  0801               	movf	1,w
  9163     051B  00F0               	movwf	SPI2_WriteByte@byte
  9164     051C  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9165     051F                     l5693:
  9166                           
  9167                           ;CC8531_Control_spi.c: 137:         DELAY_microseconds(1);
  9168     051F  3001               	movlw	1
  9169     0520  00F0               	movwf	DELAY_microseconds@microseconds
  9170     0521  3000               	movlw	0
  9171     0522  00F1               	movwf	DELAY_microseconds@microseconds+1
  9172     0523  3196  2683  3183   	fcall	_DELAY_microseconds
  9173     0526                     l5695:
  9174                           
  9175                           ;CC8531_Control_spi.c: 138:     }
  9176     0526  3001               	movlw	1
  9177     0527  0020               	movlb	0	; select bank0
  9178     0528  00BA               	movwf	??_CC8531_Init_Data_Send
  9179     0529  083A               	movf	??_CC8531_Init_Data_Send,w
  9180     052A  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9181     052B                     l5697:
  9182     052B  309F               	movlw	159
  9183     052C  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9184     052D  1C03               	skipc
  9185     052E  2D30               	goto	u2271
  9186     052F  2D31               	goto	u2270
  9187     0530                     u2271:
  9188     0530  2D14               	goto	l5691
  9189     0531                     u2270:
  9190     0531                     l1288:	
  9191                           ;CC8531_Control_spi.c: 140:     do { LATBbits.LATB0 = 1; } while(0);
  9192                           
  9193     0531  1417               	bsf	23,0	;volatile
  9194     0532                     l5699:
  9195                           
  9196                           ;CC8531_Control_spi.c: 141:     DELAY_microseconds(500);
  9197     0532  30F4               	movlw	244
  9198     0533  00F0               	movwf	DELAY_microseconds@microseconds
  9199     0534  3001               	movlw	1
  9200     0535  00F1               	movwf	DELAY_microseconds@microseconds+1
  9201     0536  3196  2683  3183   	fcall	_DELAY_microseconds
  9202     0539                     l5701:
  9203     0539  0020               	movlb	0	; select bank0
  9204     053A  1017               	bcf	23,0	;volatile
  9205     053B                     l5703:
  9206                           
  9207                           ;CC8531_Control_spi.c: 143:     for(cmd_count = 159 ; cmd_count < 162; cmd_count++){
  9208     053B  309F               	movlw	159
  9209     053C  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9210     053D                     l5709:
  9211                           
  9212                           ;CC8531_Control_spi.c: 144:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9213     053D  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9214     053E  3E12               	addlw	18
  9215     053F  0086               	movwf	6
  9216     0540  0187               	clrf	7
  9217     0541  3023               	movlw	35
  9218     0542  3D87               	addwfc	7,f
  9219     0543  0801               	movf	1,w
  9220     0544  00F0               	movwf	SPI2_WriteByte@byte
  9221     0545  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9222     0548                     l5711:
  9223                           
  9224                           ;CC8531_Control_spi.c: 145:         DELAY_microseconds(1);
  9225     0548  3001               	movlw	1
  9226     0549  00F0               	movwf	DELAY_microseconds@microseconds
  9227     054A  3000               	movlw	0
  9228     054B  00F1               	movwf	DELAY_microseconds@microseconds+1
  9229     054C  3196  2683  3183   	fcall	_DELAY_microseconds
  9230     054F                     l5713:
  9231                           
  9232                           ;CC8531_Control_spi.c: 146:     }
  9233     054F  3001               	movlw	1
  9234     0550  0020               	movlb	0	; select bank0
  9235     0551  00BA               	movwf	??_CC8531_Init_Data_Send
  9236     0552  083A               	movf	??_CC8531_Init_Data_Send,w
  9237     0553  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9238     0554                     l5715:
  9239     0554  30A2               	movlw	162
  9240     0555  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9241     0556  1C03               	skipc
  9242     0557  2D59               	goto	u2281
  9243     0558  2D5A               	goto	u2280
  9244     0559                     u2281:
  9245     0559  2D3D               	goto	l5709
  9246     055A                     u2280:
  9247     055A                     l1294:	
  9248                           ;CC8531_Control_spi.c: 148:     do { LATBbits.LATB0 = 1; } while(0);
  9249                           
  9250     055A  1417               	bsf	23,0	;volatile
  9251     055B                     l5717:
  9252                           
  9253                           ;CC8531_Control_spi.c: 149:     DELAY_microseconds(500);
  9254     055B  30F4               	movlw	244
  9255     055C  00F0               	movwf	DELAY_microseconds@microseconds
  9256     055D  3001               	movlw	1
  9257     055E  00F1               	movwf	DELAY_microseconds@microseconds+1
  9258     055F  3196  2683  3183   	fcall	_DELAY_microseconds
  9259     0562                     l5719:
  9260     0562  0020               	movlb	0	; select bank0
  9261     0563  1017               	bcf	23,0	;volatile
  9262     0564                     l5721:
  9263                           
  9264                           ;CC8531_Control_spi.c: 151:     for(cmd_count = 162 ; cmd_count < 165; cmd_count++){
  9265     0564  30A2               	movlw	162
  9266     0565  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9267     0566                     l5727:
  9268                           
  9269                           ;CC8531_Control_spi.c: 152:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9270     0566  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9271     0567  3E12               	addlw	18
  9272     0568  0086               	movwf	6
  9273     0569  0187               	clrf	7
  9274     056A  3023               	movlw	35
  9275     056B  3D87               	addwfc	7,f
  9276     056C  0801               	movf	1,w
  9277     056D  00F0               	movwf	SPI2_WriteByte@byte
  9278     056E  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9279     0571                     l5729:
  9280                           
  9281                           ;CC8531_Control_spi.c: 153:         DELAY_microseconds(1);
  9282     0571  3001               	movlw	1
  9283     0572  00F0               	movwf	DELAY_microseconds@microseconds
  9284     0573  3000               	movlw	0
  9285     0574  00F1               	movwf	DELAY_microseconds@microseconds+1
  9286     0575  3196  2683  3183   	fcall	_DELAY_microseconds
  9287     0578                     l5731:
  9288                           
  9289                           ;CC8531_Control_spi.c: 154:     }
  9290     0578  3001               	movlw	1
  9291     0579  0020               	movlb	0	; select bank0
  9292     057A  00BA               	movwf	??_CC8531_Init_Data_Send
  9293     057B  083A               	movf	??_CC8531_Init_Data_Send,w
  9294     057C  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9295     057D                     l5733:
  9296     057D  30A5               	movlw	165
  9297     057E  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9298     057F  1C03               	skipc
  9299     0580  2D82               	goto	u2291
  9300     0581  2D83               	goto	u2290
  9301     0582                     u2291:
  9302     0582  2D66               	goto	l5727
  9303     0583                     u2290:
  9304     0583                     l1300:	
  9305                           ;CC8531_Control_spi.c: 156:     do { LATBbits.LATB0 = 1; } while(0);
  9306                           
  9307     0583  1417               	bsf	23,0	;volatile
  9308     0584                     l5735:
  9309                           
  9310                           ;CC8531_Control_spi.c: 157:     DELAY_microseconds(500);
  9311     0584  30F4               	movlw	244
  9312     0585  00F0               	movwf	DELAY_microseconds@microseconds
  9313     0586  3001               	movlw	1
  9314     0587  00F1               	movwf	DELAY_microseconds@microseconds+1
  9315     0588  3196  2683  3183   	fcall	_DELAY_microseconds
  9316     058B                     l5737:
  9317     058B  0020               	movlb	0	; select bank0
  9318     058C  1017               	bcf	23,0	;volatile
  9319     058D                     l5739:
  9320                           
  9321                           ;CC8531_Control_spi.c: 159:     for(cmd_count = 165 ; cmd_count < 169; cmd_count++){
  9322     058D  30A5               	movlw	165
  9323     058E  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9324     058F                     l5745:
  9325                           
  9326                           ;CC8531_Control_spi.c: 160:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9327     058F  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9328     0590  3E12               	addlw	18
  9329     0591  0086               	movwf	6
  9330     0592  0187               	clrf	7
  9331     0593  3023               	movlw	35
  9332     0594  3D87               	addwfc	7,f
  9333     0595  0801               	movf	1,w
  9334     0596  00F0               	movwf	SPI2_WriteByte@byte
  9335     0597  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9336     059A                     l5747:
  9337                           
  9338                           ;CC8531_Control_spi.c: 161:         DELAY_microseconds(1);
  9339     059A  3001               	movlw	1
  9340     059B  00F0               	movwf	DELAY_microseconds@microseconds
  9341     059C  3000               	movlw	0
  9342     059D  00F1               	movwf	DELAY_microseconds@microseconds+1
  9343     059E  3196  2683  3183   	fcall	_DELAY_microseconds
  9344     05A1                     l5749:
  9345                           
  9346                           ;CC8531_Control_spi.c: 162:     }
  9347     05A1  3001               	movlw	1
  9348     05A2  0020               	movlb	0	; select bank0
  9349     05A3  00BA               	movwf	??_CC8531_Init_Data_Send
  9350     05A4  083A               	movf	??_CC8531_Init_Data_Send,w
  9351     05A5  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9352     05A6                     l5751:
  9353     05A6  30A9               	movlw	169
  9354     05A7  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9355     05A8  1C03               	skipc
  9356     05A9  2DAB               	goto	u2301
  9357     05AA  2DAC               	goto	u2300
  9358     05AB                     u2301:
  9359     05AB  2D8F               	goto	l5745
  9360     05AC                     u2300:
  9361     05AC                     l1306:	
  9362                           ;CC8531_Control_spi.c: 163:     do { LATBbits.LATB0 = 1; } while(0);
  9363                           
  9364     05AC  1417               	bsf	23,0	;volatile
  9365     05AD                     l5753:
  9366                           
  9367                           ;CC8531_Control_spi.c: 164:     DELAY_microseconds(500);
  9368     05AD  30F4               	movlw	244
  9369     05AE  00F0               	movwf	DELAY_microseconds@microseconds
  9370     05AF  3001               	movlw	1
  9371     05B0  00F1               	movwf	DELAY_microseconds@microseconds+1
  9372     05B1  3196  2683  3183   	fcall	_DELAY_microseconds
  9373     05B4                     l5755:
  9374     05B4  0020               	movlb	0	; select bank0
  9375     05B5  1017               	bcf	23,0	;volatile
  9376     05B6                     l5757:
  9377                           
  9378                           ;CC8531_Control_spi.c: 178:     for(cmd_count = 169 ; cmd_count < 172; cmd_count++){
  9379     05B6  30A9               	movlw	169
  9380     05B7  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9381     05B8                     l5763:
  9382                           
  9383                           ;CC8531_Control_spi.c: 179:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9384     05B8  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9385     05B9  3E12               	addlw	18
  9386     05BA  0086               	movwf	6
  9387     05BB  0187               	clrf	7
  9388     05BC  3023               	movlw	35
  9389     05BD  3D87               	addwfc	7,f
  9390     05BE  0801               	movf	1,w
  9391     05BF  00F0               	movwf	SPI2_WriteByte@byte
  9392     05C0  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9393     05C3                     l5765:
  9394                           
  9395                           ;CC8531_Control_spi.c: 180:         DELAY_microseconds(1);
  9396     05C3  3001               	movlw	1
  9397     05C4  00F0               	movwf	DELAY_microseconds@microseconds
  9398     05C5  3000               	movlw	0
  9399     05C6  00F1               	movwf	DELAY_microseconds@microseconds+1
  9400     05C7  3196  2683  3183   	fcall	_DELAY_microseconds
  9401     05CA                     l5767:
  9402                           
  9403                           ;CC8531_Control_spi.c: 181:     }
  9404     05CA  3001               	movlw	1
  9405     05CB  0020               	movlb	0	; select bank0
  9406     05CC  00BA               	movwf	??_CC8531_Init_Data_Send
  9407     05CD  083A               	movf	??_CC8531_Init_Data_Send,w
  9408     05CE  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9409     05CF                     l5769:
  9410     05CF  30AC               	movlw	172
  9411     05D0  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9412     05D1  1C03               	skipc
  9413     05D2  2DD4               	goto	u2311
  9414     05D3  2DD5               	goto	u2310
  9415     05D4                     u2311:
  9416     05D4  2DB8               	goto	l5763
  9417     05D5                     u2310:
  9418     05D5                     l1312:	
  9419                           ;CC8531_Control_spi.c: 182:     do { LATBbits.LATB0 = 1; } while(0);
  9420                           
  9421     05D5  1417               	bsf	23,0	;volatile
  9422     05D6                     l5771:
  9423                           
  9424                           ;CC8531_Control_spi.c: 183:     DELAY_microseconds(500);
  9425     05D6  30F4               	movlw	244
  9426     05D7  00F0               	movwf	DELAY_microseconds@microseconds
  9427     05D8  3001               	movlw	1
  9428     05D9  00F1               	movwf	DELAY_microseconds@microseconds+1
  9429     05DA  3196  2683  3183   	fcall	_DELAY_microseconds
  9430     05DD                     l5773:
  9431     05DD  0020               	movlb	0	; select bank0
  9432     05DE  1017               	bcf	23,0	;volatile
  9433     05DF                     l5775:
  9434                           
  9435                           ;CC8531_Control_spi.c: 185:     for(cmd_count = 172 ; cmd_count < 175; cmd_count++){
  9436     05DF  30AC               	movlw	172
  9437     05E0  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9438     05E1                     l5781:
  9439                           
  9440                           ;CC8531_Control_spi.c: 186:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9441     05E1  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9442     05E2  3E12               	addlw	18
  9443     05E3  0086               	movwf	6
  9444     05E4  0187               	clrf	7
  9445     05E5  3023               	movlw	35
  9446     05E6  3D87               	addwfc	7,f
  9447     05E7  0801               	movf	1,w
  9448     05E8  00F0               	movwf	SPI2_WriteByte@byte
  9449     05E9  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9450     05EC                     l5783:
  9451                           
  9452                           ;CC8531_Control_spi.c: 187:         DELAY_microseconds(1);
  9453     05EC  3001               	movlw	1
  9454     05ED  00F0               	movwf	DELAY_microseconds@microseconds
  9455     05EE  3000               	movlw	0
  9456     05EF  00F1               	movwf	DELAY_microseconds@microseconds+1
  9457     05F0  3196  2683  3183   	fcall	_DELAY_microseconds
  9458     05F3                     l5785:
  9459                           
  9460                           ;CC8531_Control_spi.c: 188:     }
  9461     05F3  3001               	movlw	1
  9462     05F4  0020               	movlb	0	; select bank0
  9463     05F5  00BA               	movwf	??_CC8531_Init_Data_Send
  9464     05F6  083A               	movf	??_CC8531_Init_Data_Send,w
  9465     05F7  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9466     05F8                     l5787:
  9467     05F8  30AF               	movlw	175
  9468     05F9  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9469     05FA  1C03               	skipc
  9470     05FB  2DFD               	goto	u2321
  9471     05FC  2DFE               	goto	u2320
  9472     05FD                     u2321:
  9473     05FD  2DE1               	goto	l5781
  9474     05FE                     u2320:
  9475     05FE                     l1318:	
  9476                           ;CC8531_Control_spi.c: 190:     do { LATBbits.LATB0 = 1; } while(0);
  9477                           
  9478     05FE  1417               	bsf	23,0	;volatile
  9479     05FF                     l5789:
  9480                           
  9481                           ;CC8531_Control_spi.c: 191:     DELAY_microseconds(500);
  9482     05FF  30F4               	movlw	244
  9483     0600  00F0               	movwf	DELAY_microseconds@microseconds
  9484     0601  3001               	movlw	1
  9485     0602  00F1               	movwf	DELAY_microseconds@microseconds+1
  9486     0603  3196  2683  3183   	fcall	_DELAY_microseconds
  9487     0606                     l5791:
  9488     0606  0020               	movlb	0	; select bank0
  9489     0607  1017               	bcf	23,0	;volatile
  9490     0608                     l5793:
  9491                           
  9492                           ;CC8531_Control_spi.c: 193:     for(cmd_count = 175 ; cmd_count < 179; cmd_count++){
  9493     0608  30AF               	movlw	175
  9494     0609  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9495     060A                     l5799:
  9496                           
  9497                           ;CC8531_Control_spi.c: 194:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9498     060A  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9499     060B  3E12               	addlw	18
  9500     060C  0086               	movwf	6
  9501     060D  0187               	clrf	7
  9502     060E  3023               	movlw	35
  9503     060F  3D87               	addwfc	7,f
  9504     0610  0801               	movf	1,w
  9505     0611  00F0               	movwf	SPI2_WriteByte@byte
  9506     0612  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9507     0615                     l5801:
  9508                           
  9509                           ;CC8531_Control_spi.c: 195:         DELAY_microseconds(1);
  9510     0615  3001               	movlw	1
  9511     0616  00F0               	movwf	DELAY_microseconds@microseconds
  9512     0617  3000               	movlw	0
  9513     0618  00F1               	movwf	DELAY_microseconds@microseconds+1
  9514     0619  3196  2683  3183   	fcall	_DELAY_microseconds
  9515     061C                     l5803:
  9516                           
  9517                           ;CC8531_Control_spi.c: 196:     }
  9518     061C  3001               	movlw	1
  9519     061D  0020               	movlb	0	; select bank0
  9520     061E  00BA               	movwf	??_CC8531_Init_Data_Send
  9521     061F  083A               	movf	??_CC8531_Init_Data_Send,w
  9522     0620  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9523     0621                     l5805:
  9524     0621  30B3               	movlw	179
  9525     0622  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9526     0623  1C03               	skipc
  9527     0624  2E26               	goto	u2331
  9528     0625  2E27               	goto	u2330
  9529     0626                     u2331:
  9530     0626  2E0A               	goto	l5799
  9531     0627                     u2330:
  9532     0627                     l1324:	
  9533                           ;CC8531_Control_spi.c: 197:     do { LATBbits.LATB0 = 1; } while(0);
  9534                           
  9535     0627  1417               	bsf	23,0	;volatile
  9536     0628                     l5807:
  9537                           
  9538                           ;CC8531_Control_spi.c: 208:     DELAY_microseconds(500);
  9539     0628  30F4               	movlw	244
  9540     0629  00F0               	movwf	DELAY_microseconds@microseconds
  9541     062A  3001               	movlw	1
  9542     062B  00F1               	movwf	DELAY_microseconds@microseconds+1
  9543     062C  3196  2683  3183   	fcall	_DELAY_microseconds
  9544     062F                     l5809:
  9545     062F  0020               	movlb	0	; select bank0
  9546     0630  1017               	bcf	23,0	;volatile
  9547     0631                     l5811:
  9548                           
  9549                           ;CC8531_Control_spi.c: 211:     for(cmd_count = 179 ; cmd_count < 181; cmd_count++){
  9550     0631  30B3               	movlw	179
  9551     0632  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9552     0633                     l5817:
  9553                           
  9554                           ;CC8531_Control_spi.c: 212:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9555     0633  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9556     0634  3E12               	addlw	18
  9557     0635  0086               	movwf	6
  9558     0636  0187               	clrf	7
  9559     0637  3023               	movlw	35
  9560     0638  3D87               	addwfc	7,f
  9561     0639  0801               	movf	1,w
  9562     063A  00F0               	movwf	SPI2_WriteByte@byte
  9563     063B  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9564     063E                     l5819:
  9565                           
  9566                           ;CC8531_Control_spi.c: 213:         DELAY_microseconds(1);
  9567     063E  3001               	movlw	1
  9568     063F  00F0               	movwf	DELAY_microseconds@microseconds
  9569     0640  3000               	movlw	0
  9570     0641  00F1               	movwf	DELAY_microseconds@microseconds+1
  9571     0642  3196  2683  3183   	fcall	_DELAY_microseconds
  9572     0645                     l5821:
  9573                           
  9574                           ;CC8531_Control_spi.c: 214:     }
  9575     0645  3001               	movlw	1
  9576     0646  0020               	movlb	0	; select bank0
  9577     0647  00BA               	movwf	??_CC8531_Init_Data_Send
  9578     0648  083A               	movf	??_CC8531_Init_Data_Send,w
  9579     0649  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9580     064A                     l5823:
  9581     064A  30B5               	movlw	181
  9582     064B  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9583     064C  1C03               	skipc
  9584     064D  2E4F               	goto	u2341
  9585     064E  2E50               	goto	u2340
  9586     064F                     u2341:
  9587     064F  2E33               	goto	l5817
  9588     0650                     u2340:
  9589     0650                     l1330:	
  9590                           ;CC8531_Control_spi.c: 215:     do { LATBbits.LATB0 = 1; } while(0);
  9591                           
  9592     0650  1417               	bsf	23,0	;volatile
  9593     0651                     l5825:
  9594                           
  9595                           ;CC8531_Control_spi.c: 216:     DELAY_microseconds(500);
  9596     0651  30F4               	movlw	244
  9597     0652  00F0               	movwf	DELAY_microseconds@microseconds
  9598     0653  3001               	movlw	1
  9599     0654  00F1               	movwf	DELAY_microseconds@microseconds+1
  9600     0655  3196  2683  3183   	fcall	_DELAY_microseconds
  9601     0658                     l5827:
  9602     0658  0020               	movlb	0	; select bank0
  9603     0659  1017               	bcf	23,0	;volatile
  9604     065A                     l5829:
  9605                           
  9606                           ;CC8531_Control_spi.c: 219:     for(cmd_count = 181 ; cmd_count < 199; cmd_count++){
  9607     065A  30B5               	movlw	181
  9608     065B  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9609     065C                     l5835:
  9610                           
  9611                           ;CC8531_Control_spi.c: 220:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9612     065C  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9613     065D  3E12               	addlw	18
  9614     065E  0086               	movwf	6
  9615     065F  0187               	clrf	7
  9616     0660  3023               	movlw	35
  9617     0661  3D87               	addwfc	7,f
  9618     0662  0801               	movf	1,w
  9619     0663  00F0               	movwf	SPI2_WriteByte@byte
  9620     0664  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9621     0667                     l5837:
  9622                           
  9623                           ;CC8531_Control_spi.c: 221:         DELAY_microseconds(1);
  9624     0667  3001               	movlw	1
  9625     0668  00F0               	movwf	DELAY_microseconds@microseconds
  9626     0669  3000               	movlw	0
  9627     066A  00F1               	movwf	DELAY_microseconds@microseconds+1
  9628     066B  3196  2683  3183   	fcall	_DELAY_microseconds
  9629     066E                     l5839:
  9630                           
  9631                           ;CC8531_Control_spi.c: 222:     }
  9632     066E  3001               	movlw	1
  9633     066F  0020               	movlb	0	; select bank0
  9634     0670  00BA               	movwf	??_CC8531_Init_Data_Send
  9635     0671  083A               	movf	??_CC8531_Init_Data_Send,w
  9636     0672  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9637     0673                     l5841:
  9638     0673  30C7               	movlw	199
  9639     0674  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9640     0675  1C03               	skipc
  9641     0676  2E78               	goto	u2351
  9642     0677  2E79               	goto	u2350
  9643     0678                     u2351:
  9644     0678  2E5C               	goto	l5835
  9645     0679                     u2350:
  9646     0679                     l1336:	
  9647                           ;CC8531_Control_spi.c: 223:     do { LATBbits.LATB0 = 1; } while(0);
  9648                           
  9649     0679  1417               	bsf	23,0	;volatile
  9650     067A                     l5843:
  9651                           
  9652                           ;CC8531_Control_spi.c: 224:      DELAY_microseconds(500);
  9653     067A  30F4               	movlw	244
  9654     067B  00F0               	movwf	DELAY_microseconds@microseconds
  9655     067C  3001               	movlw	1
  9656     067D  00F1               	movwf	DELAY_microseconds@microseconds+1
  9657     067E  3196  2683  3183   	fcall	_DELAY_microseconds
  9658     0681                     l5845:
  9659     0681  0020               	movlb	0	; select bank0
  9660     0682  1017               	bcf	23,0	;volatile
  9661     0683                     l5847:
  9662                           
  9663                           ;CC8531_Control_spi.c: 227:     for(cmd_count = 199 ; cmd_count < 201; cmd_count++){
  9664     0683  30C7               	movlw	199
  9665     0684  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9666     0685                     l5853:
  9667                           
  9668                           ;CC8531_Control_spi.c: 228:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9669     0685  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9670     0686  3E12               	addlw	18
  9671     0687  0086               	movwf	6
  9672     0688  0187               	clrf	7
  9673     0689  3023               	movlw	35
  9674     068A  3D87               	addwfc	7,f
  9675     068B  0801               	movf	1,w
  9676     068C  00F0               	movwf	SPI2_WriteByte@byte
  9677     068D  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9678     0690                     l5855:
  9679                           
  9680                           ;CC8531_Control_spi.c: 229:         DELAY_microseconds(1);
  9681     0690  3001               	movlw	1
  9682     0691  00F0               	movwf	DELAY_microseconds@microseconds
  9683     0692  3000               	movlw	0
  9684     0693  00F1               	movwf	DELAY_microseconds@microseconds+1
  9685     0694  3196  2683  3183   	fcall	_DELAY_microseconds
  9686     0697                     l5857:
  9687                           
  9688                           ;CC8531_Control_spi.c: 230:     }
  9689     0697  3001               	movlw	1
  9690     0698  0020               	movlb	0	; select bank0
  9691     0699  00BA               	movwf	??_CC8531_Init_Data_Send
  9692     069A  083A               	movf	??_CC8531_Init_Data_Send,w
  9693     069B  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9694     069C                     l5859:
  9695     069C  30C9               	movlw	201
  9696     069D  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9697     069E  1C03               	skipc
  9698     069F  2EA1               	goto	u2361
  9699     06A0  2EA2               	goto	u2360
  9700     06A1                     u2361:
  9701     06A1  2E85               	goto	l5853
  9702     06A2                     u2360:
  9703     06A2                     l1342:	
  9704                           ;CC8531_Control_spi.c: 231:     do { LATBbits.LATB0 = 1; } while(0);
  9705                           
  9706     06A2  1417               	bsf	23,0	;volatile
  9707     06A3                     l5861:
  9708                           
  9709                           ;CC8531_Control_spi.c: 233:         DELAY_microseconds(500);
  9710     06A3  30F4               	movlw	244
  9711     06A4  00F0               	movwf	DELAY_microseconds@microseconds
  9712     06A5  3001               	movlw	1
  9713     06A6  00F1               	movwf	DELAY_microseconds@microseconds+1
  9714     06A7  3196  2683  3183   	fcall	_DELAY_microseconds
  9715     06AA                     l5863:
  9716     06AA  0020               	movlb	0	; select bank0
  9717     06AB  1017               	bcf	23,0	;volatile
  9718     06AC                     l5865:
  9719                           
  9720                           ;CC8531_Control_spi.c: 236:     for(cmd_count = 201 ; cmd_count < 204; cmd_count++){
  9721     06AC  30C9               	movlw	201
  9722     06AD  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9723     06AE                     l5871:
  9724                           
  9725                           ;CC8531_Control_spi.c: 237:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9726     06AE  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9727     06AF  3E12               	addlw	18
  9728     06B0  0086               	movwf	6
  9729     06B1  0187               	clrf	7
  9730     06B2  3023               	movlw	35
  9731     06B3  3D87               	addwfc	7,f
  9732     06B4  0801               	movf	1,w
  9733     06B5  00F0               	movwf	SPI2_WriteByte@byte
  9734     06B6  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9735     06B9                     l5873:
  9736                           
  9737                           ;CC8531_Control_spi.c: 238:         DELAY_microseconds(1);
  9738     06B9  3001               	movlw	1
  9739     06BA  00F0               	movwf	DELAY_microseconds@microseconds
  9740     06BB  3000               	movlw	0
  9741     06BC  00F1               	movwf	DELAY_microseconds@microseconds+1
  9742     06BD  3196  2683  3183   	fcall	_DELAY_microseconds
  9743     06C0                     l5875:
  9744                           
  9745                           ;CC8531_Control_spi.c: 239:     }
  9746     06C0  3001               	movlw	1
  9747     06C1  0020               	movlb	0	; select bank0
  9748     06C2  00BA               	movwf	??_CC8531_Init_Data_Send
  9749     06C3  083A               	movf	??_CC8531_Init_Data_Send,w
  9750     06C4  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9751     06C5                     l5877:
  9752     06C5  30CC               	movlw	204
  9753     06C6  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9754     06C7  1C03               	skipc
  9755     06C8  2ECA               	goto	u2371
  9756     06C9  2ECB               	goto	u2370
  9757     06CA                     u2371:
  9758     06CA  2EAE               	goto	l5871
  9759     06CB                     u2370:
  9760     06CB                     l1348:	
  9761                           ;CC8531_Control_spi.c: 240:     do { LATBbits.LATB0 = 1; } while(0);
  9762                           
  9763     06CB  1417               	bsf	23,0	;volatile
  9764     06CC                     l5879:
  9765                           
  9766                           ;CC8531_Control_spi.c: 241:         DELAY_microseconds(500);
  9767     06CC  30F4               	movlw	244
  9768     06CD  00F0               	movwf	DELAY_microseconds@microseconds
  9769     06CE  3001               	movlw	1
  9770     06CF  00F1               	movwf	DELAY_microseconds@microseconds+1
  9771     06D0  3196  2683  3183   	fcall	_DELAY_microseconds
  9772     06D3                     l5881:
  9773     06D3  0020               	movlb	0	; select bank0
  9774     06D4  1017               	bcf	23,0	;volatile
  9775     06D5                     l5883:
  9776                           
  9777                           ;CC8531_Control_spi.c: 244:     for(cmd_count = 204 ; cmd_count < 207; cmd_count++){
  9778     06D5  30CC               	movlw	204
  9779     06D6  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9780     06D7                     l5889:
  9781                           
  9782                           ;CC8531_Control_spi.c: 245:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9783     06D7  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9784     06D8  3E12               	addlw	18
  9785     06D9  0086               	movwf	6
  9786     06DA  0187               	clrf	7
  9787     06DB  3023               	movlw	35
  9788     06DC  3D87               	addwfc	7,f
  9789     06DD  0801               	movf	1,w
  9790     06DE  00F0               	movwf	SPI2_WriteByte@byte
  9791     06DF  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9792     06E2                     l5891:
  9793                           
  9794                           ;CC8531_Control_spi.c: 246:         DELAY_microseconds(1);
  9795     06E2  3001               	movlw	1
  9796     06E3  00F0               	movwf	DELAY_microseconds@microseconds
  9797     06E4  3000               	movlw	0
  9798     06E5  00F1               	movwf	DELAY_microseconds@microseconds+1
  9799     06E6  3196  2683  3183   	fcall	_DELAY_microseconds
  9800     06E9                     l5893:
  9801                           
  9802                           ;CC8531_Control_spi.c: 247:     }
  9803     06E9  3001               	movlw	1
  9804     06EA  0020               	movlb	0	; select bank0
  9805     06EB  00BA               	movwf	??_CC8531_Init_Data_Send
  9806     06EC  083A               	movf	??_CC8531_Init_Data_Send,w
  9807     06ED  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9808     06EE                     l5895:
  9809     06EE  30CF               	movlw	207
  9810     06EF  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9811     06F0  1C03               	skipc
  9812     06F1  2EF3               	goto	u2381
  9813     06F2  2EF4               	goto	u2380
  9814     06F3                     u2381:
  9815     06F3  2ED7               	goto	l5889
  9816     06F4                     u2380:
  9817     06F4                     l1354:	
  9818                           ;CC8531_Control_spi.c: 248:     do { LATBbits.LATB0 = 1; } while(0);
  9819                           
  9820     06F4  1417               	bsf	23,0	;volatile
  9821     06F5                     l5897:
  9822                           
  9823                           ;CC8531_Control_spi.c: 249:         DELAY_microseconds(500);
  9824     06F5  30F4               	movlw	244
  9825     06F6  00F0               	movwf	DELAY_microseconds@microseconds
  9826     06F7  3001               	movlw	1
  9827     06F8  00F1               	movwf	DELAY_microseconds@microseconds+1
  9828     06F9  3196  2683  3183   	fcall	_DELAY_microseconds
  9829     06FC                     l5899:
  9830     06FC  0020               	movlb	0	; select bank0
  9831     06FD  1017               	bcf	23,0	;volatile
  9832     06FE                     l5901:
  9833                           
  9834                           ;CC8531_Control_spi.c: 252:     for(cmd_count = 207 ; cmd_count < 211; cmd_count++){
  9835     06FE  30CF               	movlw	207
  9836     06FF  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9837     0700                     l5907:
  9838                           
  9839                           ;CC8531_Control_spi.c: 253:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9840     0700  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9841     0701  3E12               	addlw	18
  9842     0702  0086               	movwf	6
  9843     0703  0187               	clrf	7
  9844     0704  3023               	movlw	35
  9845     0705  3D87               	addwfc	7,f
  9846     0706  0801               	movf	1,w
  9847     0707  00F0               	movwf	SPI2_WriteByte@byte
  9848     0708  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9849     070B                     l5909:
  9850                           
  9851                           ;CC8531_Control_spi.c: 254:         DELAY_microseconds(1);
  9852     070B  3001               	movlw	1
  9853     070C  00F0               	movwf	DELAY_microseconds@microseconds
  9854     070D  3000               	movlw	0
  9855     070E  00F1               	movwf	DELAY_microseconds@microseconds+1
  9856     070F  3196  2683  3183   	fcall	_DELAY_microseconds
  9857     0712                     l5911:
  9858                           
  9859                           ;CC8531_Control_spi.c: 255:     }
  9860     0712  3001               	movlw	1
  9861     0713  0020               	movlb	0	; select bank0
  9862     0714  00BA               	movwf	??_CC8531_Init_Data_Send
  9863     0715  083A               	movf	??_CC8531_Init_Data_Send,w
  9864     0716  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9865     0717                     l5913:
  9866     0717  30D3               	movlw	211
  9867     0718  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9868     0719  1C03               	skipc
  9869     071A  2F1C               	goto	u2391
  9870     071B  2F1D               	goto	u2390
  9871     071C                     u2391:
  9872     071C  2F00               	goto	l5907
  9873     071D                     u2390:
  9874     071D                     l1360:	
  9875                           ;CC8531_Control_spi.c: 256:     do { LATBbits.LATB0 = 1; } while(0);
  9876                           
  9877     071D  1417               	bsf	23,0	;volatile
  9878     071E                     l5915:
  9879                           
  9880                           ;CC8531_Control_spi.c: 257:         DELAY_microseconds(500);
  9881     071E  30F4               	movlw	244
  9882     071F  00F0               	movwf	DELAY_microseconds@microseconds
  9883     0720  3001               	movlw	1
  9884     0721  00F1               	movwf	DELAY_microseconds@microseconds+1
  9885     0722  3196  2683  3183   	fcall	_DELAY_microseconds
  9886     0725                     l5917:
  9887     0725  0020               	movlb	0	; select bank0
  9888     0726  1017               	bcf	23,0	;volatile
  9889     0727                     l5919:
  9890                           
  9891                           ;CC8531_Control_spi.c: 260:     for(cmd_count = 211 ; cmd_count < 214; cmd_count++){
  9892     0727  30D3               	movlw	211
  9893     0728  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9894     0729                     l5925:
  9895                           
  9896                           ;CC8531_Control_spi.c: 261:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9897     0729  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9898     072A  3E12               	addlw	18
  9899     072B  0086               	movwf	6
  9900     072C  0187               	clrf	7
  9901     072D  3023               	movlw	35
  9902     072E  3D87               	addwfc	7,f
  9903     072F  0801               	movf	1,w
  9904     0730  00F0               	movwf	SPI2_WriteByte@byte
  9905     0731  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9906     0734                     l5927:
  9907                           
  9908                           ;CC8531_Control_spi.c: 262:         DELAY_microseconds(1);
  9909     0734  3001               	movlw	1
  9910     0735  00F0               	movwf	DELAY_microseconds@microseconds
  9911     0736  3000               	movlw	0
  9912     0737  00F1               	movwf	DELAY_microseconds@microseconds+1
  9913     0738  3196  2683  3183   	fcall	_DELAY_microseconds
  9914     073B                     l5929:
  9915                           
  9916                           ;CC8531_Control_spi.c: 263:     }
  9917     073B  3001               	movlw	1
  9918     073C  0020               	movlb	0	; select bank0
  9919     073D  00BA               	movwf	??_CC8531_Init_Data_Send
  9920     073E  083A               	movf	??_CC8531_Init_Data_Send,w
  9921     073F  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9922     0740                     l5931:
  9923     0740  30D6               	movlw	214
  9924     0741  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9925     0742  1C03               	skipc
  9926     0743  2F45               	goto	u2401
  9927     0744  2F46               	goto	u2400
  9928     0745                     u2401:
  9929     0745  2F29               	goto	l5925
  9930     0746                     u2400:
  9931     0746                     l1366:	
  9932                           ;CC8531_Control_spi.c: 264:     do { LATBbits.LATB0 = 1; } while(0);
  9933                           
  9934     0746  1417               	bsf	23,0	;volatile
  9935     0747                     l5933:
  9936                           
  9937                           ;CC8531_Control_spi.c: 265:         DELAY_microseconds(500);
  9938     0747  30F4               	movlw	244
  9939     0748  00F0               	movwf	DELAY_microseconds@microseconds
  9940     0749  3001               	movlw	1
  9941     074A  00F1               	movwf	DELAY_microseconds@microseconds+1
  9942     074B  3196  2683  3183   	fcall	_DELAY_microseconds
  9943     074E                     l5935:
  9944     074E  0020               	movlb	0	; select bank0
  9945     074F  1017               	bcf	23,0	;volatile
  9946     0750                     l5937:
  9947                           
  9948                           ;CC8531_Control_spi.c: 268:     for(cmd_count = 214 ; cmd_count < 217; cmd_count++){
  9949     0750  30D6               	movlw	214
  9950     0751  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
  9951     0752                     l5943:
  9952                           
  9953                           ;CC8531_Control_spi.c: 269:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
  9954     0752  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
  9955     0753  3E12               	addlw	18
  9956     0754  0086               	movwf	6
  9957     0755  0187               	clrf	7
  9958     0756  3023               	movlw	35
  9959     0757  3D87               	addwfc	7,f
  9960     0758  0801               	movf	1,w
  9961     0759  00F0               	movwf	SPI2_WriteByte@byte
  9962     075A  3193  23C0  3183   	fcall	_SPI2_WriteByte
  9963     075D                     l5945:
  9964                           
  9965                           ;CC8531_Control_spi.c: 270:         DELAY_microseconds(1);
  9966     075D  3001               	movlw	1
  9967     075E  00F0               	movwf	DELAY_microseconds@microseconds
  9968     075F  3000               	movlw	0
  9969     0760  00F1               	movwf	DELAY_microseconds@microseconds+1
  9970     0761  3196  2683  3183   	fcall	_DELAY_microseconds
  9971     0764                     l5947:
  9972                           
  9973                           ;CC8531_Control_spi.c: 271:     }
  9974     0764  3001               	movlw	1
  9975     0765  0020               	movlb	0	; select bank0
  9976     0766  00BA               	movwf	??_CC8531_Init_Data_Send
  9977     0767  083A               	movf	??_CC8531_Init_Data_Send,w
  9978     0768  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
  9979     0769                     l5949:
  9980     0769  30D9               	movlw	217
  9981     076A  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
  9982     076B  1C03               	skipc
  9983     076C  2F6E               	goto	u2411
  9984     076D  2F6F               	goto	u2410
  9985     076E                     u2411:
  9986     076E  2F52               	goto	l5943
  9987     076F                     u2410:
  9988     076F                     l1372:	
  9989                           ;CC8531_Control_spi.c: 272:     do { LATBbits.LATB0 = 1; } while(0);
  9990                           
  9991     076F  1417               	bsf	23,0	;volatile
  9992     0770                     l5951:
  9993                           
  9994                           ;CC8531_Control_spi.c: 273:         DELAY_microseconds(500);
  9995     0770  30F4               	movlw	244
  9996     0771  00F0               	movwf	DELAY_microseconds@microseconds
  9997     0772  3001               	movlw	1
  9998     0773  00F1               	movwf	DELAY_microseconds@microseconds+1
  9999     0774  3196  2683  3183   	fcall	_DELAY_microseconds
 10000     0777                     l5953:
 10001     0777  0020               	movlb	0	; select bank0
 10002     0778  1017               	bcf	23,0	;volatile
 10003     0779                     l5955:
 10004                           
 10005                           ;CC8531_Control_spi.c: 276:     for(cmd_count = 217 ; cmd_count < 222; cmd_count++){
 10006     0779  30D9               	movlw	217
 10007     077A  00C7               	movwf	CC8531_Init_Data_Send@cmd_count
 10008     077B                     l5961:
 10009                           
 10010                           ;CC8531_Control_spi.c: 277:         SPI2_WriteByte(cc8531_init_data[cmd_count]);
 10011     077B  0847               	movf	CC8531_Init_Data_Send@cmd_count,w
 10012     077C  3E12               	addlw	18
 10013     077D  0086               	movwf	6
 10014     077E  0187               	clrf	7
 10015     077F  3023               	movlw	35
 10016     0780  3D87               	addwfc	7,f
 10017     0781  0801               	movf	1,w
 10018     0782  00F0               	movwf	SPI2_WriteByte@byte
 10019     0783  3193  23C0  3183   	fcall	_SPI2_WriteByte
 10020     0786                     l5963:
 10021                           
 10022                           ;CC8531_Control_spi.c: 278:         DELAY_microseconds(1);
 10023     0786  3001               	movlw	1
 10024     0787  00F0               	movwf	DELAY_microseconds@microseconds
 10025     0788  3000               	movlw	0
 10026     0789  00F1               	movwf	DELAY_microseconds@microseconds+1
 10027     078A  3196  2683  3183   	fcall	_DELAY_microseconds
 10028     078D                     l5965:
 10029                           
 10030                           ;CC8531_Control_spi.c: 279:     }
 10031     078D  3001               	movlw	1
 10032     078E  0020               	movlb	0	; select bank0
 10033     078F  00BA               	movwf	??_CC8531_Init_Data_Send
 10034     0790  083A               	movf	??_CC8531_Init_Data_Send,w
 10035     0791  07C7               	addwf	CC8531_Init_Data_Send@cmd_count,f
 10036     0792                     l5967:
 10037     0792  30DE               	movlw	222
 10038     0793  0247               	subwf	CC8531_Init_Data_Send@cmd_count,w
 10039     0794  1C03               	skipc
 10040     0795  2F97               	goto	u2421
 10041     0796  2F98               	goto	u2420
 10042     0797                     u2421:
 10043     0797  2F7B               	goto	l5961
 10044     0798                     u2420:
 10045     0798                     l1378:	
 10046                           ;CC8531_Control_spi.c: 280:     do { LATBbits.LATB0 = 1; } while(0);
 10047                           
 10048     0798  1417               	bsf	23,0	;volatile
 10049     0799                     l5969:
 10050                           
 10051                           ;CC8531_Control_spi.c: 298:     SPI2_Close();
 10052     0799  3193  23B5  3183   	fcall	_SPI2_Close
 10053     079C                     l5971:
 10054                           
 10055                           ;CC8531_Control_spi.c: 299:     DELAY_microseconds(100);
 10056     079C  3064               	movlw	100
 10057     079D  00F0               	movwf	DELAY_microseconds@microseconds
 10058     079E  3000               	movlw	0
 10059     079F  00F1               	movwf	DELAY_microseconds@microseconds+1
 10060     07A0  3196  2683  3183   	fcall	_DELAY_microseconds
 10061     07A3                     l1380:
 10062     07A3  0008               	return
 10063     07A4                     __end_of_CC8531_Init_Data_Send:
 10064                           
 10065                           	psect	text10
 10066     13B5                     __ptext10:	
 10067 ;; *************** function _SPI2_Close *****************
 10068 ;; Defined at:
 10069 ;;		line 93 in file "mcc_generated_files/spi2.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;		None
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  1    wreg      void 
 10076 ;; Registers used:
 10077 ;;		None
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;Total ram usage:        0 bytes
 10088 ;; Hardware stack levels used: 1
 10089 ;; This function calls:
 10090 ;;		Nothing
 10091 ;; This function is called by:
 10092 ;;		_CC8531_Init_Data_Send
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096     13B5                     _SPI2_Close:	
 10097                           ;psect for function _SPI2_Close
 10098                           
 10099     13B5                     l5271:	
 10100                           ;incstack = 0
 10101                           ; Regs used in _SPI2_Close: []
 10102                           
 10103                           
 10104                           ;mcc_generated_files/spi2.c: 95:     SSP2CON1bits.SSPEN = 0;
 10105     13B5  0023               	movlb	3	; select bank3
 10106     13B6  129A               	bcf	26,5	;volatile
 10107     13B7                     l865:
 10108     13B7  0008               	return
 10109     13B8                     __end_of_SPI2_Close:
 10110                           
 10111                           	psect	text11
 10112     15F5                     __ptext11:	
 10113 ;; *************** function _power_off *****************
 10114 ;; Defined at:
 10115 ;;		line 390 in file "main.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;		None
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;		None
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1    wreg      void 
 10122 ;; Registers used:
 10123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10133 ;;Total ram usage:        0 bytes
 10134 ;; Hardware stack levels used: 1
 10135 ;; Hardware stack levels required when called: 4
 10136 ;; This function calls:
 10137 ;;		_power_off_sequence
 10138 ;; This function is called by:
 10139 ;;		_main
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143     15F5                     _power_off:	
 10144                           ;psect for function _power_off
 10145                           
 10146     15F5                     l6125:	
 10147                           ;incstack = 0
 10148                           ; Regs used in _power_off: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10149                           
 10150                           
 10151                           ;main.c: 391:     if(PORTAbits.RA7 == 1){
 10152     15F5  0020               	movlb	0	; select bank0
 10153     15F6  1F8C               	btfss	12,7	;volatile
 10154     15F7  2DF9               	goto	u2611
 10155     15F8  2DFA               	goto	u2610
 10156     15F9                     u2611:
 10157     15F9  2E06               	goto	l6131
 10158     15FA                     u2610:
 10159     15FA                     l6127:
 10160                           
 10161                           ;main.c: 392:         if(key_count >100){
 10162     15FA  3000               	movlw	0
 10163     15FB  0262               	subwf	_key_count+1,w
 10164     15FC  3065               	movlw	101
 10165     15FD  1903               	skipnz
 10166     15FE  0261               	subwf	_key_count,w
 10167     15FF  1C03               	skipc
 10168     1600  2E02               	goto	u2621
 10169     1601  2E03               	goto	u2620
 10170     1602                     u2621:
 10171     1602  2E0A               	goto	l6133
 10172     1603                     u2620:
 10173     1603                     l6129:
 10174                           
 10175                           ;main.c: 393:             power_off_sequence();
 10176     1603  318A  2204  3195   	fcall	_power_off_sequence
 10177     1606                     l6131:
 10178                           
 10179                           ;main.c: 394:             key_count = 0;
 10180     1606  0020               	movlb	0	; select bank0
 10181     1607  01E1               	clrf	_key_count
 10182     1608  01E2               	clrf	_key_count+1
 10183                           
 10184                           ;main.c: 395:         }
 10185     1609  2E0E               	goto	l1185
 10186     160A                     l6133:
 10187                           
 10188                           ;main.c: 397:             key_count++;
 10189     160A  3001               	movlw	1
 10190     160B  07E1               	addwf	_key_count,f
 10191     160C  3000               	movlw	0
 10192     160D  3DE2               	addwfc	_key_count+1,f
 10193     160E                     l1185:
 10194     160E  0008               	return
 10195     160F                     __end_of_power_off:
 10196                           
 10197                           	psect	text12
 10198     0B4F                     __ptext12:	
 10199 ;; *************** function _mic_detect *****************
 10200 ;; Defined at:
 10201 ;;		line 188 in file "main.c"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;		None
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;  mic_detect_v    2   31[BANK0 ] unsigned short 
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  1    wreg      void 
 10208 ;; Registers used:
 10209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;Total ram usage:        2 bytes
 10220 ;; Hardware stack levels used: 1
 10221 ;; Hardware stack levels required when called: 10
 10222 ;; This function calls:
 10223 ;;		_ADCC_GetConversionResult
 10224 ;;		_ADCC_IsConversionDone
 10225 ;;		_ADCC_StartConversion
 10226 ;;		_TLV320_Mute
 10227 ;; This function is called by:
 10228 ;;		_main
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232     0B4F                     _mic_detect:	
 10233                           ;psect for function _mic_detect
 10234                           
 10235     0B4F                     l6137:	
 10236                           ;incstack = 0
 10237                           ; Regs used in _mic_detect: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10238                           
 10239                           
 10240                           ;main.c: 189:     adc_result_t mic_detect_value;;main.c: 191:     ADCC_StartConversion(c
      +                          hannel_ANA1);
 10241     0B4F  3001               	movlw	1
 10242     0B50  3188  2000  318B   	fcall	_ADCC_StartConversion
 10243     0B53                     l6139:	
 10244                           ;main.c: 192:     while(!ADCC_IsConversionDone());
 10245                           
 10246     0B53  3194  2413  318B   	fcall	_ADCC_IsConversionDone
 10247     0B56  3A00               	xorlw	0
 10248     0B57  1903               	skipnz
 10249     0B58  2B5A               	goto	u2631
 10250     0B59  2B5B               	goto	u2630
 10251     0B5A                     u2631:
 10252     0B5A  2B53               	goto	l6139
 10253     0B5B                     u2630:
 10254     0B5B                     l6141:
 10255                           
 10256                           ;main.c: 193:     mic_detect_value = ADCC_GetConversionResult();
 10257     0B5B  3194  2406  318B   	fcall	_ADCC_GetConversionResult
 10258     0B5E  0871               	movf	?_ADCC_GetConversionResult+1,w
 10259     0B5F  0020               	movlb	0	; select bank0
 10260     0B60  00C0               	movwf	mic_detect@mic_detect_value+1
 10261     0B61  0870               	movf	?_ADCC_GetConversionResult,w
 10262     0B62  00BF               	movwf	mic_detect@mic_detect_value
 10263     0B63                     l6143:
 10264                           
 10265                           ;main.c: 197:     if((mic_detect_value < 0x02FF)){
 10266     0B63  3002               	movlw	2
 10267     0B64  0240               	subwf	mic_detect@mic_detect_value+1,w
 10268     0B65  30FF               	movlw	255
 10269     0B66  1903               	skipnz
 10270     0B67  023F               	subwf	mic_detect@mic_detect_value,w
 10271     0B68  1803               	skipnc
 10272     0B69  2B6B               	goto	u2641
 10273     0B6A  2B6C               	goto	u2640
 10274     0B6B                     u2641:
 10275     0B6B  2B98               	goto	l6165
 10276     0B6C                     u2640:
 10277     0B6C                     l6145:
 10278                           
 10279                           ;main.c: 198:         if((PORTAbits.RA0 == 0) && (key_pressed_mute == 0)){
 10280     0B6C  180C               	btfsc	12,0	;volatile
 10281     0B6D  2B6F               	goto	u2651
 10282     0B6E  2B70               	goto	u2650
 10283     0B6F                     u2651:
 10284     0B6F  2B8D               	goto	l1087
 10285     0B70                     u2650:
 10286     0B70                     l6147:
 10287     0B70  0865               	movf	_key_pressed_mute,w
 10288     0B71  1D03               	btfss	3,2
 10289     0B72  2B74               	goto	u2661
 10290     0B73  2B75               	goto	u2660
 10291     0B74                     u2661:
 10292     0B74  2B8D               	goto	l1087
 10293     0B75                     u2660:
 10294     0B75                     l6149:
 10295                           
 10296                           ;main.c: 199:             if(mic_state_choosed == MUTE_OFF){
 10297     0B75  3003               	movlw	3
 10298     0B76  0660               	xorwf	_mic_state_choosed,w
 10299     0B77  1D03               	btfss	3,2
 10300     0B78  2B7A               	goto	u2671
 10301     0B79  2B7B               	goto	u2670
 10302     0B7A                     u2671:
 10303     0B7A  2B83               	goto	l6155
 10304     0B7B                     u2670:
 10305     0B7B                     l6151:
 10306                           
 10307                           ;main.c: 200:                 TLV320_Mute(1);
 10308     0B7B  3001               	movlw	1
 10309     0B7C  318A  22EF  318B   	fcall	_TLV320_Mute
 10310     0B7F                     l6153:
 10311                           
 10312                           ;main.c: 201:                 mic_state_choosed = MUTE_ON;
 10313     0B7F  3002               	movlw	2
 10314     0B80  0020               	movlb	0	; select bank0
 10315     0B81  00E0               	movwf	_mic_state_choosed
 10316                           
 10317                           ;main.c: 202:             }
 10318     0B82  2B8A               	goto	l6159
 10319     0B83                     l6155:
 10320                           
 10321                           ;main.c: 204:                 TLV320_Mute(0);
 10322     0B83  3000               	movlw	0
 10323     0B84  318A  22EF  318B   	fcall	_TLV320_Mute
 10324     0B87                     l6157:
 10325                           
 10326                           ;main.c: 205:                 mic_state_choosed = MUTE_OFF;
 10327     0B87  3003               	movlw	3
 10328     0B88  0020               	movlb	0	; select bank0
 10329     0B89  00E0               	movwf	_mic_state_choosed
 10330     0B8A                     l6159:
 10331                           
 10332                           ;main.c: 207:             key_pressed_mute = 1;
 10333     0B8A  01E5               	clrf	_key_pressed_mute
 10334     0B8B  0AE5               	incf	_key_pressed_mute,f
 10335                           
 10336                           ;main.c: 208:         }
 10337     0B8C  2BAE               	goto	l1094
 10338     0B8D                     l1087:	
 10339                           ;main.c: 209:         else if((PORTAbits.RA0 == 1) && (key_pressed_mute == 1)){
 10340                           
 10341     0B8D  1C0C               	btfss	12,0	;volatile
 10342     0B8E  2B90               	goto	u2681
 10343     0B8F  2B91               	goto	u2680
 10344     0B90                     u2681:
 10345     0B90  2BAE               	goto	l1094
 10346     0B91                     u2680:
 10347     0B91                     l6161:
 10348     0B91  0365               	decf	_key_pressed_mute,w
 10349     0B92  1D03               	btfss	3,2
 10350     0B93  2B95               	goto	u2691
 10351     0B94  2B96               	goto	u2690
 10352     0B95                     u2691:
 10353     0B95  2BAE               	goto	l1094
 10354     0B96                     u2690:
 10355     0B96                     l6163:
 10356                           
 10357                           ;main.c: 210:             key_pressed_mute = 0;
 10358     0B96  01E5               	clrf	_key_pressed_mute
 10359     0B97  2BAE               	goto	l1094
 10360     0B98                     l6165:
 10361     0B98  3003               	movlw	3
 10362     0B99  0240               	subwf	mic_detect@mic_detect_value+1,w
 10363     0B9A  3081               	movlw	129
 10364     0B9B  1903               	skipnz
 10365     0B9C  023F               	subwf	mic_detect@mic_detect_value,w
 10366     0B9D  1C03               	skipc
 10367     0B9E  2BA0               	goto	u2701
 10368     0B9F  2BA1               	goto	u2700
 10369     0BA0                     u2701:
 10370     0BA0  2BAE               	goto	l1094
 10371     0BA1                     u2700:
 10372     0BA1                     l6167:
 10373     0BA1  3003               	movlw	3
 10374     0BA2  0660               	xorwf	_mic_state_choosed,w
 10375     0BA3  1D03               	btfss	3,2
 10376     0BA4  2BA6               	goto	u2711
 10377     0BA5  2BA7               	goto	u2710
 10378     0BA6                     u2711:
 10379     0BA6  2BAE               	goto	l1094
 10380     0BA7                     u2710:
 10381     0BA7                     l6169:
 10382                           
 10383                           ;main.c: 214:         TLV320_Mute(1);
 10384     0BA7  3001               	movlw	1
 10385     0BA8  318A  22EF  318B   	fcall	_TLV320_Mute
 10386     0BAB                     l6171:
 10387                           
 10388                           ;main.c: 215:         mic_state_choosed = MUTE_ON;
 10389     0BAB  3002               	movlw	2
 10390     0BAC  0020               	movlb	0	; select bank0
 10391     0BAD  00E0               	movwf	_mic_state_choosed
 10392     0BAE                     l1094:
 10393     0BAE  0008               	return
 10394     0BAF                     __end_of_mic_detect:
 10395                           
 10396                           	psect	text13
 10397     0AEF                     __ptext13:	
 10398 ;; *************** function _TLV320_Mute *****************
 10399 ;; Defined at:
 10400 ;;		line 55 in file "tlv320aic32.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  on_off          1    wreg     unsigned char 
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;  on_off          1   27[BANK0 ] unsigned char 
 10405 ;;  i               1   30[BANK0 ] unsigned char 
 10406 ;;  regval          1   29[BANK0 ] unsigned char 
 10407 ;;  cmd             1   28[BANK0 ] unsigned char 
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      void 
 10410 ;; Registers used:
 10411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10418 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;Total ram usage:        5 bytes
 10422 ;; Hardware stack levels used: 1
 10423 ;; Hardware stack levels required when called: 9
 10424 ;; This function calls:
 10425 ;;		_DELAY_milliseconds
 10426 ;;		_I2C1_Write1ByteRegister
 10427 ;;		_button_push_play
 10428 ;; This function is called by:
 10429 ;;		_mic_detect
 10430 ;; This function uses a non-reentrant model
 10431 ;;
 10432                           
 10433     0AEF                     _TLV320_Mute:	
 10434                           ;psect for function _TLV320_Mute
 10435                           
 10436                           
 10437                           ;incstack = 0
 10438                           ; Regs used in _TLV320_Mute: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10439                           ;TLV320_Mute@on_off stored from wreg
 10440     0AEF  0020               	movlb	0	; select bank0
 10441     0AF0  00BB               	movwf	TLV320_Mute@on_off
 10442     0AF1                     l5435:
 10443                           
 10444                           ;tlv320aic32.c: 56:     uint8_t cmd, regval, i;;tlv320aic32.c: 57:     button_push_play(
      +                          );
 10445     0AF1  3195  25DC  318A   	fcall	_button_push_play
 10446     0AF4                     l5437:
 10447                           
 10448                           ;tlv320aic32.c: 59:     if(on_off == 1){
 10449     0AF4  0020               	movlb	0	; select bank0
 10450     0AF5  033B               	decf	TLV320_Mute@on_off,w
 10451     0AF6  1D03               	btfss	3,2
 10452     0AF7  2AF9               	goto	u2081
 10453     0AF8  2AFA               	goto	u2080
 10454     0AF9                     u2081:
 10455     0AF9  2B24               	goto	l5455
 10456     0AFA                     u2080:
 10457     0AFA                     l5439:
 10458                           
 10459                           ;tlv320aic32.c: 60:         for (i = 0; i< 4; i+= 2){
 10460     0AFA  01BE               	clrf	TLV320_Mute@i
 10461     0AFB                     l5445:
 10462                           
 10463                           ;tlv320aic32.c: 61:             cmd = (tlv320_mic_control[i]);
 10464     0AFB  083E               	movf	TLV320_Mute@i,w
 10465     0AFC  3E20               	addlw	(low (_tlv320_mic_control| (0+256)))& (0+255)
 10466     0AFD  0086               	movwf	6
 10467     0AFE  3001               	movlw	1	; select bank2/3
 10468     0AFF  0087               	movwf	7
 10469     0B00  0801               	movf	1,w
 10470     0B01  00BC               	movwf	TLV320_Mute@cmd
 10471                           
 10472                           ;tlv320aic32.c: 62:             regval = tlv320_mic_control[i+1];
 10473     0B02  083E               	movf	TLV320_Mute@i,w
 10474     0B03  3E21               	addlw	(low ((_tlv320_mic_control| (0+256)+1)))& (0+255)
 10475     0B04  0086               	movwf	6
 10476     0B05  3001               	movlw	1	; select bank2/3
 10477     0B06  0087               	movwf	7
 10478     0B07  0801               	movf	1,w
 10479     0B08  00BD               	movwf	TLV320_Mute@regval
 10480     0B09                     l5447:
 10481                           
 10482                           ;tlv320aic32.c: 63:             I2C1_Write1ByteRegister( 0x18, cmd, regval );
 10483     0B09  083C               	movf	TLV320_Mute@cmd,w
 10484     0B0A  00A0               	movwf	I2C1_Write1ByteRegister@reg
 10485     0B0B  083D               	movf	TLV320_Mute@regval,w
 10486     0B0C  00A1               	movwf	I2C1_Write1ByteRegister@data
 10487     0B0D  3018               	movlw	24
 10488     0B0E  3197  279F  318A   	fcall	_I2C1_Write1ByteRegister
 10489     0B11                     l5449:
 10490                           
 10491                           ;tlv320aic32.c: 64:             DELAY_milliseconds(1);
 10492     0B11  3001               	movlw	1
 10493     0B12  00F0               	movwf	DELAY_milliseconds@milliseconds
 10494     0B13  3000               	movlw	0
 10495     0B14  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 10496     0B15  3195  2542  318A   	fcall	_DELAY_milliseconds
 10497     0B18                     l5451:
 10498                           
 10499                           ;tlv320aic32.c: 65:         }
 10500     0B18  3002               	movlw	2
 10501     0B19  0020               	movlb	0	; select bank0
 10502     0B1A  00BA               	movwf	??_TLV320_Mute
 10503     0B1B  083A               	movf	??_TLV320_Mute,w
 10504     0B1C  07BE               	addwf	TLV320_Mute@i,f
 10505     0B1D                     l5453:
 10506     0B1D  3004               	movlw	4
 10507     0B1E  023E               	subwf	TLV320_Mute@i,w
 10508     0B1F  1C03               	skipc
 10509     0B20  2B22               	goto	u2091
 10510     0B21  2B23               	goto	u2090
 10511     0B22                     u2091:
 10512     0B22  2AFB               	goto	l5445
 10513     0B23                     u2090:
 10514     0B23  2B4E               	goto	l1514
 10515     0B24                     l5455:
 10516                           
 10517                           ;tlv320aic32.c: 68:         for (i = 4; i< 30; i+= 2){
 10518     0B24  3004               	movlw	4
 10519     0B25  00BE               	movwf	TLV320_Mute@i
 10520     0B26                     l5459:
 10521                           
 10522                           ;tlv320aic32.c: 69:             cmd = (tlv320_mic_control[i]);
 10523     0B26  083E               	movf	TLV320_Mute@i,w
 10524     0B27  3E20               	addlw	(low (_tlv320_mic_control| (0+256)))& (0+255)
 10525     0B28  0086               	movwf	6
 10526     0B29  3001               	movlw	1	; select bank2/3
 10527     0B2A  0087               	movwf	7
 10528     0B2B  0801               	movf	1,w
 10529     0B2C  00BC               	movwf	TLV320_Mute@cmd
 10530                           
 10531                           ;tlv320aic32.c: 70:             regval = tlv320_mic_control[i+1];
 10532     0B2D  083E               	movf	TLV320_Mute@i,w
 10533     0B2E  3E21               	addlw	(low ((_tlv320_mic_control| (0+256)+1)))& (0+255)
 10534     0B2F  0086               	movwf	6
 10535     0B30  3001               	movlw	1	; select bank2/3
 10536     0B31  0087               	movwf	7
 10537     0B32  0801               	movf	1,w
 10538     0B33  00BD               	movwf	TLV320_Mute@regval
 10539     0B34                     l5461:
 10540                           
 10541                           ;tlv320aic32.c: 71:             I2C1_Write1ByteRegister( 0x18, cmd, regval );
 10542     0B34  083C               	movf	TLV320_Mute@cmd,w
 10543     0B35  00A0               	movwf	I2C1_Write1ByteRegister@reg
 10544     0B36  083D               	movf	TLV320_Mute@regval,w
 10545     0B37  00A1               	movwf	I2C1_Write1ByteRegister@data
 10546     0B38  3018               	movlw	24
 10547     0B39  3197  279F  318A   	fcall	_I2C1_Write1ByteRegister
 10548     0B3C                     l5463:
 10549                           
 10550                           ;tlv320aic32.c: 72:             DELAY_milliseconds(1);
 10551     0B3C  3001               	movlw	1
 10552     0B3D  00F0               	movwf	DELAY_milliseconds@milliseconds
 10553     0B3E  3000               	movlw	0
 10554     0B3F  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 10555     0B40  3195  2542  318A   	fcall	_DELAY_milliseconds
 10556     0B43                     l5465:
 10557                           
 10558                           ;tlv320aic32.c: 73:         }
 10559     0B43  3002               	movlw	2
 10560     0B44  0020               	movlb	0	; select bank0
 10561     0B45  00BA               	movwf	??_TLV320_Mute
 10562     0B46  083A               	movf	??_TLV320_Mute,w
 10563     0B47  07BE               	addwf	TLV320_Mute@i,f
 10564     0B48                     l5467:
 10565     0B48  301E               	movlw	30
 10566     0B49  023E               	subwf	TLV320_Mute@i,w
 10567     0B4A  1C03               	skipc
 10568     0B4B  2B4D               	goto	u2101
 10569     0B4C  2B4E               	goto	u2100
 10570     0B4D                     u2101:
 10571     0B4D  2B26               	goto	l5459
 10572     0B4E                     u2100:
 10573     0B4E                     l1514:
 10574     0B4E  0008               	return
 10575     0B4F                     __end_of_TLV320_Mute:
 10576                           
 10577                           	psect	text14
 10578     15DC                     __ptext14:	
 10579 ;; *************** function _button_push_play *****************
 10580 ;; Defined at:
 10581 ;;		line 308 in file "main.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;		None
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;		None
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  1    wreg      void 
 10588 ;; Registers used:
 10589 ;;		wreg, status,2, status,0, pclath, cstack
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10599 ;;Total ram usage:        0 bytes
 10600 ;; Hardware stack levels used: 1
 10601 ;; Hardware stack levels required when called: 2
 10602 ;; This function calls:
 10603 ;;		_beep
 10604 ;; This function is called by:
 10605 ;;		_volume_control
 10606 ;;		_TLV320_Mute
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610     15DC                     _button_push_play:	
 10611                           ;psect for function _button_push_play
 10612                           
 10613     15DC                     l5299:	
 10614                           ;incstack = 0
 10615                           ; Regs used in _button_push_play: [wreg+status,2+status,0+pclath+cstack]
 10616                           
 10617                           
 10618                           ;main.c: 309:     beep( 933, 500);
 10619     15DC  30A5               	movlw	165
 10620     15DD  0020               	movlb	0	; select bank0
 10621     15DE  00A7               	movwf	beep@note
 10622     15DF  3003               	movlw	3
 10623     15E0  00A8               	movwf	beep@note+1
 10624     15E1  30F4               	movlw	244
 10625     15E2  00A9               	movwf	beep@duration
 10626     15E3  3001               	movlw	1
 10627     15E4  00AA               	movwf	beep@duration+1
 10628     15E5  318C  247B  3195   	fcall	_beep
 10629                           
 10630                           ;main.c: 310:  beep( 933, 500);
 10631     15E8  30A5               	movlw	165
 10632     15E9  0020               	movlb	0	; select bank0
 10633     15EA  00A7               	movwf	beep@note
 10634     15EB  3003               	movlw	3
 10635     15EC  00A8               	movwf	beep@note+1
 10636     15ED  30F4               	movlw	244
 10637     15EE  00A9               	movwf	beep@duration
 10638     15EF  3001               	movlw	1
 10639     15F0  00AA               	movwf	beep@duration+1
 10640     15F1  318C  247B  3195   	fcall	_beep
 10641     15F4                     l1135:
 10642     15F4  0008               	return
 10643     15F5                     __end_of_button_push_play:
 10644                           
 10645                           	psect	text15
 10646     0D97                     __ptext15:	
 10647 ;; *************** function _charge_display *****************
 10648 ;; Defined at:
 10649 ;;		line 123 in file "main.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;		None
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;  charger_valu    2   30[BANK0 ] unsigned short 
 10654 ;;  charger_temp    2   28[BANK0 ] unsigned short 
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1    wreg      void 
 10657 ;; Registers used:
 10658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;Total ram usage:        6 bytes
 10669 ;; Hardware stack levels used: 1
 10670 ;; Hardware stack levels required when called: 4
 10671 ;; This function calls:
 10672 ;;		_ADCC_GetConversionResult
 10673 ;;		_ADCC_IsConversionDone
 10674 ;;		_ADCC_StartConversion
 10675 ;;		_led_control
 10676 ;;		_power_off_sequence
 10677 ;; This function is called by:
 10678 ;;		_main
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682     0D97                     _charge_display:	
 10683                           ;psect for function _charge_display
 10684                           
 10685     0D97                     l6079:	
 10686                           ;incstack = 0
 10687                           ; Regs used in _charge_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10688                           
 10689                           
 10690                           ;main.c: 124:     adc_result_t charger_value, charger_temp;;main.c: 126:     if(PORTCbit
      +                          s.RC7 == 0 ){
 10691     0D97  0020               	movlb	0	; select bank0
 10692     0D98  1B8E               	btfsc	14,7	;volatile
 10693     0D99  2D9B               	goto	u2511
 10694     0D9A  2D9C               	goto	u2510
 10695     0D9B                     u2511:
 10696     0D9B  2DAA               	goto	l6087
 10697     0D9C                     u2510:
 10698     0D9C                     l6081:
 10699                           
 10700                           ;main.c: 127:         if(PORTBbits.RB5 == 0){
 10701     0D9C  1A8D               	btfsc	13,5	;volatile
 10702     0D9D  2D9F               	goto	u2521
 10703     0D9E  2DA0               	goto	u2520
 10704     0D9F                     u2521:
 10705     0D9F  2DA5               	goto	l6085
 10706     0DA0                     u2520:
 10707     0DA0                     l6083:
 10708                           
 10709                           ;main.c: 128:             led_control(GREEN_LED_ON);
 10710     0DA0  3001               	movlw	1
 10711     0DA1  3197  2744  318D   	fcall	_led_control
 10712                           
 10713                           ;main.c: 129:         }
 10714     0DA4  2E29               	goto	l1080
 10715     0DA5                     l6085:
 10716                           
 10717                           ;main.c: 131:             led_control(RED_LED_ON);
 10718     0DA5  3000               	movlw	0
 10719     0DA6  3197  2744  318D   	fcall	_led_control
 10720     0DA9  2E29               	goto	l1080
 10721     0DAA                     l6087:
 10722                           
 10723                           ;main.c: 135:         ADCC_StartConversion(channel_ANA6);
 10724     0DAA  3006               	movlw	6
 10725     0DAB  3188  2000  318D   	fcall	_ADCC_StartConversion
 10726     0DAE                     l6089:	
 10727                           ;main.c: 136:         while(!ADCC_IsConversionDone());
 10728                           
 10729     0DAE  3194  2413  318D   	fcall	_ADCC_IsConversionDone
 10730     0DB1  3A00               	xorlw	0
 10731     0DB2  1903               	skipnz
 10732     0DB3  2DB5               	goto	u2531
 10733     0DB4  2DB6               	goto	u2530
 10734     0DB5                     u2531:
 10735     0DB5  2DAE               	goto	l6089
 10736     0DB6                     u2530:
 10737     0DB6                     l6091:
 10738                           
 10739                           ;main.c: 137:         charger_value = ADCC_GetConversionResult();
 10740     0DB6  3194  2406  318D   	fcall	_ADCC_GetConversionResult
 10741     0DB9  0871               	movf	?_ADCC_GetConversionResult+1,w
 10742     0DBA  0020               	movlb	0	; select bank0
 10743     0DBB  00BF               	movwf	charge_display@charger_value+1
 10744     0DBC  0870               	movf	?_ADCC_GetConversionResult,w
 10745     0DBD  00BE               	movwf	charge_display@charger_value
 10746     0DBE                     l6093:
 10747                           
 10748                           ;main.c: 138:         charger_value = charger_value >> 3;
 10749     0DBE  083F               	movf	charge_display@charger_value+1,w
 10750     0DBF  00BB               	movwf	??_charge_display+1
 10751     0DC0  083E               	movf	charge_display@charger_value,w
 10752     0DC1  00BA               	movwf	??_charge_display
 10753     0DC2  36BB               	lsrf	??_charge_display+1,f
 10754     0DC3  0CBA               	rrf	??_charge_display,f
 10755     0DC4  36BB               	lsrf	??_charge_display+1,f
 10756     0DC5  0CBA               	rrf	??_charge_display,f
 10757     0DC6  36BB               	lsrf	??_charge_display+1,f
 10758     0DC7  0CBA               	rrf	??_charge_display,f
 10759     0DC8  083A               	movf	??_charge_display,w
 10760     0DC9  00BE               	movwf	charge_display@charger_value
 10761     0DCA  083B               	movf	??_charge_display+1,w
 10762     0DCB  00BF               	movwf	charge_display@charger_value+1
 10763     0DCC                     l6095:
 10764                           
 10765                           ;main.c: 162:         if(battery_count != 0){
 10766     0DCC  0864               	movf	_battery_count,w
 10767     0DCD  1903               	btfsc	3,2
 10768     0DCE  2DD0               	goto	u2541
 10769     0DCF  2DD1               	goto	u2540
 10770     0DD0                     u2541:
 10771     0DD0  2DDE               	goto	l6099
 10772     0DD1                     u2540:
 10773     0DD1                     l6097:
 10774                           
 10775                           ;main.c: 163:             charger_temp = (charger_temp + charger_value)/2;
 10776     0DD1  083E               	movf	charge_display@charger_value,w
 10777     0DD2  073C               	addwf	charge_display@charger_temp,w
 10778     0DD3  00BA               	movwf	??_charge_display
 10779     0DD4  083F               	movf	charge_display@charger_value+1,w
 10780     0DD5  3D3D               	addwfc	charge_display@charger_temp+1,w
 10781     0DD6  00BB               	movwf	??_charge_display+1
 10782     0DD7  36BB               	lsrf	??_charge_display+1,f
 10783     0DD8  0CBA               	rrf	??_charge_display,f
 10784     0DD9  083A               	movf	??_charge_display,w
 10785     0DDA  00BC               	movwf	charge_display@charger_temp
 10786     0DDB  083B               	movf	??_charge_display+1,w
 10787     0DDC  00BD               	movwf	charge_display@charger_temp+1
 10788                           
 10789                           ;main.c: 164:         }
 10790     0DDD  2DDE               	goto	l6101
 10791     0DDE                     l6099:
 10792     0DDE                     l6101:
 10793                           
 10794                           ;main.c: 168:         battery_count++;
 10795     0DDE  3001               	movlw	1
 10796     0DDF  00BA               	movwf	??_charge_display
 10797     0DE0  083A               	movf	??_charge_display,w
 10798     0DE1  07E4               	addwf	_battery_count,f
 10799     0DE2                     l6103:
 10800                           
 10801                           ;main.c: 170:         if(battery_count > 200){
 10802     0DE2  30C9               	movlw	201
 10803     0DE3  0264               	subwf	_battery_count,w
 10804     0DE4  1C03               	skipc
 10805     0DE5  2DE7               	goto	u2551
 10806     0DE6  2DE8               	goto	u2550
 10807     0DE7                     u2551:
 10808     0DE7  2E29               	goto	l1080
 10809     0DE8                     u2550:
 10810     0DE8                     l6105:
 10811                           
 10812                           ;main.c: 171:             if(charger_value > 70 ) {
 10813     0DE8  3000               	movlw	0
 10814     0DE9  023F               	subwf	charge_display@charger_value+1,w
 10815     0DEA  3047               	movlw	71
 10816     0DEB  1903               	skipnz
 10817     0DEC  023E               	subwf	charge_display@charger_value,w
 10818     0DED  1C03               	skipc
 10819     0DEE  2DF0               	goto	u2561
 10820     0DEF  2DF1               	goto	u2560
 10821     0DF0                     u2561:
 10822     0DF0  2DF6               	goto	l6109
 10823     0DF1                     u2560:
 10824     0DF1                     l6107:
 10825                           
 10826                           ;main.c: 172:                 led_control(GREEN_LED_ON);
 10827     0DF1  3001               	movlw	1
 10828     0DF2  3197  2744  318D   	fcall	_led_control
 10829                           
 10830                           ;main.c: 173:             }
 10831     0DF5  2E27               	goto	l6123
 10832     0DF6                     l6109:
 10833     0DF6  3000               	movlw	0
 10834     0DF7  023F               	subwf	charge_display@charger_value+1,w
 10835     0DF8  3047               	movlw	71
 10836     0DF9  1903               	skipnz
 10837     0DFA  023E               	subwf	charge_display@charger_value,w
 10838     0DFB  1803               	skipnc
 10839     0DFC  2DFE               	goto	u2571
 10840     0DFD  2DFF               	goto	u2570
 10841     0DFE                     u2571:
 10842     0DFE  2E0D               	goto	l6115
 10843     0DFF                     u2570:
 10844     0DFF                     l6111:
 10845     0DFF  3000               	movlw	0
 10846     0E00  023F               	subwf	charge_display@charger_value+1,w
 10847     0E01  3043               	movlw	67
 10848     0E02  1903               	skipnz
 10849     0E03  023E               	subwf	charge_display@charger_value,w
 10850     0E04  1C03               	skipc
 10851     0E05  2E07               	goto	u2581
 10852     0E06  2E08               	goto	u2580
 10853     0E07                     u2581:
 10854     0E07  2E0D               	goto	l6115
 10855     0E08                     u2580:
 10856     0E08                     l6113:
 10857                           
 10858                           ;main.c: 175:                 led_control(BLUE_LED_ON);
 10859     0E08  3002               	movlw	2
 10860     0E09  3197  2744  318D   	fcall	_led_control
 10861                           
 10862                           ;main.c: 176:             }
 10863     0E0C  2E27               	goto	l6123
 10864     0E0D                     l6115:
 10865     0E0D  3000               	movlw	0
 10866     0E0E  023F               	subwf	charge_display@charger_value+1,w
 10867     0E0F  3043               	movlw	67
 10868     0E10  1903               	skipnz
 10869     0E11  023E               	subwf	charge_display@charger_value,w
 10870     0E12  1803               	skipnc
 10871     0E13  2E15               	goto	u2591
 10872     0E14  2E16               	goto	u2590
 10873     0E15                     u2591:
 10874     0E15  2E24               	goto	l6121
 10875     0E16                     u2590:
 10876     0E16                     l6117:
 10877     0E16  3000               	movlw	0
 10878     0E17  023F               	subwf	charge_display@charger_value+1,w
 10879     0E18  3041               	movlw	65
 10880     0E19  1903               	skipnz
 10881     0E1A  023E               	subwf	charge_display@charger_value,w
 10882     0E1B  1C03               	skipc
 10883     0E1C  2E1E               	goto	u2601
 10884     0E1D  2E1F               	goto	u2600
 10885     0E1E                     u2601:
 10886     0E1E  2E24               	goto	l6121
 10887     0E1F                     u2600:
 10888     0E1F                     l6119:
 10889                           
 10890                           ;main.c: 178:                 led_control(RED_LED_ON);
 10891     0E1F  3000               	movlw	0
 10892     0E20  3197  2744  318D   	fcall	_led_control
 10893                           
 10894                           ;main.c: 179:             }
 10895     0E23  2E27               	goto	l6123
 10896     0E24                     l6121:
 10897                           
 10898                           ;main.c: 181:                 power_off_sequence();
 10899     0E24  318A  2204  318D   	fcall	_power_off_sequence
 10900     0E27                     l6123:
 10901                           
 10902                           ;main.c: 183:             battery_count = 0;
 10903     0E27  0020               	movlb	0	; select bank0
 10904     0E28  01E4               	clrf	_battery_count
 10905     0E29                     l1080:
 10906     0E29  0008               	return
 10907     0E2A                     __end_of_charge_display:
 10908                           
 10909                           	psect	text16
 10910     0800                     __ptext16:	
 10911 ;; *************** function _ADCC_StartConversion *****************
 10912 ;; Defined at:
 10913 ;;		line 108 in file "mcc_generated_files/adcc.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;  channel         1    wreg     enum E11696
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;  channel         1    0[COMMON] enum E11696
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  1    wreg      void 
 10920 ;; Registers used:
 10921 ;;		wreg
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;Total ram usage:        1 bytes
 10932 ;; Hardware stack levels used: 1
 10933 ;; This function calls:
 10934 ;;		Nothing
 10935 ;; This function is called by:
 10936 ;;		_charge_display
 10937 ;;		_mic_detect
 10938 ;;		_volume_control
 10939 ;; This function uses a non-reentrant model
 10940 ;;
 10941                           
 10942     0800                     _ADCC_StartConversion:	
 10943                           ;psect for function _ADCC_StartConversion
 10944                           
 10945                           
 10946                           ;incstack = 0
 10947                           ; Regs used in _ADCC_StartConversion: [wreg]
 10948                           ;ADCC_StartConversion@channel stored from wreg
 10949     0800  00F0               	movwf	ADCC_StartConversion@channel
 10950     0801                     l5403:
 10951                           
 10952                           ;mcc_generated_files/adcc.c: 108: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 109: {;mcc_generated_files/adcc.c: 111:     ADPCH = channel;
 10953     0801  0870               	movf	ADCC_StartConversion@channel,w
 10954     0802  0021               	movlb	1	; select bank1
 10955     0803  009E               	movwf	30	;volatile
 10956     0804                     l5405:
 10957                           
 10958                           ;mcc_generated_files/adcc.c: 114:     ADCON0bits.ADON = 1;
 10959     0804  1793               	bsf	19,7	;volatile
 10960     0805                     l5407:
 10961                           
 10962                           ;mcc_generated_files/adcc.c: 117:     ADCON0bits.ADGO = 1;
 10963     0805  1413               	bsf	19,0	;volatile
 10964     0806                     l751:
 10965     0806  0008               	return
 10966     0807                     __end_of_ADCC_StartConversion:
 10967                           
 10968                           	psect	text17
 10969     1413                     __ptext17:	
 10970 ;; *************** function _ADCC_IsConversionDone *****************
 10971 ;; Defined at:
 10972 ;;		line 120 in file "mcc_generated_files/adcc.c"
 10973 ;; Parameters:    Size  Location     Type
 10974 ;;		None
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;		None
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  1    wreg      _Bool 
 10979 ;; Registers used:
 10980 ;;		wreg, status,0
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;Total ram usage:        0 bytes
 10991 ;; Hardware stack levels used: 1
 10992 ;; This function calls:
 10993 ;;		Nothing
 10994 ;; This function is called by:
 10995 ;;		_charge_display
 10996 ;;		_mic_detect
 10997 ;;		_volume_control
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001     1413                     _ADCC_IsConversionDone:	
 11002                           ;psect for function _ADCC_IsConversionDone
 11003                           
 11004     1413                     l5409:	
 11005                           ;incstack = 0
 11006                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 11007                           
 11008                           
 11009                           ;mcc_generated_files/adcc.c: 123:     return ((unsigned char)(!ADCON0bits.ADGO));
 11010     1413  1003               	clrc
 11011     1414  0021               	movlb	1	; select bank1
 11012     1415  1C13               	btfss	19,0	;volatile
 11013     1416  1403               	setc
 11014     1417  3000               	movlw	0
 11015     1418  3D09               	addwfc	9,w
 11016     1419                     l754:
 11017     1419  0008               	return
 11018     141A                     __end_of_ADCC_IsConversionDone:
 11019                           
 11020                           	psect	text18
 11021     1406                     __ptext18:	
 11022 ;; *************** function _ADCC_GetConversionResult *****************
 11023 ;; Defined at:
 11024 ;;		line 126 in file "mcc_generated_files/adcc.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;		None
 11027 ;; Auto vars:     Size  Location     Type
 11028 ;;		None
 11029 ;; Return value:  Size  Location     Type
 11030 ;;                  2    0[COMMON] unsigned short 
 11031 ;; Registers used:
 11032 ;;		wreg
 11033 ;; Tracked objects:
 11034 ;;		On entry : 0/0
 11035 ;;		On exit  : 0/0
 11036 ;;		Unchanged: 0/0
 11037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;Total ram usage:        2 bytes
 11043 ;; Hardware stack levels used: 1
 11044 ;; This function calls:
 11045 ;;		Nothing
 11046 ;; This function is called by:
 11047 ;;		_charge_display
 11048 ;;		_mic_detect
 11049 ;;		_volume_control
 11050 ;; This function uses a non-reentrant model
 11051 ;;
 11052                           
 11053     1406                     _ADCC_GetConversionResult:	
 11054                           ;psect for function _ADCC_GetConversionResult
 11055                           
 11056     1406                     l5413:	
 11057                           ;incstack = 0
 11058                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 11059                           
 11060                           
 11061                           ;mcc_generated_files/adcc.c: 129:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11062     1406  0021               	movlb	1	; select bank1
 11063     1407  080D               	movf	13,w	;volatile
 11064     1408  00F1               	movwf	?_ADCC_GetConversionResult+1
 11065     1409  080C               	movf	12,w	;volatile
 11066     140A  00F0               	movwf	?_ADCC_GetConversionResult
 11067     140B                     l757:
 11068     140B  0008               	return
 11069     140C                     __end_of_ADCC_GetConversionResult:
 11070                           
 11071                           	psect	text19
 11072     1554                     __ptext19:	
 11073 ;; *************** function _SYSTEM_Initialize *****************
 11074 ;; Defined at:
 11075 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;		None
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;		None
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  1    wreg      void 
 11082 ;; Registers used:
 11083 ;;		wreg, status,2, status,0, pclath, cstack
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;Total ram usage:        0 bytes
 11094 ;; Hardware stack levels used: 1
 11095 ;; Hardware stack levels required when called: 1
 11096 ;; This function calls:
 11097 ;;		_ADCC_Initialize
 11098 ;;		_I2C1_Initialize
 11099 ;;		_OSCILLATOR_Initialize
 11100 ;;		_PIN_MANAGER_Initialize
 11101 ;;		_PMD_Initialize
 11102 ;;		_SPI2_Initialize
 11103 ;; This function is called by:
 11104 ;;		_main
 11105 ;; This function uses a non-reentrant model
 11106 ;;
 11107                           
 11108     1554                     _SYSTEM_Initialize:	
 11109                           ;psect for function _SYSTEM_Initialize
 11110                           
 11111     1554                     l5977:	
 11112                           ;incstack = 0
 11113                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11114                           
 11115                           
 11116                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 11117     1554  3194  2422  3195   	fcall	_PMD_Initialize
 11118     1557                     l5979:
 11119                           
 11120                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 11121     1557  3194  243C  3195   	fcall	_I2C1_Initialize
 11122     155A                     l5981:
 11123                           
 11124                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
 11125     155A  3195  2567  3195   	fcall	_SPI2_Initialize
 11126     155D                     l5983:
 11127                           
 11128                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 11129     155D  3189  210F  3195   	fcall	_PIN_MANAGER_Initialize
 11130     1560                     l5985:
 11131                           
 11132                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 11133     1560  3194  2433  3195   	fcall	_OSCILLATOR_Initialize
 11134     1563                     l5987:
 11135                           
 11136                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 11137     1563  3196  260F  3195   	fcall	_ADCC_Initialize
 11138     1566                     l332:
 11139     1566  0008               	return
 11140     1567                     __end_of_SYSTEM_Initialize:
 11141                           
 11142                           	psect	text20
 11143     1567                     __ptext20:	
 11144 ;; *************** function _SPI2_Initialize *****************
 11145 ;; Defined at:
 11146 ;;		line 63 in file "mcc_generated_files/spi2.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;		None
 11149 ;; Auto vars:     Size  Location     Type
 11150 ;;		None
 11151 ;; Return value:  Size  Location     Type
 11152 ;;                  1    wreg      void 
 11153 ;; Registers used:
 11154 ;;		wreg
 11155 ;; Tracked objects:
 11156 ;;		On entry : 0/0
 11157 ;;		On exit  : 0/0
 11158 ;;		Unchanged: 0/0
 11159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;Total ram usage:        0 bytes
 11165 ;; Hardware stack levels used: 1
 11166 ;; This function calls:
 11167 ;;		Nothing
 11168 ;; This function is called by:
 11169 ;;		_SYSTEM_Initialize
 11170 ;;		_power_on
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174     1567                     _SPI2_Initialize:	
 11175                           ;psect for function _SPI2_Initialize
 11176                           
 11177     1567                     l5377:	
 11178                           ;incstack = 0
 11179                           ; Regs used in _SPI2_Initialize: [wreg]
 11180                           
 11181                           
 11182                           ;mcc_generated_files/spi2.c: 66:     SSP2CLKPPS = 9;
 11183     1567  3009               	movlw	9
 11184     1568  003D               	movlb	29	; select bank29
 11185     1569  00C8               	movwf	72	;volatile
 11186                           
 11187                           ;mcc_generated_files/spi2.c: 67:     SSP2DATPPS = 10;
 11188     156A  300A               	movlw	10
 11189     156B  00C9               	movwf	73	;volatile
 11190                           
 11191                           ;mcc_generated_files/spi2.c: 68:     RB1PPS = 22;
 11192     156C  3016               	movlw	22
 11193     156D  003E               	movlb	30	; select bank30
 11194     156E  0099               	movwf	25	;volatile
 11195                           
 11196                           ;mcc_generated_files/spi2.c: 69:     RB3PPS = 23;
 11197     156F  3017               	movlw	23
 11198     1570  009B               	movwf	27	;volatile
 11199                           
 11200                           ;mcc_generated_files/spi2.c: 71:     SSP2STAT = 0x40;
 11201     1571  3040               	movlw	64
 11202     1572  0023               	movlb	3	; select bank3
 11203     1573  0099               	movwf	25	;volatile
 11204                           
 11205                           ;mcc_generated_files/spi2.c: 72:     SSP2CON1 = 0x01;
 11206     1574  3001               	movlw	1
 11207     1575  009A               	movwf	26	;volatile
 11208                           
 11209                           ;mcc_generated_files/spi2.c: 73:     SSP2ADD = 0x01;
 11210     1576  3001               	movlw	1
 11211     1577  0097               	movwf	23	;volatile
 11212     1578                     l5379:
 11213                           
 11214                           ;mcc_generated_files/spi2.c: 74:     TRISBbits.TRISB1 = 0;
 11215     1578  0020               	movlb	0	; select bank0
 11216     1579  1092               	bcf	18,1	;volatile
 11217     157A                     l5381:
 11218                           
 11219                           ;mcc_generated_files/spi2.c: 75:     SSP2CON1bits.SSPEN = 0;
 11220     157A  0023               	movlb	3	; select bank3
 11221     157B  129A               	bcf	26,5	;volatile
 11222     157C                     l858:
 11223     157C  0008               	return
 11224     157D                     __end_of_SPI2_Initialize:
 11225                           
 11226                           	psect	text21
 11227     1422                     __ptext21:	
 11228 ;; *************** function _PMD_Initialize *****************
 11229 ;; Defined at:
 11230 ;;		line 74 in file "mcc_generated_files/mcc.c"
 11231 ;; Parameters:    Size  Location     Type
 11232 ;;		None
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;		None
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      void 
 11237 ;; Registers used:
 11238 ;;		status,2
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;Total ram usage:        0 bytes
 11249 ;; Hardware stack levels used: 1
 11250 ;; This function calls:
 11251 ;;		Nothing
 11252 ;; This function is called by:
 11253 ;;		_SYSTEM_Initialize
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257     1422                     _PMD_Initialize:	
 11258                           ;psect for function _PMD_Initialize
 11259                           
 11260     1422                     l5367:	
 11261                           ;incstack = 0
 11262                           ; Regs used in _PMD_Initialize: [status,2]
 11263                           
 11264                           
 11265                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
 11266     1422  002F               	movlb	15	; select bank15
 11267     1423  0196               	clrf	22	;volatile
 11268                           
 11269                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
 11270     1424  0197               	clrf	23	;volatile
 11271                           
 11272                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
 11273     1425  0198               	clrf	24	;volatile
 11274                           
 11275                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
 11276     1426  0199               	clrf	25	;volatile
 11277                           
 11278                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
 11279     1427  019A               	clrf	26	;volatile
 11280                           
 11281                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
 11282     1428  019B               	clrf	27	;volatile
 11283     1429                     l338:
 11284     1429  0008               	return
 11285     142A                     __end_of_PMD_Initialize:
 11286                           
 11287                           	psect	text22
 11288     090F                     __ptext22:	
 11289 ;; *************** function _PIN_MANAGER_Initialize *****************
 11290 ;; Defined at:
 11291 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;		None
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;		None
 11296 ;; Return value:  Size  Location     Type
 11297 ;;                  1    wreg      void 
 11298 ;; Registers used:
 11299 ;;		wreg, status,2
 11300 ;; Tracked objects:
 11301 ;;		On entry : 0/0
 11302 ;;		On exit  : 0/0
 11303 ;;		Unchanged: 0/0
 11304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11309 ;;Total ram usage:        0 bytes
 11310 ;; Hardware stack levels used: 1
 11311 ;; This function calls:
 11312 ;;		Nothing
 11313 ;; This function is called by:
 11314 ;;		_SYSTEM_Initialize
 11315 ;; This function uses a non-reentrant model
 11316 ;;
 11317                           
 11318     090F                     _PIN_MANAGER_Initialize:	
 11319                           ;psect for function _PIN_MANAGER_Initialize
 11320                           
 11321     090F                     l5323:	
 11322                           ;incstack = 0
 11323                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11324                           
 11325                           
 11326                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 11327     090F  0020               	movlb	0	; select bank0
 11328     0910  0196               	clrf	22	;volatile
 11329                           
 11330                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 11331     0911  0197               	clrf	23	;volatile
 11332     0912                     l5325:
 11333                           
 11334                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x01;
 11335     0912  3001               	movlw	1
 11336     0913  0098               	movwf	24	;volatile
 11337     0914                     l5327:
 11338                           
 11339                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xCB;
 11340     0914  30CB               	movlw	203
 11341     0915  0091               	movwf	17	;volatile
 11342     0916                     l5329:
 11343                           
 11344                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xC4;
 11345     0916  30C4               	movlw	196
 11346     0917  0092               	movwf	18	;volatile
 11347     0918                     l5331:
 11348                           
 11349                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xD8;
 11350     0918  30D8               	movlw	216
 11351     0919  0093               	movwf	19	;volatile
 11352                           
 11353                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
 11354     091A  003E               	movlb	30	; select bank30
 11355     091B  01CE               	clrf	78	;volatile
 11356     091C                     l5333:
 11357                           
 11358                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xB9;
 11359     091C  30B9               	movlw	185
 11360     091D  00C3               	movwf	67	;volatile
 11361     091E                     l5335:
 11362                           
 11363                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x5E;
 11364     091E  305E               	movlw	94
 11365     091F  00B8               	movwf	56	;volatile
 11366                           
 11367                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 11368     0920  01E5               	clrf	101	;volatile
 11369                           
 11370                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 11371     0921  01C4               	clrf	68	;volatile
 11372                           
 11373                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 11374     0922  01B9               	clrf	57	;volatile
 11375                           
 11376                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
 11377     0923  01CF               	clrf	79	;volatile
 11378                           
 11379                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 11380     0924  01BA               	clrf	58	;volatile
 11381                           
 11382                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
 11383     0925  01C5               	clrf	69	;volatile
 11384                           
 11385                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 11386     0926  01D0               	clrf	80	;volatile
 11387     0927                     l5337:
 11388                           
 11389                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
 11390     0927  30FF               	movlw	255
 11391     0928  00BB               	movwf	59	;volatile
 11392     0929                     l5339:
 11393                           
 11394                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
 11395     0929  30FF               	movlw	255
 11396     092A  00C6               	movwf	70	;volatile
 11397     092B                     l5341:
 11398                           
 11399                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 11400     092B  30FF               	movlw	255
 11401     092C  00D1               	movwf	81	;volatile
 11402     092D                     l5343:
 11403                           
 11404                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
 11405     092D  30FF               	movlw	255
 11406     092E  00BC               	movwf	60	;volatile
 11407     092F                     l5345:
 11408                           
 11409                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
 11410     092F  30FF               	movlw	255
 11411     0930  00C7               	movwf	71	;volatile
 11412     0931                     l5347:
 11413                           
 11414                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 11415     0931  30FF               	movlw	255
 11416     0932  00D2               	movwf	82	;volatile
 11417     0933                     l5349:
 11418                           
 11419                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
 11420     0933  3008               	movlw	8
 11421     0934  00E8               	movwf	104	;volatile
 11422     0935                     l5351:
 11423                           
 11424                           ;mcc_generated_files/pin_manager.c: 115:     SSP2DATPPS = 0x0A;
 11425     0935  300A               	movlw	10
 11426     0936  003D               	movlb	29	; select bank29
 11427     0937  00C9               	movwf	73	;volatile
 11428     0938                     l5353:
 11429                           
 11430                           ;mcc_generated_files/pin_manager.c: 116:     SSP1CLKPPS = 0x13;
 11431     0938  3013               	movlw	19
 11432     0939  00C5               	movwf	69	;volatile
 11433     093A                     l5355:
 11434                           
 11435                           ;mcc_generated_files/pin_manager.c: 117:     RB1PPS = 0x16;
 11436     093A  3016               	movlw	22
 11437     093B  003E               	movlb	30	; select bank30
 11438     093C  0099               	movwf	25	;volatile
 11439     093D                     l5357:
 11440                           
 11441                           ;mcc_generated_files/pin_manager.c: 118:     RC3PPS = 0x14;
 11442     093D  3014               	movlw	20
 11443     093E  00A3               	movwf	35	;volatile
 11444     093F                     l5359:
 11445                           
 11446                           ;mcc_generated_files/pin_manager.c: 119:     RC4PPS = 0x15;
 11447     093F  3015               	movlw	21
 11448     0940  00A4               	movwf	36	;volatile
 11449     0941                     l5361:
 11450                           
 11451                           ;mcc_generated_files/pin_manager.c: 120:     RB3PPS = 0x17;
 11452     0941  3017               	movlw	23
 11453     0942  009B               	movwf	27	;volatile
 11454     0943                     l5363:
 11455                           
 11456                           ;mcc_generated_files/pin_manager.c: 121:     SSP1DATPPS = 0x14;
 11457     0943  3014               	movlw	20
 11458     0944  003D               	movlb	29	; select bank29
 11459     0945  00C6               	movwf	70	;volatile
 11460     0946                     l5365:
 11461                           
 11462                           ;mcc_generated_files/pin_manager.c: 122:     SSP2CLKPPS = 0x09;
 11463     0946  3009               	movlw	9
 11464     0947  00C8               	movwf	72	;volatile
 11465     0948                     l292:
 11466     0948  0008               	return
 11467     0949                     __end_of_PIN_MANAGER_Initialize:
 11468                           
 11469                           	psect	text23
 11470     1433                     __ptext23:	
 11471 ;; *************** function _OSCILLATOR_Initialize *****************
 11472 ;; Defined at:
 11473 ;;		line 60 in file "mcc_generated_files/mcc.c"
 11474 ;; Parameters:    Size  Location     Type
 11475 ;;		None
 11476 ;; Auto vars:     Size  Location     Type
 11477 ;;		None
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  1    wreg      void 
 11480 ;; Registers used:
 11481 ;;		wreg, status,2
 11482 ;; Tracked objects:
 11483 ;;		On entry : 0/0
 11484 ;;		On exit  : 0/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11491 ;;Total ram usage:        0 bytes
 11492 ;; Hardware stack levels used: 1
 11493 ;; This function calls:
 11494 ;;		Nothing
 11495 ;; This function is called by:
 11496 ;;		_SYSTEM_Initialize
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500     1433                     _OSCILLATOR_Initialize:	
 11501                           ;psect for function _OSCILLATOR_Initialize
 11502                           
 11503     1433                     l5383:	
 11504                           ;incstack = 0
 11505                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11506                           
 11507                           
 11508                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
 11509     1433  3062               	movlw	98
 11510     1434  0031               	movlb	17	; select bank17
 11511     1435  008D               	movwf	13	;volatile
 11512     1436                     l5385:
 11513                           
 11514                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
 11515     1436  018F               	clrf	15	;volatile
 11516     1437                     l5387:
 11517                           
 11518                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
 11519     1437  0191               	clrf	17	;volatile
 11520                           
 11521                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
 11522     1438  3002               	movlw	2
 11523     1439  0093               	movwf	19	;volatile
 11524     143A                     l5389:
 11525                           
 11526                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
 11527     143A  0192               	clrf	18	;volatile
 11528     143B                     l335:
 11529     143B  0008               	return
 11530     143C                     __end_of_OSCILLATOR_Initialize:
 11531                           
 11532                           	psect	text24
 11533     143C                     __ptext24:	
 11534 ;; *************** function _I2C1_Initialize *****************
 11535 ;; Defined at:
 11536 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;		None
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;		None
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, status,2
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11554 ;;Total ram usage:        0 bytes
 11555 ;; Hardware stack levels used: 1
 11556 ;; This function calls:
 11557 ;;		Nothing
 11558 ;; This function is called by:
 11559 ;;		_SYSTEM_Initialize
 11560 ;; This function uses a non-reentrant model
 11561 ;;
 11562                           
 11563     143C                     _I2C1_Initialize:	
 11564                           ;psect for function _I2C1_Initialize
 11565                           
 11566     143C                     l5369:	
 11567                           ;incstack = 0
 11568                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 11569                           
 11570                           
 11571                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 11572     143C  3080               	movlw	128
 11573     143D  0023               	movlb	3	; select bank3
 11574     143E  008F               	movwf	15	;volatile
 11575                           
 11576                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 11577     143F  3008               	movlw	8
 11578     1440  0090               	movwf	16	;volatile
 11579     1441                     l5371:
 11580                           
 11581                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 11582     1441  0191               	clrf	17	;volatile
 11583     1442                     l5373:
 11584                           
 11585                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x18;
 11586     1442  3018               	movlw	24
 11587     1443  008D               	movwf	13	;volatile
 11588     1444                     l5375:
 11589                           
 11590                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 11591     1444  1290               	bcf	16,5	;volatile
 11592     1445                     l443:
 11593     1445  0008               	return
 11594     1446                     __end_of_I2C1_Initialize:
 11595                           
 11596                           	psect	text25
 11597     160F                     __ptext25:	
 11598 ;; *************** function _ADCC_Initialize *****************
 11599 ;; Defined at:
 11600 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;		None
 11603 ;; Auto vars:     Size  Location     Type
 11604 ;;		None
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  1    wreg      void 
 11607 ;; Registers used:
 11608 ;;		wreg, status,2
 11609 ;; Tracked objects:
 11610 ;;		On entry : 0/0
 11611 ;;		On exit  : 0/0
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;Total ram usage:        0 bytes
 11619 ;; Hardware stack levels used: 1
 11620 ;; This function calls:
 11621 ;;		Nothing
 11622 ;; This function is called by:
 11623 ;;		_SYSTEM_Initialize
 11624 ;;		_power_on
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628     160F                     _ADCC_Initialize:	
 11629                           ;psect for function _ADCC_Initialize
 11630                           
 11631     160F                     l5391:	
 11632                           ;incstack = 0
 11633                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11634                           
 11635                           
 11636                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 11637     160F  0022               	movlb	2	; select bank2
 11638     1610  018E               	clrf	14	;volatile
 11639                           
 11640                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 11641     1611  018F               	clrf	15	;volatile
 11642                           
 11643                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 11644     1612  0190               	clrf	16	;volatile
 11645                           
 11646                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 11647     1613  0191               	clrf	17	;volatile
 11648                           
 11649                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 11650     1614  0192               	clrf	18	;volatile
 11651                           
 11652                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 11653     1615  0193               	clrf	19	;volatile
 11654                           
 11655                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 11656     1616  018D               	clrf	13	;volatile
 11657                           
 11658                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 11659     1617  0021               	movlb	1	; select bank1
 11660     1618  019E               	clrf	30	;volatile
 11661                           
 11662                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 11663     1619  019B               	clrf	27	;volatile
 11664                           
 11665                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 11666     161A  019C               	clrf	28	;volatile
 11667     161B                     l5393:
 11668                           
 11669                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x01;
 11670     161B  3001               	movlw	1
 11671     161C  0094               	movwf	20	;volatile
 11672     161D                     l5395:
 11673                           
 11674                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x02;
 11675     161D  3002               	movlw	2
 11676     161E  0095               	movwf	21	;volatile
 11677                           
 11678                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 11679     161F  0196               	clrf	22	;volatile
 11680                           
 11681                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 11682     1620  0197               	clrf	23	;volatile
 11683                           
 11684                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 11685     1621  019A               	clrf	26	;volatile
 11686                           
 11687                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 11688     1622  0199               	clrf	25	;volatile
 11689     1623                     l5397:
 11690                           
 11691                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x03;
 11692     1623  3003               	movlw	3
 11693     1624  0098               	movwf	24	;volatile
 11694     1625                     l5399:
 11695                           
 11696                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 11697     1625  3084               	movlw	132
 11698     1626  0093               	movwf	19	;volatile
 11699     1627                     l5401:
 11700                           
 11701                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0xFF;
 11702     1627  30FF               	movlw	255
 11703     1628  009D               	movwf	29	;volatile
 11704     1629                     l748:
 11705     1629  0008               	return
 11706     162A                     __end_of_ADCC_Initialize:
 11707                           
 11708                           	psect	text26
 11709     145C                     __ptext26:	
 11710 ;; *************** function _DATAEE_ReadByte *****************
 11711 ;; Defined at:
 11712 ;;		line 202 in file "mcc_generated_files/memory.c"
 11713 ;; Parameters:    Size  Location     Type
 11714 ;;  bAdd            2    0[COMMON] unsigned short 
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;		None
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  1    wreg      unsigned char 
 11719 ;; Registers used:
 11720 ;;		wreg, status,2
 11721 ;; Tracked objects:
 11722 ;;		On entry : 0/0
 11723 ;;		On exit  : 0/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11730 ;;Total ram usage:        2 bytes
 11731 ;; Hardware stack levels used: 1
 11732 ;; This function calls:
 11733 ;;		Nothing
 11734 ;; This function is called by:
 11735 ;;		_main
 11736 ;; This function uses a non-reentrant model
 11737 ;;
 11738                           
 11739     145C                     _DATAEE_ReadByte:	
 11740                           ;psect for function _DATAEE_ReadByte
 11741                           
 11742     145C                     l5989:	
 11743                           ;incstack = 0
 11744                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 11745                           
 11746                           
 11747                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 11748     145C  0871               	movf	DATAEE_ReadByte@bAdd+1,w
 11749     145D  0030               	movlb	16	; select bank16
 11750     145E  009B               	movwf	27	;volatile
 11751     145F                     l5991:
 11752                           
 11753                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 11754     145F  0870               	movf	DATAEE_ReadByte@bAdd,w
 11755     1460  009A               	movwf	26	;volatile
 11756     1461                     l5993:
 11757                           
 11758                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 11759     1461  171E               	bsf	30,6	;volsfr
 11760     1462                     l5995:
 11761                           
 11762                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 11763     1462  141E               	bsf	30,0	;volsfr
 11764     1463                     l5997:
 11765                           
 11766                           ;mcc_generated_files/memory.c: 208:     __nop();
 11767     1463  0000               	nop
 11768     1464                     l5999:
 11769                           
 11770                           ;mcc_generated_files/memory.c: 209:     __nop();
 11771     1464  0000               	nop
 11772     1465                     l6001:
 11773                           
 11774                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 11775     1465  0030               	movlb	16	; select bank16
 11776     1466  081C               	movf	28,w	;volatile
 11777     1467                     l962:
 11778     1467  0008               	return
 11779     1468                     __end_of_DATAEE_ReadByte:
 11780                           
 11781                           	psect	text27
 11782     005D                     __ptext27:	
 11783 ;; *************** function _CC8531_Polling_Data_Send *****************
 11784 ;; Defined at:
 11785 ;;		line 302 in file "CC8531_Control_spi.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;		None
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;  cmd_count       1   27[BANK0 ] unsigned char 
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  1    wreg      void 
 11792 ;; Registers used:
 11793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;Total ram usage:        2 bytes
 11804 ;; Hardware stack levels used: 1
 11805 ;; Hardware stack levels required when called: 9
 11806 ;; This function calls:
 11807 ;;		_DELAY_microseconds
 11808 ;;		_DELAY_milliseconds
 11809 ;;		_I2C1_Write1ByteRegister
 11810 ;;		_SPI2_Open
 11811 ;;		_SPI2_ReadByte
 11812 ;;		_SPI2_WriteByte
 11813 ;;		_power_off_sequence
 11814 ;; This function is called by:
 11815 ;;		_main
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819     005D                     _CC8531_Polling_Data_Send:	
 11820                           ;psect for function _CC8531_Polling_Data_Send
 11821                           
 11822     005D                     l6173:	
 11823                           ;incstack = 0
 11824                           ; Regs used in _CC8531_Polling_Data_Send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11825                           
 11826     005D                     l6175:
 11827                           
 11828                           ;CC8531_Control_spi.c: 304:     SPI2_Open(SPI2_DEFAULT);
 11829     005D  3001               	movlw	1
 11830     005E  3180  2009  3180   	fcall	_SPI2_Open
 11831     0061                     l6177:
 11832     0061  0020               	movlb	0	; select bank0
 11833     0062  1417               	bsf	23,0	;volatile
 11834     0063                     l6179:
 11835     0063  1017               	bcf	23,0	;volatile
 11836     0064                     l6181:
 11837                           
 11838                           ;CC8531_Control_spi.c: 309:     for(cmd_count = 0; cmd_count < 3; cmd_count++){
 11839     0064  01BB               	clrf	CC8531_Polling_Data_Send@cmd_count
 11840     0065                     l6187:
 11841                           
 11842                           ;CC8531_Control_spi.c: 310:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 11843     0065  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 11844     0066  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 11845     0067  0086               	movwf	6
 11846     0068  3001               	movlw	1	; select bank3/4
 11847     0069  0087               	movwf	7
 11848     006A  0801               	movf	1,w
 11849     006B  00F0               	movwf	SPI2_WriteByte@byte
 11850     006C  3193  23C0  3180   	fcall	_SPI2_WriteByte
 11851     006F                     l6189:
 11852                           
 11853                           ;CC8531_Control_spi.c: 311:         DELAY_microseconds(1);
 11854     006F  3001               	movlw	1
 11855     0070  00F0               	movwf	DELAY_microseconds@microseconds
 11856     0071  3000               	movlw	0
 11857     0072  00F1               	movwf	DELAY_microseconds@microseconds+1
 11858     0073  3196  2683  3180   	fcall	_DELAY_microseconds
 11859     0076                     l6191:
 11860                           
 11861                           ;CC8531_Control_spi.c: 312:     }
 11862     0076  3001               	movlw	1
 11863     0077  0020               	movlb	0	; select bank0
 11864     0078  00BA               	movwf	??_CC8531_Polling_Data_Send
 11865     0079  083A               	movf	??_CC8531_Polling_Data_Send,w
 11866     007A  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 11867     007B                     l6193:
 11868     007B  3003               	movlw	3
 11869     007C  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 11870     007D  1C03               	skipc
 11871     007E  2880               	goto	u2721
 11872     007F  2881               	goto	u2720
 11873     0080                     u2721:
 11874     0080  2865               	goto	l6187
 11875     0081                     u2720:
 11876     0081                     l1389:	
 11877                           ;CC8531_Control_spi.c: 313:     do { LATBbits.LATB0 = 1; } while(0);
 11878                           
 11879     0081  1417               	bsf	23,0	;volatile
 11880     0082                     l6195:
 11881                           
 11882                           ;CC8531_Control_spi.c: 315:     DELAY_microseconds(1);
 11883     0082  3001               	movlw	1
 11884     0083  00F0               	movwf	DELAY_microseconds@microseconds
 11885     0084  3000               	movlw	0
 11886     0085  00F1               	movwf	DELAY_microseconds@microseconds+1
 11887     0086  3196  2683  3180   	fcall	_DELAY_microseconds
 11888     0089                     l6197:
 11889     0089  0020               	movlb	0	; select bank0
 11890     008A  1017               	bcf	23,0	;volatile
 11891     008B                     l6199:
 11892                           
 11893                           ;CC8531_Control_spi.c: 317:     for(cmd_count = 3; cmd_count < 6; cmd_count++){
 11894     008B  3003               	movlw	3
 11895     008C  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 11896     008D                     l6205:
 11897                           
 11898                           ;CC8531_Control_spi.c: 318:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 11899     008D  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 11900     008E  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 11901     008F  0086               	movwf	6
 11902     0090  3001               	movlw	1	; select bank3/4
 11903     0091  0087               	movwf	7
 11904     0092  0801               	movf	1,w
 11905     0093  00F0               	movwf	SPI2_WriteByte@byte
 11906     0094  3193  23C0  3180   	fcall	_SPI2_WriteByte
 11907     0097                     l6207:
 11908                           
 11909                           ;CC8531_Control_spi.c: 319:         DELAY_microseconds(1);
 11910     0097  3001               	movlw	1
 11911     0098  00F0               	movwf	DELAY_microseconds@microseconds
 11912     0099  3000               	movlw	0
 11913     009A  00F1               	movwf	DELAY_microseconds@microseconds+1
 11914     009B  3196  2683  3180   	fcall	_DELAY_microseconds
 11915     009E                     l6209:
 11916                           
 11917                           ;CC8531_Control_spi.c: 320:     }
 11918     009E  3001               	movlw	1
 11919     009F  0020               	movlb	0	; select bank0
 11920     00A0  00BA               	movwf	??_CC8531_Polling_Data_Send
 11921     00A1  083A               	movf	??_CC8531_Polling_Data_Send,w
 11922     00A2  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 11923     00A3                     l6211:
 11924     00A3  3006               	movlw	6
 11925     00A4  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 11926     00A5  1C03               	skipc
 11927     00A6  28A8               	goto	u2731
 11928     00A7  28A9               	goto	u2730
 11929     00A8                     u2731:
 11930     00A8  288D               	goto	l6205
 11931     00A9                     u2730:
 11932     00A9                     l1395:	
 11933                           ;CC8531_Control_spi.c: 321:     do { LATBbits.LATB0 = 1; } while(0);
 11934                           
 11935     00A9  1417               	bsf	23,0	;volatile
 11936     00AA                     l6213:
 11937                           
 11938                           ;CC8531_Control_spi.c: 323:     DELAY_microseconds(1);
 11939     00AA  3001               	movlw	1
 11940     00AB  00F0               	movwf	DELAY_microseconds@microseconds
 11941     00AC  3000               	movlw	0
 11942     00AD  00F1               	movwf	DELAY_microseconds@microseconds+1
 11943     00AE  3196  2683  3180   	fcall	_DELAY_microseconds
 11944     00B1                     l6215:
 11945     00B1  0020               	movlb	0	; select bank0
 11946     00B2  1017               	bcf	23,0	;volatile
 11947     00B3                     l6217:
 11948                           
 11949                           ;CC8531_Control_spi.c: 325:     for(cmd_count = 6; cmd_count < 10; cmd_count++){
 11950     00B3  3006               	movlw	6
 11951     00B4  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 11952     00B5                     l6223:
 11953                           
 11954                           ;CC8531_Control_spi.c: 326:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 11955     00B5  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 11956     00B6  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 11957     00B7  0086               	movwf	6
 11958     00B8  3001               	movlw	1	; select bank3/4
 11959     00B9  0087               	movwf	7
 11960     00BA  0801               	movf	1,w
 11961     00BB  00F0               	movwf	SPI2_WriteByte@byte
 11962     00BC  3193  23C0  3180   	fcall	_SPI2_WriteByte
 11963     00BF                     l6225:
 11964                           
 11965                           ;CC8531_Control_spi.c: 327:         DELAY_microseconds(1);
 11966     00BF  3001               	movlw	1
 11967     00C0  00F0               	movwf	DELAY_microseconds@microseconds
 11968     00C1  3000               	movlw	0
 11969     00C2  00F1               	movwf	DELAY_microseconds@microseconds+1
 11970     00C3  3196  2683  3180   	fcall	_DELAY_microseconds
 11971     00C6                     l6227:
 11972                           
 11973                           ;CC8531_Control_spi.c: 328:     }
 11974     00C6  3001               	movlw	1
 11975     00C7  0020               	movlb	0	; select bank0
 11976     00C8  00BA               	movwf	??_CC8531_Polling_Data_Send
 11977     00C9  083A               	movf	??_CC8531_Polling_Data_Send,w
 11978     00CA  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 11979     00CB                     l6229:
 11980     00CB  300A               	movlw	10
 11981     00CC  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 11982     00CD  1C03               	skipc
 11983     00CE  28D0               	goto	u2741
 11984     00CF  28D1               	goto	u2740
 11985     00D0                     u2741:
 11986     00D0  28B5               	goto	l6223
 11987     00D1                     u2740:
 11988     00D1                     l1401:	
 11989                           ;CC8531_Control_spi.c: 329:     do { LATBbits.LATB0 = 1; } while(0);
 11990                           
 11991     00D1  1417               	bsf	23,0	;volatile
 11992     00D2                     l6231:
 11993                           
 11994                           ;CC8531_Control_spi.c: 331:     DELAY_microseconds(1);
 11995     00D2  3001               	movlw	1
 11996     00D3  00F0               	movwf	DELAY_microseconds@microseconds
 11997     00D4  3000               	movlw	0
 11998     00D5  00F1               	movwf	DELAY_microseconds@microseconds+1
 11999     00D6  3196  2683  3180   	fcall	_DELAY_microseconds
 12000     00D9                     l6233:
 12001     00D9  0020               	movlb	0	; select bank0
 12002     00DA  1017               	bcf	23,0	;volatile
 12003     00DB                     l6235:
 12004                           
 12005                           ;CC8531_Control_spi.c: 333:     for(cmd_count = 10; cmd_count < 13; cmd_count++){
 12006     00DB  300A               	movlw	10
 12007     00DC  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12008     00DD                     l6241:
 12009                           
 12010                           ;CC8531_Control_spi.c: 334:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12011     00DD  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12012     00DE  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12013     00DF  0086               	movwf	6
 12014     00E0  3001               	movlw	1	; select bank3/4
 12015     00E1  0087               	movwf	7
 12016     00E2  0801               	movf	1,w
 12017     00E3  00F0               	movwf	SPI2_WriteByte@byte
 12018     00E4  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12019     00E7                     l6243:
 12020                           
 12021                           ;CC8531_Control_spi.c: 335:         DELAY_microseconds(1);
 12022     00E7  3001               	movlw	1
 12023     00E8  00F0               	movwf	DELAY_microseconds@microseconds
 12024     00E9  3000               	movlw	0
 12025     00EA  00F1               	movwf	DELAY_microseconds@microseconds+1
 12026     00EB  3196  2683  3180   	fcall	_DELAY_microseconds
 12027     00EE                     l6245:
 12028                           
 12029                           ;CC8531_Control_spi.c: 336:     }
 12030     00EE  3001               	movlw	1
 12031     00EF  0020               	movlb	0	; select bank0
 12032     00F0  00BA               	movwf	??_CC8531_Polling_Data_Send
 12033     00F1  083A               	movf	??_CC8531_Polling_Data_Send,w
 12034     00F2  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12035     00F3                     l6247:
 12036     00F3  300D               	movlw	13
 12037     00F4  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12038     00F5  1C03               	skipc
 12039     00F6  28F8               	goto	u2751
 12040     00F7  28F9               	goto	u2750
 12041     00F8                     u2751:
 12042     00F8  28DD               	goto	l6241
 12043     00F9                     u2750:
 12044     00F9                     l1407:	
 12045                           ;CC8531_Control_spi.c: 337:     do { LATBbits.LATB0 = 1; } while(0);
 12046                           
 12047     00F9  1417               	bsf	23,0	;volatile
 12048     00FA                     l6249:
 12049                           
 12050                           ;CC8531_Control_spi.c: 339:     DELAY_microseconds(1);
 12051     00FA  3001               	movlw	1
 12052     00FB  00F0               	movwf	DELAY_microseconds@microseconds
 12053     00FC  3000               	movlw	0
 12054     00FD  00F1               	movwf	DELAY_microseconds@microseconds+1
 12055     00FE  3196  2683  3180   	fcall	_DELAY_microseconds
 12056     0101                     l6251:
 12057     0101  0020               	movlb	0	; select bank0
 12058     0102  1017               	bcf	23,0	;volatile
 12059     0103                     l6253:
 12060                           
 12061                           ;CC8531_Control_spi.c: 341:     for(cmd_count = 13; cmd_count < 16; cmd_count++){
 12062     0103  300D               	movlw	13
 12063     0104  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12064     0105                     l6259:
 12065                           
 12066                           ;CC8531_Control_spi.c: 342:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12067     0105  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12068     0106  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12069     0107  0086               	movwf	6
 12070     0108  3001               	movlw	1	; select bank3/4
 12071     0109  0087               	movwf	7
 12072     010A  0801               	movf	1,w
 12073     010B  00F0               	movwf	SPI2_WriteByte@byte
 12074     010C  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12075     010F                     l6261:
 12076                           
 12077                           ;CC8531_Control_spi.c: 343:         DELAY_microseconds(1);
 12078     010F  3001               	movlw	1
 12079     0110  00F0               	movwf	DELAY_microseconds@microseconds
 12080     0111  3000               	movlw	0
 12081     0112  00F1               	movwf	DELAY_microseconds@microseconds+1
 12082     0113  3196  2683  3180   	fcall	_DELAY_microseconds
 12083     0116                     l6263:
 12084                           
 12085                           ;CC8531_Control_spi.c: 344:     }
 12086     0116  3001               	movlw	1
 12087     0117  0020               	movlb	0	; select bank0
 12088     0118  00BA               	movwf	??_CC8531_Polling_Data_Send
 12089     0119  083A               	movf	??_CC8531_Polling_Data_Send,w
 12090     011A  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12091     011B                     l6265:
 12092     011B  3010               	movlw	16
 12093     011C  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12094     011D  1C03               	skipc
 12095     011E  2920               	goto	u2761
 12096     011F  2921               	goto	u2760
 12097     0120                     u2761:
 12098     0120  2905               	goto	l6259
 12099     0121                     u2760:
 12100     0121                     l1413:	
 12101                           ;CC8531_Control_spi.c: 345:     do { LATBbits.LATB0 = 1; } while(0);
 12102                           
 12103     0121  1417               	bsf	23,0	;volatile
 12104     0122                     l6267:
 12105                           
 12106                           ;CC8531_Control_spi.c: 347:     DELAY_microseconds(1);
 12107     0122  3001               	movlw	1
 12108     0123  00F0               	movwf	DELAY_microseconds@microseconds
 12109     0124  3000               	movlw	0
 12110     0125  00F1               	movwf	DELAY_microseconds@microseconds+1
 12111     0126  3196  2683  3180   	fcall	_DELAY_microseconds
 12112     0129                     l6269:
 12113     0129  0020               	movlb	0	; select bank0
 12114     012A  1017               	bcf	23,0	;volatile
 12115     012B                     l6271:
 12116                           
 12117                           ;CC8531_Control_spi.c: 349:     for(cmd_count = 16; cmd_count < 20; cmd_count++){
 12118     012B  3010               	movlw	16
 12119     012C  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12120     012D                     l6277:
 12121                           
 12122                           ;CC8531_Control_spi.c: 350:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12123     012D  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12124     012E  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12125     012F  0086               	movwf	6
 12126     0130  3001               	movlw	1	; select bank3/4
 12127     0131  0087               	movwf	7
 12128     0132  0801               	movf	1,w
 12129     0133  00F0               	movwf	SPI2_WriteByte@byte
 12130     0134  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12131     0137                     l6279:
 12132                           
 12133                           ;CC8531_Control_spi.c: 351:         DELAY_microseconds(1);
 12134     0137  3001               	movlw	1
 12135     0138  00F0               	movwf	DELAY_microseconds@microseconds
 12136     0139  3000               	movlw	0
 12137     013A  00F1               	movwf	DELAY_microseconds@microseconds+1
 12138     013B  3196  2683  3180   	fcall	_DELAY_microseconds
 12139     013E                     l6281:
 12140                           
 12141                           ;CC8531_Control_spi.c: 352:     }
 12142     013E  3001               	movlw	1
 12143     013F  0020               	movlb	0	; select bank0
 12144     0140  00BA               	movwf	??_CC8531_Polling_Data_Send
 12145     0141  083A               	movf	??_CC8531_Polling_Data_Send,w
 12146     0142  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12147     0143                     l6283:
 12148     0143  3014               	movlw	20
 12149     0144  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12150     0145  1C03               	skipc
 12151     0146  2948               	goto	u2771
 12152     0147  2949               	goto	u2770
 12153     0148                     u2771:
 12154     0148  292D               	goto	l6277
 12155     0149                     u2770:
 12156     0149                     l1419:	
 12157                           ;CC8531_Control_spi.c: 353:     do { LATBbits.LATB0 = 1; } while(0);
 12158                           
 12159     0149  1417               	bsf	23,0	;volatile
 12160     014A                     l6285:
 12161                           
 12162                           ;CC8531_Control_spi.c: 355:     DELAY_microseconds(1);
 12163     014A  3001               	movlw	1
 12164     014B  00F0               	movwf	DELAY_microseconds@microseconds
 12165     014C  3000               	movlw	0
 12166     014D  00F1               	movwf	DELAY_microseconds@microseconds+1
 12167     014E  3196  2683  3180   	fcall	_DELAY_microseconds
 12168     0151                     l6287:
 12169     0151  0020               	movlb	0	; select bank0
 12170     0152  1017               	bcf	23,0	;volatile
 12171     0153                     l6289:
 12172                           
 12173                           ;CC8531_Control_spi.c: 357:     for(cmd_count = 20; cmd_count < 22; cmd_count++){
 12174     0153  3014               	movlw	20
 12175     0154  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12176     0155                     l6295:
 12177                           
 12178                           ;CC8531_Control_spi.c: 358:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12179     0155  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12180     0156  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12181     0157  0086               	movwf	6
 12182     0158  3001               	movlw	1	; select bank3/4
 12183     0159  0087               	movwf	7
 12184     015A  0801               	movf	1,w
 12185     015B  00F0               	movwf	SPI2_WriteByte@byte
 12186     015C  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12187     015F                     l6297:
 12188                           
 12189                           ;CC8531_Control_spi.c: 359:         DELAY_microseconds(1);
 12190     015F  3001               	movlw	1
 12191     0160  00F0               	movwf	DELAY_microseconds@microseconds
 12192     0161  3000               	movlw	0
 12193     0162  00F1               	movwf	DELAY_microseconds@microseconds+1
 12194     0163  3196  2683  3180   	fcall	_DELAY_microseconds
 12195     0166                     l6299:
 12196                           
 12197                           ;CC8531_Control_spi.c: 360:     }
 12198     0166  3001               	movlw	1
 12199     0167  0020               	movlb	0	; select bank0
 12200     0168  00BA               	movwf	??_CC8531_Polling_Data_Send
 12201     0169  083A               	movf	??_CC8531_Polling_Data_Send,w
 12202     016A  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12203     016B                     l6301:
 12204     016B  3016               	movlw	22
 12205     016C  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12206     016D  1C03               	skipc
 12207     016E  2970               	goto	u2781
 12208     016F  2971               	goto	u2780
 12209     0170                     u2781:
 12210     0170  2955               	goto	l6295
 12211     0171                     u2780:
 12212     0171                     l1425:	
 12213                           ;CC8531_Control_spi.c: 361:     do { LATBbits.LATB0 = 1; } while(0);
 12214                           
 12215     0171  1417               	bsf	23,0	;volatile
 12216     0172                     l6303:
 12217                           
 12218                           ;CC8531_Control_spi.c: 363:     DELAY_microseconds(1);
 12219     0172  3001               	movlw	1
 12220     0173  00F0               	movwf	DELAY_microseconds@microseconds
 12221     0174  3000               	movlw	0
 12222     0175  00F1               	movwf	DELAY_microseconds@microseconds+1
 12223     0176  3196  2683  3180   	fcall	_DELAY_microseconds
 12224     0179                     l6305:
 12225     0179  0020               	movlb	0	; select bank0
 12226     017A  1017               	bcf	23,0	;volatile
 12227     017B                     l6307:
 12228                           
 12229                           ;CC8531_Control_spi.c: 365:     for(cmd_count = 22; cmd_count < 40; cmd_count++){
 12230     017B  3016               	movlw	22
 12231     017C  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12232     017D                     l6313:
 12233                           
 12234                           ;CC8531_Control_spi.c: 366:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12235     017D  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12236     017E  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12237     017F  0086               	movwf	6
 12238     0180  3001               	movlw	1	; select bank3/4
 12239     0181  0087               	movwf	7
 12240     0182  0801               	movf	1,w
 12241     0183  00F0               	movwf	SPI2_WriteByte@byte
 12242     0184  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12243     0187                     l6315:
 12244                           
 12245                           ;CC8531_Control_spi.c: 367:         if(cmd_count == 32){
 12246     0187  3020               	movlw	32
 12247     0188  0020               	movlb	0	; select bank0
 12248     0189  063B               	xorwf	CC8531_Polling_Data_Send@cmd_count,w
 12249     018A  1D03               	btfss	3,2
 12250     018B  298D               	goto	u2791
 12251     018C  298E               	goto	u2790
 12252     018D                     u2791:
 12253     018D  29E5               	goto	l6339
 12254     018E                     u2790:
 12255     018E                     l6317:
 12256                           
 12257                           ;CC8531_Control_spi.c: 368:             DELAY_microseconds(1);
 12258     018E  3001               	movlw	1
 12259     018F  00F0               	movwf	DELAY_microseconds@microseconds
 12260     0190  3000               	movlw	0
 12261     0191  00F1               	movwf	DELAY_microseconds@microseconds+1
 12262     0192  3196  2683  3180   	fcall	_DELAY_microseconds
 12263     0195                     l6319:
 12264                           
 12265                           ;CC8531_Control_spi.c: 369:             streaming_off_flag = SPI2_ReadByte();
 12266     0195  3193  23B2  3180   	fcall	_SPI2_ReadByte
 12267     0198  0020               	movlb	0	; select bank0
 12268     0199  00E3               	movwf	_streaming_off_flag
 12269     019A                     l6321:
 12270                           
 12271                           ;CC8531_Control_spi.c: 370:             if(streaming_off_flag == 0x08){
 12272     019A  3008               	movlw	8
 12273     019B  0663               	xorwf	_streaming_off_flag,w
 12274     019C  1D03               	btfss	3,2
 12275     019D  299F               	goto	u2801
 12276     019E  29A0               	goto	u2800
 12277     019F                     u2801:
 12278     019F  29E5               	goto	l6339
 12279     01A0                     u2800:
 12280     01A0                     l6323:
 12281                           
 12282                           ;CC8531_Control_spi.c: 373:                 DELAY_milliseconds(1000);
 12283     01A0  30E8               	movlw	232
 12284     01A1  00F0               	movwf	DELAY_milliseconds@milliseconds
 12285     01A2  3003               	movlw	3
 12286     01A3  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 12287     01A4  3195  2542  3180   	fcall	_DELAY_milliseconds
 12288     01A7                     l6325:
 12289                           
 12290                           ;CC8531_Control_spi.c: 374:                 I2C1_Write1ByteRegister( 0x18, 0x00, 0x00 );
 12291     01A7  0020               	movlb	0	; select bank0
 12292     01A8  01A0               	clrf	I2C1_Write1ByteRegister@reg
 12293     01A9  01A1               	clrf	I2C1_Write1ByteRegister@data
 12294     01AA  3018               	movlw	24
 12295     01AB  3197  279F  3180   	fcall	_I2C1_Write1ByteRegister
 12296     01AE                     l6327:
 12297                           
 12298                           ;CC8531_Control_spi.c: 375:                 DELAY_milliseconds(1);
 12299     01AE  3001               	movlw	1
 12300     01AF  00F0               	movwf	DELAY_milliseconds@milliseconds
 12301     01B0  3000               	movlw	0
 12302     01B1  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 12303     01B2  3195  2542  3180   	fcall	_DELAY_milliseconds
 12304                           
 12305                           ;CC8531_Control_spi.c: 376:                 I2C1_Write1ByteRegister( 0x18, 0x40, 0x0c );
 12306     01B5  3040               	movlw	64
 12307     01B6  0020               	movlb	0	; select bank0
 12308     01B7  00A0               	movwf	I2C1_Write1ByteRegister@reg
 12309     01B8  300C               	movlw	12
 12310     01B9  00A1               	movwf	I2C1_Write1ByteRegister@data
 12311     01BA  3018               	movlw	24
 12312     01BB  3197  279F  3180   	fcall	_I2C1_Write1ByteRegister
 12313     01BE                     l6329:
 12314                           
 12315                           ;CC8531_Control_spi.c: 377:                 DELAY_milliseconds(1000);
 12316     01BE  30E8               	movlw	232
 12317     01BF  00F0               	movwf	DELAY_milliseconds@milliseconds
 12318     01C0  3003               	movlw	3
 12319     01C1  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 12320     01C2  3195  2542  3180   	fcall	_DELAY_milliseconds
 12321     01C5                     l6331:
 12322                           
 12323                           ;CC8531_Control_spi.c: 378:                 I2C1_Write1ByteRegister( 0x18, 0x00, 0x00 );
 12324     01C5  0020               	movlb	0	; select bank0
 12325     01C6  01A0               	clrf	I2C1_Write1ByteRegister@reg
 12326     01C7  01A1               	clrf	I2C1_Write1ByteRegister@data
 12327     01C8  3018               	movlw	24
 12328     01C9  3197  279F  3180   	fcall	_I2C1_Write1ByteRegister
 12329                           
 12330                           ;CC8531_Control_spi.c: 379:                 DELAY_milliseconds(1);
 12331     01CC  3001               	movlw	1
 12332     01CD  00F0               	movwf	DELAY_milliseconds@milliseconds
 12333     01CE  3000               	movlw	0
 12334     01CF  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 12335     01D0  3195  2542  3180   	fcall	_DELAY_milliseconds
 12336     01D3                     l6333:
 12337                           
 12338                           ;CC8531_Control_spi.c: 380:                 I2C1_Write1ByteRegister( 0x18, 0x40, 0x00 );
 12339     01D3  3040               	movlw	64
 12340     01D4  0020               	movlb	0	; select bank0
 12341     01D5  00A0               	movwf	I2C1_Write1ByteRegister@reg
 12342     01D6  01A1               	clrf	I2C1_Write1ByteRegister@data
 12343     01D7  3018               	movlw	24
 12344     01D8  3197  279F  3180   	fcall	_I2C1_Write1ByteRegister
 12345     01DB                     l6335:
 12346                           
 12347                           ;CC8531_Control_spi.c: 381:                 DELAY_milliseconds(1);
 12348     01DB  3001               	movlw	1
 12349     01DC  00F0               	movwf	DELAY_milliseconds@milliseconds
 12350     01DD  3000               	movlw	0
 12351     01DE  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 12352     01DF  3195  2542  3180   	fcall	_DELAY_milliseconds
 12353     01E2                     l6337:
 12354                           
 12355                           ;CC8531_Control_spi.c: 382:                 power_off_sequence();
 12356     01E2  318A  2204  3180   	fcall	_power_off_sequence
 12357     01E5                     l6339:
 12358                           
 12359                           ;CC8531_Control_spi.c: 393:         DELAY_microseconds(1);
 12360     01E5  3001               	movlw	1
 12361     01E6  00F0               	movwf	DELAY_microseconds@microseconds
 12362     01E7  3000               	movlw	0
 12363     01E8  00F1               	movwf	DELAY_microseconds@microseconds+1
 12364     01E9  3196  2683  3180   	fcall	_DELAY_microseconds
 12365     01EC                     l6341:
 12366                           
 12367                           ;CC8531_Control_spi.c: 394:     }
 12368     01EC  3001               	movlw	1
 12369     01ED  0020               	movlb	0	; select bank0
 12370     01EE  00BA               	movwf	??_CC8531_Polling_Data_Send
 12371     01EF  083A               	movf	??_CC8531_Polling_Data_Send,w
 12372     01F0  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12373     01F1                     l6343:
 12374     01F1  3028               	movlw	40
 12375     01F2  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12376     01F3  1C03               	skipc
 12377     01F4  29F6               	goto	u2811
 12378     01F5  29F7               	goto	u2810
 12379     01F6                     u2811:
 12380     01F6  297D               	goto	l6313
 12381     01F7                     u2810:
 12382     01F7                     l1433:	
 12383                           ;CC8531_Control_spi.c: 395:     do { LATBbits.LATB0 = 1; } while(0);
 12384                           
 12385     01F7  1417               	bsf	23,0	;volatile
 12386     01F8                     l6345:
 12387                           
 12388                           ;CC8531_Control_spi.c: 397:     DELAY_microseconds(1);
 12389     01F8  3001               	movlw	1
 12390     01F9  00F0               	movwf	DELAY_microseconds@microseconds
 12391     01FA  3000               	movlw	0
 12392     01FB  00F1               	movwf	DELAY_microseconds@microseconds+1
 12393     01FC  3196  2683  3180   	fcall	_DELAY_microseconds
 12394     01FF                     l6347:
 12395     01FF  0020               	movlb	0	; select bank0
 12396     0200  1017               	bcf	23,0	;volatile
 12397     0201                     l6349:
 12398                           
 12399                           ;CC8531_Control_spi.c: 399:     for(cmd_count = 40; cmd_count < 42; cmd_count++){
 12400     0201  3028               	movlw	40
 12401     0202  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12402     0203                     l6355:
 12403                           
 12404                           ;CC8531_Control_spi.c: 400:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12405     0203  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12406     0204  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12407     0205  0086               	movwf	6
 12408     0206  3001               	movlw	1	; select bank3/4
 12409     0207  0087               	movwf	7
 12410     0208  0801               	movf	1,w
 12411     0209  00F0               	movwf	SPI2_WriteByte@byte
 12412     020A  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12413     020D                     l6357:
 12414                           
 12415                           ;CC8531_Control_spi.c: 401:         DELAY_microseconds(1);
 12416     020D  3001               	movlw	1
 12417     020E  00F0               	movwf	DELAY_microseconds@microseconds
 12418     020F  3000               	movlw	0
 12419     0210  00F1               	movwf	DELAY_microseconds@microseconds+1
 12420     0211  3196  2683  3180   	fcall	_DELAY_microseconds
 12421     0214                     l6359:
 12422                           
 12423                           ;CC8531_Control_spi.c: 402:     }
 12424     0214  3001               	movlw	1
 12425     0215  0020               	movlb	0	; select bank0
 12426     0216  00BA               	movwf	??_CC8531_Polling_Data_Send
 12427     0217  083A               	movf	??_CC8531_Polling_Data_Send,w
 12428     0218  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12429     0219                     l6361:
 12430     0219  302A               	movlw	42
 12431     021A  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12432     021B  1C03               	skipc
 12433     021C  2A1E               	goto	u2821
 12434     021D  2A1F               	goto	u2820
 12435     021E                     u2821:
 12436     021E  2A03               	goto	l6355
 12437     021F                     u2820:
 12438     021F                     l1439:	
 12439                           ;CC8531_Control_spi.c: 403:     do { LATBbits.LATB0 = 1; } while(0);
 12440                           
 12441     021F  1417               	bsf	23,0	;volatile
 12442     0220                     l6363:
 12443                           
 12444                           ;CC8531_Control_spi.c: 405:     DELAY_microseconds(1);
 12445     0220  3001               	movlw	1
 12446     0221  00F0               	movwf	DELAY_microseconds@microseconds
 12447     0222  3000               	movlw	0
 12448     0223  00F1               	movwf	DELAY_microseconds@microseconds+1
 12449     0224  3196  2683  3180   	fcall	_DELAY_microseconds
 12450     0227                     l6365:
 12451     0227  0020               	movlb	0	; select bank0
 12452     0228  1017               	bcf	23,0	;volatile
 12453     0229                     l6367:
 12454                           
 12455                           ;CC8531_Control_spi.c: 407:     for(cmd_count = 42; cmd_count < 45; cmd_count++){
 12456     0229  302A               	movlw	42
 12457     022A  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12458     022B                     l6373:
 12459                           
 12460                           ;CC8531_Control_spi.c: 408:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12461     022B  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12462     022C  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12463     022D  0086               	movwf	6
 12464     022E  3001               	movlw	1	; select bank3/4
 12465     022F  0087               	movwf	7
 12466     0230  0801               	movf	1,w
 12467     0231  00F0               	movwf	SPI2_WriteByte@byte
 12468     0232  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12469     0235                     l6375:
 12470                           
 12471                           ;CC8531_Control_spi.c: 409:         DELAY_microseconds(1);
 12472     0235  3001               	movlw	1
 12473     0236  00F0               	movwf	DELAY_microseconds@microseconds
 12474     0237  3000               	movlw	0
 12475     0238  00F1               	movwf	DELAY_microseconds@microseconds+1
 12476     0239  3196  2683  3180   	fcall	_DELAY_microseconds
 12477     023C                     l6377:
 12478                           
 12479                           ;CC8531_Control_spi.c: 410:     }
 12480     023C  3001               	movlw	1
 12481     023D  0020               	movlb	0	; select bank0
 12482     023E  00BA               	movwf	??_CC8531_Polling_Data_Send
 12483     023F  083A               	movf	??_CC8531_Polling_Data_Send,w
 12484     0240  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12485     0241                     l6379:
 12486     0241  302D               	movlw	45
 12487     0242  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12488     0243  1C03               	skipc
 12489     0244  2A46               	goto	u2831
 12490     0245  2A47               	goto	u2830
 12491     0246                     u2831:
 12492     0246  2A2B               	goto	l6373
 12493     0247                     u2830:
 12494     0247                     l1445:	
 12495                           ;CC8531_Control_spi.c: 411:     do { LATBbits.LATB0 = 1; } while(0);
 12496                           
 12497     0247  1417               	bsf	23,0	;volatile
 12498     0248                     l6381:
 12499                           
 12500                           ;CC8531_Control_spi.c: 413:     DELAY_microseconds(1);
 12501     0248  3001               	movlw	1
 12502     0249  00F0               	movwf	DELAY_microseconds@microseconds
 12503     024A  3000               	movlw	0
 12504     024B  00F1               	movwf	DELAY_microseconds@microseconds+1
 12505     024C  3196  2683  3180   	fcall	_DELAY_microseconds
 12506     024F                     l6383:
 12507     024F  0020               	movlb	0	; select bank0
 12508     0250  1017               	bcf	23,0	;volatile
 12509     0251                     l6385:
 12510                           
 12511                           ;CC8531_Control_spi.c: 415:     for(cmd_count = 45; cmd_count < 48; cmd_count++){
 12512     0251  302D               	movlw	45
 12513     0252  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12514     0253                     l6391:
 12515                           
 12516                           ;CC8531_Control_spi.c: 416:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12517     0253  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12518     0254  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12519     0255  0086               	movwf	6
 12520     0256  3001               	movlw	1	; select bank3/4
 12521     0257  0087               	movwf	7
 12522     0258  0801               	movf	1,w
 12523     0259  00F0               	movwf	SPI2_WriteByte@byte
 12524     025A  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12525     025D                     l6393:
 12526                           
 12527                           ;CC8531_Control_spi.c: 417:         DELAY_microseconds(1);
 12528     025D  3001               	movlw	1
 12529     025E  00F0               	movwf	DELAY_microseconds@microseconds
 12530     025F  3000               	movlw	0
 12531     0260  00F1               	movwf	DELAY_microseconds@microseconds+1
 12532     0261  3196  2683  3180   	fcall	_DELAY_microseconds
 12533     0264                     l6395:
 12534                           
 12535                           ;CC8531_Control_spi.c: 418:     }
 12536     0264  3001               	movlw	1
 12537     0265  0020               	movlb	0	; select bank0
 12538     0266  00BA               	movwf	??_CC8531_Polling_Data_Send
 12539     0267  083A               	movf	??_CC8531_Polling_Data_Send,w
 12540     0268  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12541     0269                     l6397:
 12542     0269  3030               	movlw	48
 12543     026A  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12544     026B  1C03               	skipc
 12545     026C  2A6E               	goto	u2841
 12546     026D  2A6F               	goto	u2840
 12547     026E                     u2841:
 12548     026E  2A53               	goto	l6391
 12549     026F                     u2840:
 12550     026F                     l1451:	
 12551                           ;CC8531_Control_spi.c: 419:     do { LATBbits.LATB0 = 1; } while(0);
 12552                           
 12553     026F  1417               	bsf	23,0	;volatile
 12554     0270                     l6399:
 12555                           
 12556                           ;CC8531_Control_spi.c: 421:     DELAY_microseconds(1);
 12557     0270  3001               	movlw	1
 12558     0271  00F0               	movwf	DELAY_microseconds@microseconds
 12559     0272  3000               	movlw	0
 12560     0273  00F1               	movwf	DELAY_microseconds@microseconds+1
 12561     0274  3196  2683  3180   	fcall	_DELAY_microseconds
 12562     0277                     l6401:
 12563     0277  0020               	movlb	0	; select bank0
 12564     0278  1017               	bcf	23,0	;volatile
 12565     0279                     l6403:
 12566                           
 12567                           ;CC8531_Control_spi.c: 423:     for(cmd_count = 48; cmd_count < 52; cmd_count++){
 12568     0279  3030               	movlw	48
 12569     027A  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12570     027B                     l6409:
 12571                           
 12572                           ;CC8531_Control_spi.c: 424:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12573     027B  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12574     027C  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12575     027D  0086               	movwf	6
 12576     027E  3001               	movlw	1	; select bank3/4
 12577     027F  0087               	movwf	7
 12578     0280  0801               	movf	1,w
 12579     0281  00F0               	movwf	SPI2_WriteByte@byte
 12580     0282  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12581     0285                     l6411:
 12582                           
 12583                           ;CC8531_Control_spi.c: 425:         DELAY_microseconds(1);
 12584     0285  3001               	movlw	1
 12585     0286  00F0               	movwf	DELAY_microseconds@microseconds
 12586     0287  3000               	movlw	0
 12587     0288  00F1               	movwf	DELAY_microseconds@microseconds+1
 12588     0289  3196  2683  3180   	fcall	_DELAY_microseconds
 12589     028C                     l6413:
 12590                           
 12591                           ;CC8531_Control_spi.c: 426:     }
 12592     028C  3001               	movlw	1
 12593     028D  0020               	movlb	0	; select bank0
 12594     028E  00BA               	movwf	??_CC8531_Polling_Data_Send
 12595     028F  083A               	movf	??_CC8531_Polling_Data_Send,w
 12596     0290  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12597     0291                     l6415:
 12598     0291  3034               	movlw	52
 12599     0292  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12600     0293  1C03               	skipc
 12601     0294  2A96               	goto	u2851
 12602     0295  2A97               	goto	u2850
 12603     0296                     u2851:
 12604     0296  2A7B               	goto	l6409
 12605     0297                     u2850:
 12606     0297                     l1457:	
 12607                           ;CC8531_Control_spi.c: 427:     do { LATBbits.LATB0 = 1; } while(0);
 12608                           
 12609     0297  1417               	bsf	23,0	;volatile
 12610     0298                     l6417:
 12611                           
 12612                           ;CC8531_Control_spi.c: 429:     DELAY_microseconds(1);
 12613     0298  3001               	movlw	1
 12614     0299  00F0               	movwf	DELAY_microseconds@microseconds
 12615     029A  3000               	movlw	0
 12616     029B  00F1               	movwf	DELAY_microseconds@microseconds+1
 12617     029C  3196  2683  3180   	fcall	_DELAY_microseconds
 12618     029F                     l6419:
 12619     029F  0020               	movlb	0	; select bank0
 12620     02A0  1017               	bcf	23,0	;volatile
 12621     02A1                     l6421:
 12622                           
 12623                           ;CC8531_Control_spi.c: 431:     for(cmd_count = 52; cmd_count < 55; cmd_count++){
 12624     02A1  3034               	movlw	52
 12625     02A2  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12626     02A3                     l6427:
 12627                           
 12628                           ;CC8531_Control_spi.c: 432:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12629     02A3  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12630     02A4  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12631     02A5  0086               	movwf	6
 12632     02A6  3001               	movlw	1	; select bank3/4
 12633     02A7  0087               	movwf	7
 12634     02A8  0801               	movf	1,w
 12635     02A9  00F0               	movwf	SPI2_WriteByte@byte
 12636     02AA  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12637     02AD                     l6429:
 12638                           
 12639                           ;CC8531_Control_spi.c: 433:         DELAY_microseconds(1);
 12640     02AD  3001               	movlw	1
 12641     02AE  00F0               	movwf	DELAY_microseconds@microseconds
 12642     02AF  3000               	movlw	0
 12643     02B0  00F1               	movwf	DELAY_microseconds@microseconds+1
 12644     02B1  3196  2683  3180   	fcall	_DELAY_microseconds
 12645     02B4                     l6431:
 12646                           
 12647                           ;CC8531_Control_spi.c: 434:     }
 12648     02B4  3001               	movlw	1
 12649     02B5  0020               	movlb	0	; select bank0
 12650     02B6  00BA               	movwf	??_CC8531_Polling_Data_Send
 12651     02B7  083A               	movf	??_CC8531_Polling_Data_Send,w
 12652     02B8  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12653     02B9                     l6433:
 12654     02B9  3037               	movlw	55
 12655     02BA  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12656     02BB  1C03               	skipc
 12657     02BC  2ABE               	goto	u2861
 12658     02BD  2ABF               	goto	u2860
 12659     02BE                     u2861:
 12660     02BE  2AA3               	goto	l6427
 12661     02BF                     u2860:
 12662     02BF                     l1463:	
 12663                           ;CC8531_Control_spi.c: 435:     do { LATBbits.LATB0 = 1; } while(0);
 12664                           
 12665     02BF  1417               	bsf	23,0	;volatile
 12666     02C0                     l6435:
 12667                           
 12668                           ;CC8531_Control_spi.c: 437:     DELAY_microseconds(1);
 12669     02C0  3001               	movlw	1
 12670     02C1  00F0               	movwf	DELAY_microseconds@microseconds
 12671     02C2  3000               	movlw	0
 12672     02C3  00F1               	movwf	DELAY_microseconds@microseconds+1
 12673     02C4  3196  2683  3180   	fcall	_DELAY_microseconds
 12674     02C7                     l6437:
 12675     02C7  0020               	movlb	0	; select bank0
 12676     02C8  1017               	bcf	23,0	;volatile
 12677     02C9                     l6439:
 12678                           
 12679                           ;CC8531_Control_spi.c: 439:     for(cmd_count = 55; cmd_count < 58; cmd_count++){
 12680     02C9  3037               	movlw	55
 12681     02CA  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12682     02CB                     l6445:
 12683                           
 12684                           ;CC8531_Control_spi.c: 440:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12685     02CB  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12686     02CC  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12687     02CD  0086               	movwf	6
 12688     02CE  3001               	movlw	1	; select bank3/4
 12689     02CF  0087               	movwf	7
 12690     02D0  0801               	movf	1,w
 12691     02D1  00F0               	movwf	SPI2_WriteByte@byte
 12692     02D2  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12693     02D5                     l6447:
 12694                           
 12695                           ;CC8531_Control_spi.c: 441:         DELAY_microseconds(1);
 12696     02D5  3001               	movlw	1
 12697     02D6  00F0               	movwf	DELAY_microseconds@microseconds
 12698     02D7  3000               	movlw	0
 12699     02D8  00F1               	movwf	DELAY_microseconds@microseconds+1
 12700     02D9  3196  2683  3180   	fcall	_DELAY_microseconds
 12701     02DC                     l6449:
 12702                           
 12703                           ;CC8531_Control_spi.c: 442:     }
 12704     02DC  3001               	movlw	1
 12705     02DD  0020               	movlb	0	; select bank0
 12706     02DE  00BA               	movwf	??_CC8531_Polling_Data_Send
 12707     02DF  083A               	movf	??_CC8531_Polling_Data_Send,w
 12708     02E0  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12709     02E1                     l6451:
 12710     02E1  303A               	movlw	58
 12711     02E2  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12712     02E3  1C03               	skipc
 12713     02E4  2AE6               	goto	u2871
 12714     02E5  2AE7               	goto	u2870
 12715     02E6                     u2871:
 12716     02E6  2ACB               	goto	l6445
 12717     02E7                     u2870:
 12718     02E7                     l1469:	
 12719                           ;CC8531_Control_spi.c: 443:     do { LATBbits.LATB0 = 1; } while(0);
 12720                           
 12721     02E7  1417               	bsf	23,0	;volatile
 12722     02E8                     l6453:
 12723                           
 12724                           ;CC8531_Control_spi.c: 445:     DELAY_microseconds(1);
 12725     02E8  3001               	movlw	1
 12726     02E9  00F0               	movwf	DELAY_microseconds@microseconds
 12727     02EA  3000               	movlw	0
 12728     02EB  00F1               	movwf	DELAY_microseconds@microseconds+1
 12729     02EC  3196  2683  3180   	fcall	_DELAY_microseconds
 12730     02EF                     l6455:
 12731     02EF  0020               	movlb	0	; select bank0
 12732     02F0  1017               	bcf	23,0	;volatile
 12733     02F1                     l6457:
 12734                           
 12735                           ;CC8531_Control_spi.c: 447:     for(cmd_count = 58; cmd_count < 62; cmd_count++){
 12736     02F1  303A               	movlw	58
 12737     02F2  00BB               	movwf	CC8531_Polling_Data_Send@cmd_count
 12738     02F3                     l6463:
 12739                           
 12740                           ;CC8531_Control_spi.c: 448:         SPI2_WriteByte(cc8531_polling_data[cmd_count]);
 12741     02F3  083B               	movf	CC8531_Polling_Data_Send@cmd_count,w
 12742     02F4  3EA0               	addlw	(low (_cc8531_polling_data| (0+256)))& (0+255)
 12743     02F5  0086               	movwf	6
 12744     02F6  3001               	movlw	1	; select bank3/4
 12745     02F7  0087               	movwf	7
 12746     02F8  0801               	movf	1,w
 12747     02F9  00F0               	movwf	SPI2_WriteByte@byte
 12748     02FA  3193  23C0  3180   	fcall	_SPI2_WriteByte
 12749     02FD                     l6465:
 12750                           
 12751                           ;CC8531_Control_spi.c: 449:         DELAY_microseconds(1);
 12752     02FD  3001               	movlw	1
 12753     02FE  00F0               	movwf	DELAY_microseconds@microseconds
 12754     02FF  3000               	movlw	0
 12755     0300  00F1               	movwf	DELAY_microseconds@microseconds+1
 12756     0301  3196  2683  3180   	fcall	_DELAY_microseconds
 12757     0304                     l6467:
 12758                           
 12759                           ;CC8531_Control_spi.c: 450:     }
 12760     0304  3001               	movlw	1
 12761     0305  0020               	movlb	0	; select bank0
 12762     0306  00BA               	movwf	??_CC8531_Polling_Data_Send
 12763     0307  083A               	movf	??_CC8531_Polling_Data_Send,w
 12764     0308  07BB               	addwf	CC8531_Polling_Data_Send@cmd_count,f
 12765     0309                     l6469:
 12766     0309  303E               	movlw	62
 12767     030A  023B               	subwf	CC8531_Polling_Data_Send@cmd_count,w
 12768     030B  1C03               	skipc
 12769     030C  2B0E               	goto	u2881
 12770     030D  2B0F               	goto	u2880
 12771     030E                     u2881:
 12772     030E  2AF3               	goto	l6463
 12773     030F                     u2880:
 12774     030F                     l1475:	
 12775                           ;CC8531_Control_spi.c: 451:     do { LATBbits.LATB0 = 1; } while(0);
 12776                           
 12777     030F  1417               	bsf	23,0	;volatile
 12778     0310                     l1477:
 12779     0310  0008               	return
 12780     0311                     __end_of_CC8531_Polling_Data_Send:
 12781                           
 12782                           	psect	text28
 12783     0A04                     __ptext28:	
 12784 ;; *************** function _power_off_sequence *****************
 12785 ;; Defined at:
 12786 ;;		line 405 in file "main.c"
 12787 ;; Parameters:    Size  Location     Type
 12788 ;;		None
 12789 ;; Auto vars:     Size  Location     Type
 12790 ;;		None
 12791 ;; Return value:  Size  Location     Type
 12792 ;;                  1    wreg      void 
 12793 ;; Registers used:
 12794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12795 ;; Tracked objects:
 12796 ;;		On entry : 0/0
 12797 ;;		On exit  : 0/0
 12798 ;;		Unchanged: 0/0
 12799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12804 ;;Total ram usage:        0 bytes
 12805 ;; Hardware stack levels used: 1
 12806 ;; Hardware stack levels required when called: 3
 12807 ;; This function calls:
 12808 ;;		_DATAEE_WriteByte
 12809 ;;		_DELAY_milliseconds
 12810 ;;		_led_control
 12811 ;;		_power_off_buzzer
 12812 ;; This function is called by:
 12813 ;;		_charge_display
 12814 ;;		_power_off
 12815 ;;		_CC8531_Init_Data_Send
 12816 ;;		_CC8531_Polling_Data_Send
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820     0A04                     _power_off_sequence:	
 12821                           ;psect for function _power_off_sequence
 12822                           
 12823     0A04                     l5279:	
 12824                           ;incstack = 0
 12825                           ; Regs used in _power_off_sequence: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12826                           
 12827                           
 12828                           ;main.c: 406:     DATAEE_WriteByte(0xF000, volume_count);
 12829     0A04  3000               	movlw	0
 12830     0A05  00F0               	movwf	DATAEE_WriteByte@bAdd
 12831     0A06  30F0               	movlw	240
 12832     0A07  00F1               	movwf	DATAEE_WriteByte@bAdd+1
 12833     0A08  0020               	movlb	0	; select bank0
 12834     0A09  0869               	movf	_volume_count,w
 12835     0A0A  00F2               	movwf	DATAEE_WriteByte@bData
 12836     0A0B  3196  2646  318A   	fcall	_DATAEE_WriteByte
 12837                           
 12838                           ;main.c: 407:     power_off_buzzer();
 12839     0A0E  3197  27CF  318A   	fcall	_power_off_buzzer
 12840     0A11                     l5281:
 12841                           
 12842                           ;main.c: 408:     led_control(RED_LED_ON);
 12843     0A11  3000               	movlw	0
 12844     0A12  3197  2744  318A   	fcall	_led_control
 12845     0A15                     l5283:
 12846                           
 12847                           ;main.c: 409:     DELAY_milliseconds(400);
 12848     0A15  3090               	movlw	144
 12849     0A16  00F0               	movwf	DELAY_milliseconds@milliseconds
 12850     0A17  3001               	movlw	1
 12851     0A18  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 12852     0A19  3195  2542  318A   	fcall	_DELAY_milliseconds
 12853                           
 12854                           ;main.c: 410:     led_control(LED_OFF);
 12855     0A1C  3003               	movlw	3
 12856     0A1D  3197  2744  318A   	fcall	_led_control
 12857     0A20                     l5285:
 12858                           
 12859                           ;main.c: 411:     DELAY_milliseconds(400);
 12860     0A20  3090               	movlw	144
 12861     0A21  00F0               	movwf	DELAY_milliseconds@milliseconds
 12862     0A22  3001               	movlw	1
 12863     0A23  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 12864     0A24  3195  2542  318A   	fcall	_DELAY_milliseconds
 12865     0A27                     l5287:
 12866                           
 12867                           ;main.c: 412:     led_control(RED_LED_ON);
 12868     0A27  3000               	movlw	0
 12869     0A28  3197  2744  318A   	fcall	_led_control
 12870                           
 12871                           ;main.c: 413:     DELAY_milliseconds(400);
 12872     0A2B  3090               	movlw	144
 12873     0A2C  00F0               	movwf	DELAY_milliseconds@milliseconds
 12874     0A2D  3001               	movlw	1
 12875     0A2E  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 12876     0A2F  3195  2542  318A   	fcall	_DELAY_milliseconds
 12877     0A32                     l5289:
 12878                           
 12879                           ;main.c: 414:     led_control(LED_OFF);
 12880     0A32  3003               	movlw	3
 12881     0A33  3197  2744  318A   	fcall	_led_control
 12882     0A36                     l5291:
 12883                           
 12884                           ;main.c: 415:     DELAY_milliseconds(400);
 12885     0A36  3090               	movlw	144
 12886     0A37  00F0               	movwf	DELAY_milliseconds@milliseconds
 12887     0A38  3001               	movlw	1
 12888     0A39  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 12889     0A3A  3195  2542  318A   	fcall	_DELAY_milliseconds
 12890                           
 12891                           ;main.c: 416:     led_control(RED_LED_ON);
 12892     0A3D  3000               	movlw	0
 12893     0A3E  3197  2744  318A   	fcall	_led_control
 12894     0A41                     l5293:
 12895                           
 12896                           ;main.c: 417:     DELAY_milliseconds(400);
 12897     0A41  3090               	movlw	144
 12898     0A42  00F0               	movwf	DELAY_milliseconds@milliseconds
 12899     0A43  3001               	movlw	1
 12900     0A44  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 12901     0A45  3195  2542  318A   	fcall	_DELAY_milliseconds
 12902     0A48                     l5295:
 12903                           
 12904                           ;main.c: 418:     led_control(LED_OFF);
 12905     0A48  3003               	movlw	3
 12906     0A49  3197  2744  318A   	fcall	_led_control
 12907     0A4C                     l5297:
 12908     0A4C  0020               	movlb	0	; select bank0
 12909     0A4D  1116               	bcf	22,2	;volatile
 12910     0A4E                     l1190:
 12911     0A4E  0008               	return
 12912     0A4F                     __end_of_power_off_sequence:
 12913                           
 12914                           	psect	text29
 12915     17CF                     __ptext29:	
 12916 ;; *************** function _power_off_buzzer *****************
 12917 ;; Defined at:
 12918 ;;		line 300 in file "main.c"
 12919 ;; Parameters:    Size  Location     Type
 12920 ;;		None
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;		None
 12923 ;; Return value:  Size  Location     Type
 12924 ;;                  1    wreg      void 
 12925 ;; Registers used:
 12926 ;;		wreg, status,2, status,0, pclath, cstack
 12927 ;; Tracked objects:
 12928 ;;		On entry : 0/0
 12929 ;;		On exit  : 0/0
 12930 ;;		Unchanged: 0/0
 12931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12936 ;;Total ram usage:        0 bytes
 12937 ;; Hardware stack levels used: 1
 12938 ;; Hardware stack levels required when called: 2
 12939 ;; This function calls:
 12940 ;;		_beep
 12941 ;; This function is called by:
 12942 ;;		_power_off_sequence
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           
 12946     17CF                     _power_off_buzzer:	
 12947                           ;psect for function _power_off_buzzer
 12948                           
 12949     17CF                     l5225:	
 12950                           ;incstack = 0
 12951                           ; Regs used in _power_off_buzzer: [wreg+status,2+status,0+pclath+cstack]
 12952                           
 12953                           
 12954                           ;main.c: 302:  beep( 554, 500);
 12955     17CF  302A               	movlw	42
 12956     17D0  0020               	movlb	0	; select bank0
 12957     17D1  00A7               	movwf	beep@note
 12958     17D2  3002               	movlw	2
 12959     17D3  00A8               	movwf	beep@note+1
 12960     17D4  30F4               	movlw	244
 12961     17D5  00A9               	movwf	beep@duration
 12962     17D6  3001               	movlw	1
 12963     17D7  00AA               	movwf	beep@duration+1
 12964     17D8  318C  247B  3197   	fcall	_beep
 12965                           
 12966                           ;main.c: 303:  beep( 415, 500);
 12967     17DB  309F               	movlw	159
 12968     17DC  0020               	movlb	0	; select bank0
 12969     17DD  00A7               	movwf	beep@note
 12970     17DE  3001               	movlw	1
 12971     17DF  00A8               	movwf	beep@note+1
 12972     17E0  30F4               	movlw	244
 12973     17E1  00A9               	movwf	beep@duration
 12974     17E2  3001               	movlw	1
 12975     17E3  00AA               	movwf	beep@duration+1
 12976     17E4  318C  247B  3197   	fcall	_beep
 12977                           
 12978                           ;main.c: 304:     beep( 349, 500);
 12979     17E7  305D               	movlw	93
 12980     17E8  0020               	movlb	0	; select bank0
 12981     17E9  00A7               	movwf	beep@note
 12982     17EA  3001               	movlw	1
 12983     17EB  00A8               	movwf	beep@note+1
 12984     17EC  30F4               	movlw	244
 12985     17ED  00A9               	movwf	beep@duration
 12986     17EE  3001               	movlw	1
 12987     17EF  00AA               	movwf	beep@duration+1
 12988     17F0  318C  247B  3197   	fcall	_beep
 12989                           
 12990                           ;main.c: 305:     beep( 277, 500);
 12991     17F3  3015               	movlw	21
 12992     17F4  0020               	movlb	0	; select bank0
 12993     17F5  00A7               	movwf	beep@note
 12994     17F6  3001               	movlw	1
 12995     17F7  00A8               	movwf	beep@note+1
 12996     17F8  30F4               	movlw	244
 12997     17F9  00A9               	movwf	beep@duration
 12998     17FA  3001               	movlw	1
 12999     17FB  00AA               	movwf	beep@duration+1
 13000     17FC  318C  247B  3197   	fcall	_beep
 13001     17FF                     l1132:
 13002     17FF  0008               	return
 13003     1800                     __end_of_power_off_buzzer:
 13004                           
 13005                           	psect	text30
 13006     0C7B                     __ptext30:	
 13007 ;; *************** function _beep *****************
 13008 ;; Defined at:
 13009 ;;		line 261 in file "main.c"
 13010 ;; Parameters:    Size  Location     Type
 13011 ;;  note            2    7[BANK0 ] unsigned int 
 13012 ;;  duration        2    9[BANK0 ] unsigned int 
 13013 ;; Auto vars:     Size  Location     Type
 13014 ;;  beepDelay       4   22[BANK0 ] long 
 13015 ;;  time            4   16[BANK0 ] long 
 13016 ;;  i               2   20[BANK0 ] int 
 13017 ;; Return value:  Size  Location     Type
 13018 ;;                  1    wreg      void 
 13019 ;; Registers used:
 13020 ;;		wreg, status,2, status,0, pclath, cstack
 13021 ;; Tracked objects:
 13022 ;;		On entry : 0/0
 13023 ;;		On exit  : 0/0
 13024 ;;		Unchanged: 0/0
 13025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13026 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13029 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13030 ;;Total ram usage:       19 bytes
 13031 ;; Hardware stack levels used: 1
 13032 ;; Hardware stack levels required when called: 1
 13033 ;; This function calls:
 13034 ;;		_DELAY_microseconds
 13035 ;;		_DELAY_milliseconds
 13036 ;;		___aldiv
 13037 ;;		___wmul
 13038 ;; This function is called by:
 13039 ;;		_power_on_buzzer
 13040 ;;		_power_off_buzzer
 13041 ;;		_button_push_play
 13042 ;; This function uses a non-reentrant model
 13043 ;;
 13044                           
 13045     0C7B                     _beep:	
 13046                           ;psect for function _beep
 13047                           
 13048     0C7B                     l5149:	
 13049                           ;incstack = 0
 13050                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
 13051                           
 13052                           
 13053                           ;main.c: 261: void beep(unsigned int note, unsigned int duration);main.c: 262: {;main.c:
      +                           264:  long beepDelay = (long)(100000/note);
 13054     0C7B  0020               	movlb	0	; select bank0
 13055     0C7C  0827               	movf	beep@note,w
 13056     0C7D  00F6               	movwf	___aldiv@divisor
 13057     0C7E  0828               	movf	beep@note+1,w
 13058     0C7F  00F7               	movwf	___aldiv@divisor+1
 13059     0C80  01F8               	clrf	___aldiv@divisor+2
 13060     0C81  01F9               	clrf	___aldiv@divisor+3
 13061     0C82  3000               	movlw	0
 13062     0C83  00FD               	movwf	___aldiv@dividend+3
 13063     0C84  3001               	movlw	1
 13064     0C85  00FC               	movwf	___aldiv@dividend+2
 13065     0C86  3086               	movlw	134
 13066     0C87  00FB               	movwf	___aldiv@dividend+1
 13067     0C88  30A0               	movlw	160
 13068     0C89  00FA               	movwf	___aldiv@dividend
 13069     0C8A  318D  2507  318C   	fcall	___aldiv
 13070     0C8D  0879               	movf	?___aldiv+3,w
 13071     0C8E  0020               	movlb	0	; select bank0
 13072     0C8F  00B9               	movwf	beep@beepDelay+3
 13073     0C90  0878               	movf	?___aldiv+2,w
 13074     0C91  00B8               	movwf	beep@beepDelay+2
 13075     0C92  0877               	movf	?___aldiv+1,w
 13076     0C93  00B7               	movwf	beep@beepDelay+1
 13077     0C94  0876               	movf	?___aldiv,w
 13078     0C95  00B6               	movwf	beep@beepDelay
 13079                           
 13080                           ;main.c: 266:  long time = (long)((duration*10)/(beepDelay*2));
 13081     0C96  3536               	lslf	beep@beepDelay,w
 13082     0C97  00F6               	movwf	___aldiv@divisor
 13083     0C98  0D37               	rlf	beep@beepDelay+1,w
 13084     0C99  00F7               	movwf	___aldiv@divisor+1
 13085     0C9A  0D38               	rlf	beep@beepDelay+2,w
 13086     0C9B  00F8               	movwf	___aldiv@divisor+2
 13087     0C9C  0D39               	rlf	beep@beepDelay+3,w
 13088     0C9D  00F9               	movwf	___aldiv@divisor+3
 13089     0C9E  300A               	movlw	10
 13090     0C9F  00F2               	movwf	___wmul@multiplicand
 13091     0CA0  3000               	movlw	0
 13092     0CA1  00F3               	movwf	___wmul@multiplicand+1
 13093     0CA2  082A               	movf	beep@duration+1,w
 13094     0CA3  00F1               	movwf	___wmul@multiplier+1
 13095     0CA4  0829               	movf	beep@duration,w
 13096     0CA5  00F0               	movwf	___wmul@multiplier
 13097     0CA6  3196  2664  318C   	fcall	___wmul
 13098     0CA9  0870               	movf	?___wmul,w
 13099     0CAA  0020               	movlb	0	; select bank0
 13100     0CAB  00AB               	movwf	??_beep
 13101     0CAC  0871               	movf	?___wmul+1,w
 13102     0CAD  00AC               	movwf	??_beep+1
 13103     0CAE  01AD               	clrf	??_beep+2
 13104     0CAF  01AE               	clrf	??_beep+3
 13105     0CB0  082E               	movf	??_beep+3,w
 13106     0CB1  00FD               	movwf	___aldiv@dividend+3
 13107     0CB2  082D               	movf	??_beep+2,w
 13108     0CB3  00FC               	movwf	___aldiv@dividend+2
 13109     0CB4  082C               	movf	??_beep+1,w
 13110     0CB5  00FB               	movwf	___aldiv@dividend+1
 13111     0CB6  082B               	movf	??_beep,w
 13112     0CB7  00FA               	movwf	___aldiv@dividend
 13113     0CB8  318D  2507  318C   	fcall	___aldiv
 13114     0CBB  0879               	movf	?___aldiv+3,w
 13115     0CBC  0020               	movlb	0	; select bank0
 13116     0CBD  00B3               	movwf	beep@time+3
 13117     0CBE  0878               	movf	?___aldiv+2,w
 13118     0CBF  00B2               	movwf	beep@time+2
 13119     0CC0  0877               	movf	?___aldiv+1,w
 13120     0CC1  00B1               	movwf	beep@time+1
 13121     0CC2  0876               	movf	?___aldiv,w
 13122     0CC3  00B0               	movwf	beep@time
 13123     0CC4                     l5151:
 13124     0CC4  1616               	bsf	22,4	;volatile
 13125     0CC5                     l5153:
 13126                           
 13127                           ;main.c: 269:  for(i=0;i<time;i++)
 13128     0CC5  01B4               	clrf	beep@i
 13129     0CC6  01B5               	clrf	beep@i+1
 13130     0CC7  2CDE               	goto	l5161
 13131     0CC8                     l1117:	
 13132                           ;main.c: 270:  {;main.c: 273:         do { LATCbits.LATC2 = 1; } while(0);
 13133                           
 13134     0CC8  1518               	bsf	24,2	;volatile
 13135     0CC9                     l5155:
 13136                           
 13137                           ;main.c: 275:         DELAY_microseconds(beepDelay);
 13138     0CC9  0837               	movf	beep@beepDelay+1,w
 13139     0CCA  00F1               	movwf	DELAY_microseconds@microseconds+1
 13140     0CCB  0836               	movf	beep@beepDelay,w
 13141     0CCC  00F0               	movwf	DELAY_microseconds@microseconds
 13142     0CCD  3196  2683  318C   	fcall	_DELAY_microseconds
 13143     0CD0                     l5157:
 13144     0CD0  0020               	movlb	0	; select bank0
 13145     0CD1  1118               	bcf	24,2	;volatile
 13146     0CD2                     l1120:
 13147                           
 13148                           ;main.c: 280:         DELAY_microseconds(beepDelay);
 13149     0CD2  0837               	movf	beep@beepDelay+1,w
 13150     0CD3  00F1               	movwf	DELAY_microseconds@microseconds+1
 13151     0CD4  0836               	movf	beep@beepDelay,w
 13152     0CD5  00F0               	movwf	DELAY_microseconds@microseconds
 13153     0CD6  3196  2683  318C   	fcall	_DELAY_microseconds
 13154     0CD9                     l5159:
 13155                           
 13156                           ;main.c: 281:  }
 13157     0CD9  3001               	movlw	1
 13158     0CDA  0020               	movlb	0	; select bank0
 13159     0CDB  07B4               	addwf	beep@i,f
 13160     0CDC  3000               	movlw	0
 13161     0CDD  3DB5               	addwfc	beep@i+1,f
 13162     0CDE                     l5161:
 13163     0CDE  0834               	movf	beep@i,w
 13164     0CDF  00AB               	movwf	??_beep
 13165     0CE0  0835               	movf	beep@i+1,w
 13166     0CE1  00AC               	movwf	??_beep+1
 13167     0CE2  3000               	movlw	0
 13168     0CE3  1BAC               	btfsc	??_beep+1,7
 13169     0CE4  30FF               	movlw	255
 13170     0CE5  00AD               	movwf	??_beep+2
 13171     0CE6  00AE               	movwf	??_beep+3
 13172     0CE7  082E               	movf	??_beep+3,w
 13173     0CE8  3A80               	xorlw	128
 13174     0CE9  00AF               	movwf	??_beep+4
 13175     0CEA  0833               	movf	beep@time+3,w
 13176     0CEB  3A80               	xorlw	128
 13177     0CEC  022F               	subwf	??_beep+4,w
 13178     0CED  1D03               	skipz
 13179     0CEE  2CF9               	goto	u1973
 13180     0CEF  0832               	movf	beep@time+2,w
 13181     0CF0  022D               	subwf	??_beep+2,w
 13182     0CF1  1D03               	skipz
 13183     0CF2  2CF9               	goto	u1973
 13184     0CF3  0831               	movf	beep@time+1,w
 13185     0CF4  022C               	subwf	??_beep+1,w
 13186     0CF5  1D03               	skipz
 13187     0CF6  2CF9               	goto	u1973
 13188     0CF7  0830               	movf	beep@time,w
 13189     0CF8  022B               	subwf	??_beep,w
 13190     0CF9                     u1973:
 13191     0CF9  1C03               	skipc
 13192     0CFA  2CFC               	goto	u1971
 13193     0CFB  2CFD               	goto	u1970
 13194     0CFC                     u1971:
 13195     0CFC  2CC8               	goto	l1117
 13196     0CFD                     u1970:
 13197     0CFD                     l1122:	
 13198                           ;main.c: 285:     do { LATAbits.LATA4 = 0; } while(0);
 13199                           
 13200     0CFD  1216               	bcf	22,4	;volatile
 13201     0CFE                     l1124:	
 13202                           ;main.c: 286:     do { LATCbits.LATC2 = 0; } while(0);
 13203                           
 13204     0CFE  1118               	bcf	24,2	;volatile
 13205     0CFF                     l5163:
 13206                           
 13207                           ;main.c: 288:     DELAY_milliseconds(20);
 13208     0CFF  3014               	movlw	20
 13209     0D00  00F0               	movwf	DELAY_milliseconds@milliseconds
 13210     0D01  3000               	movlw	0
 13211     0D02  00F1               	movwf	DELAY_milliseconds@milliseconds+1
 13212     0D03  3195  2542  318C   	fcall	_DELAY_milliseconds
 13213     0D06                     l1126:
 13214     0D06  0008               	return
 13215     0D07                     __end_of_beep:
 13216                           
 13217                           	psect	text31
 13218     1664                     __ptext31:	
 13219 ;; *************** function ___wmul *****************
 13220 ;; Defined at:
 13221 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 13222 ;; Parameters:    Size  Location     Type
 13223 ;;  multiplier      2    0[COMMON] unsigned int 
 13224 ;;  multiplicand    2    2[COMMON] unsigned int 
 13225 ;; Auto vars:     Size  Location     Type
 13226 ;;  product         2    4[COMMON] unsigned int 
 13227 ;; Return value:  Size  Location     Type
 13228 ;;                  2    0[COMMON] unsigned int 
 13229 ;; Registers used:
 13230 ;;		wreg, status,2, status,0
 13231 ;; Tracked objects:
 13232 ;;		On entry : 0/0
 13233 ;;		On exit  : 0/0
 13234 ;;		Unchanged: 0/0
 13235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13236 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13239 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;Total ram usage:        6 bytes
 13241 ;; Hardware stack levels used: 1
 13242 ;; This function calls:
 13243 ;;		Nothing
 13244 ;; This function is called by:
 13245 ;;		_beep
 13246 ;; This function uses a non-reentrant model
 13247 ;;
 13248                           
 13249     1664                     ___wmul:	
 13250                           ;psect for function ___wmul
 13251                           
 13252     1664                     l5095:	
 13253                           ;incstack = 0
 13254                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13255                           
 13256     1664  01F4               	clrf	___wmul@product
 13257     1665  01F5               	clrf	___wmul@product+1
 13258     1666                     l5097:
 13259     1666  1C70               	btfss	___wmul@multiplier,0
 13260     1667  2E69               	goto	u1831
 13261     1668  2E6A               	goto	u1830
 13262     1669                     u1831:
 13263     1669  2E6E               	goto	l1739
 13264     166A                     u1830:
 13265     166A                     l5099:
 13266     166A  0872               	movf	___wmul@multiplicand,w
 13267     166B  07F4               	addwf	___wmul@product,f
 13268     166C  0873               	movf	___wmul@multiplicand+1,w
 13269     166D  3DF5               	addwfc	___wmul@product+1,f
 13270     166E                     l1739:
 13271     166E  3001               	movlw	1
 13272     166F                     u1845:
 13273     166F  35F2               	lslf	___wmul@multiplicand,f
 13274     1670  0DF3               	rlf	___wmul@multiplicand+1,f
 13275     1671  0B89               	decfsz	9,f
 13276     1672  2E6F               	goto	u1845
 13277     1673                     l5101:
 13278     1673  3001               	movlw	1
 13279     1674                     u1855:
 13280     1674  36F1               	lsrf	___wmul@multiplier+1,f
 13281     1675  0CF0               	rrf	___wmul@multiplier,f
 13282     1676  0B89               	decfsz	9,f
 13283     1677  2E74               	goto	u1855
 13284     1678                     l5103:
 13285     1678  0870               	movf	___wmul@multiplier,w
 13286     1679  0471               	iorwf	___wmul@multiplier+1,w
 13287     167A  1D03               	btfss	3,2
 13288     167B  2E7D               	goto	u1861
 13289     167C  2E7E               	goto	u1860
 13290     167D                     u1861:
 13291     167D  2E66               	goto	l5097
 13292     167E                     u1860:
 13293     167E                     l5105:
 13294     167E  0875               	movf	___wmul@product+1,w
 13295     167F  00F1               	movwf	?___wmul+1
 13296     1680  0874               	movf	___wmul@product,w
 13297     1681  00F0               	movwf	?___wmul
 13298     1682                     l1741:
 13299     1682  0008               	return
 13300     1683                     __end_of___wmul:
 13301                           
 13302                           	psect	text32
 13303     0D07                     __ptext32:	
 13304 ;; *************** function ___aldiv *****************
 13305 ;; Defined at:
 13306 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
 13307 ;; Parameters:    Size  Location     Type
 13308 ;;  divisor         4    6[COMMON] long 
 13309 ;;  dividend        4   10[COMMON] long 
 13310 ;; Auto vars:     Size  Location     Type
 13311 ;;  quotient        4    3[BANK0 ] long 
 13312 ;;  sign            1    2[BANK0 ] unsigned char 
 13313 ;;  counter         1    1[BANK0 ] unsigned char 
 13314 ;; Return value:  Size  Location     Type
 13315 ;;                  4    6[COMMON] long 
 13316 ;; Registers used:
 13317 ;;		wreg, status,2, status,0
 13318 ;; Tracked objects:
 13319 ;;		On entry : 0/0
 13320 ;;		On exit  : 0/0
 13321 ;;		Unchanged: 0/0
 13322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13323 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13325 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13326 ;;      Totals:         8       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13327 ;;Total ram usage:       15 bytes
 13328 ;; Hardware stack levels used: 1
 13329 ;; This function calls:
 13330 ;;		Nothing
 13331 ;; This function is called by:
 13332 ;;		_beep
 13333 ;; This function uses a non-reentrant model
 13334 ;;
 13335                           
 13336     0D07                     ___aldiv:	
 13337                           ;psect for function ___aldiv
 13338                           
 13339     0D07                     l5109:	
 13340                           ;incstack = 0
 13341                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 13342                           
 13343     0D07  0020               	movlb	0	; select bank0
 13344     0D08  01A2               	clrf	___aldiv@sign
 13345     0D09                     l5111:
 13346     0D09  1FF9               	btfss	___aldiv@divisor+3,7
 13347     0D0A  2D0C               	goto	u1871
 13348     0D0B  2D0D               	goto	u1870
 13349     0D0C                     u1871:
 13350     0D0C  2D1A               	goto	l1804
 13351     0D0D                     u1870:
 13352     0D0D                     l5113:
 13353     0D0D  09F6               	comf	___aldiv@divisor,f
 13354     0D0E  09F7               	comf	___aldiv@divisor+1,f
 13355     0D0F  09F8               	comf	___aldiv@divisor+2,f
 13356     0D10  09F9               	comf	___aldiv@divisor+3,f
 13357     0D11  0AF6               	incf	___aldiv@divisor,f
 13358     0D12  1903               	skipnz
 13359     0D13  0AF7               	incf	___aldiv@divisor+1,f
 13360     0D14  1903               	skipnz
 13361     0D15  0AF8               	incf	___aldiv@divisor+2,f
 13362     0D16  1903               	skipnz
 13363     0D17  0AF9               	incf	___aldiv@divisor+3,f
 13364     0D18  01A2               	clrf	___aldiv@sign
 13365     0D19  0AA2               	incf	___aldiv@sign,f
 13366     0D1A                     l1804:
 13367     0D1A  1FFD               	btfss	___aldiv@dividend+3,7
 13368     0D1B  2D1D               	goto	u1881
 13369     0D1C  2D1E               	goto	u1880
 13370     0D1D                     u1881:
 13371     0D1D  2D2D               	goto	l5119
 13372     0D1E                     u1880:
 13373     0D1E                     l5115:
 13374     0D1E  09FA               	comf	___aldiv@dividend,f
 13375     0D1F  09FB               	comf	___aldiv@dividend+1,f
 13376     0D20  09FC               	comf	___aldiv@dividend+2,f
 13377     0D21  09FD               	comf	___aldiv@dividend+3,f
 13378     0D22  0AFA               	incf	___aldiv@dividend,f
 13379     0D23  1903               	skipnz
 13380     0D24  0AFB               	incf	___aldiv@dividend+1,f
 13381     0D25  1903               	skipnz
 13382     0D26  0AFC               	incf	___aldiv@dividend+2,f
 13383     0D27  1903               	skipnz
 13384     0D28  0AFD               	incf	___aldiv@dividend+3,f
 13385     0D29                     l5117:
 13386     0D29  3001               	movlw	1
 13387     0D2A  00A0               	movwf	??___aldiv
 13388     0D2B  0820               	movf	??___aldiv,w
 13389     0D2C  06A2               	xorwf	___aldiv@sign,f
 13390     0D2D                     l5119:
 13391     0D2D  3000               	movlw	0
 13392     0D2E  00A6               	movwf	___aldiv@quotient+3
 13393     0D2F  3000               	movlw	0
 13394     0D30  00A5               	movwf	___aldiv@quotient+2
 13395     0D31  3000               	movlw	0
 13396     0D32  00A4               	movwf	___aldiv@quotient+1
 13397     0D33  3000               	movlw	0
 13398     0D34  00A3               	movwf	___aldiv@quotient
 13399     0D35                     l5121:
 13400     0D35  0879               	movf	___aldiv@divisor+3,w
 13401     0D36  0478               	iorwf	___aldiv@divisor+2,w
 13402     0D37  0477               	iorwf	___aldiv@divisor+1,w
 13403     0D38  0476               	iorwf	___aldiv@divisor,w
 13404     0D39  1903               	skipnz
 13405     0D3A  2D3C               	goto	u1891
 13406     0D3B  2D3D               	goto	u1890
 13407     0D3C                     u1891:
 13408     0D3C  2D7E               	goto	l5141
 13409     0D3D                     u1890:
 13410     0D3D                     l5123:
 13411     0D3D  01A1               	clrf	___aldiv@counter
 13412     0D3E  0AA1               	incf	___aldiv@counter,f
 13413     0D3F  2D4B               	goto	l5127
 13414     0D40                     l5125:
 13415     0D40  3001               	movlw	1
 13416     0D41                     u1905:
 13417     0D41  35F6               	lslf	___aldiv@divisor,f
 13418     0D42  0DF7               	rlf	___aldiv@divisor+1,f
 13419     0D43  0DF8               	rlf	___aldiv@divisor+2,f
 13420     0D44  0DF9               	rlf	___aldiv@divisor+3,f
 13421     0D45  0B89               	decfsz	9,f
 13422     0D46  2D41               	goto	u1905
 13423     0D47  3001               	movlw	1
 13424     0D48  00A0               	movwf	??___aldiv
 13425     0D49  0820               	movf	??___aldiv,w
 13426     0D4A  07A1               	addwf	___aldiv@counter,f
 13427     0D4B                     l5127:
 13428     0D4B  1FF9               	btfss	___aldiv@divisor+3,7
 13429     0D4C  2D4E               	goto	u1911
 13430     0D4D  2D4F               	goto	u1910
 13431     0D4E                     u1911:
 13432     0D4E  2D40               	goto	l5125
 13433     0D4F                     u1910:
 13434     0D4F                     l5129:
 13435     0D4F  3001               	movlw	1
 13436     0D50                     u1925:
 13437     0D50  35A3               	lslf	___aldiv@quotient,f
 13438     0D51  0DA4               	rlf	___aldiv@quotient+1,f
 13439     0D52  0DA5               	rlf	___aldiv@quotient+2,f
 13440     0D53  0DA6               	rlf	___aldiv@quotient+3,f
 13441     0D54  0B89               	decfsz	9,f
 13442     0D55  2D50               	goto	u1925
 13443     0D56                     l5131:
 13444     0D56  0879               	movf	___aldiv@divisor+3,w
 13445     0D57  027D               	subwf	___aldiv@dividend+3,w
 13446     0D58  1D03               	skipz
 13447     0D59  2D64               	goto	u1935
 13448     0D5A  0878               	movf	___aldiv@divisor+2,w
 13449     0D5B  027C               	subwf	___aldiv@dividend+2,w
 13450     0D5C  1D03               	skipz
 13451     0D5D  2D64               	goto	u1935
 13452     0D5E  0877               	movf	___aldiv@divisor+1,w
 13453     0D5F  027B               	subwf	___aldiv@dividend+1,w
 13454     0D60  1D03               	skipz
 13455     0D61  2D64               	goto	u1935
 13456     0D62  0876               	movf	___aldiv@divisor,w
 13457     0D63  027A               	subwf	___aldiv@dividend,w
 13458     0D64                     u1935:
 13459     0D64  1C03               	skipc
 13460     0D65  2D67               	goto	u1931
 13461     0D66  2D68               	goto	u1930
 13462     0D67                     u1931:
 13463     0D67  2D71               	goto	l5137
 13464     0D68                     u1930:
 13465     0D68                     l5133:
 13466     0D68  0876               	movf	___aldiv@divisor,w
 13467     0D69  02FA               	subwf	___aldiv@dividend,f
 13468     0D6A  0877               	movf	___aldiv@divisor+1,w
 13469     0D6B  3BFB               	subwfb	___aldiv@dividend+1,f
 13470     0D6C  0878               	movf	___aldiv@divisor+2,w
 13471     0D6D  3BFC               	subwfb	___aldiv@dividend+2,f
 13472     0D6E  0879               	movf	___aldiv@divisor+3,w
 13473     0D6F  3BFD               	subwfb	___aldiv@dividend+3,f
 13474     0D70                     l5135:
 13475     0D70  1423               	bsf	___aldiv@quotient,0
 13476     0D71                     l5137:
 13477     0D71  3001               	movlw	1
 13478     0D72                     u1945:
 13479     0D72  36F9               	lsrf	___aldiv@divisor+3,f
 13480     0D73  0CF8               	rrf	___aldiv@divisor+2,f
 13481     0D74  0CF7               	rrf	___aldiv@divisor+1,f
 13482     0D75  0CF6               	rrf	___aldiv@divisor,f
 13483     0D76  0B89               	decfsz	9,f
 13484     0D77  2D72               	goto	u1945
 13485     0D78                     l5139:
 13486     0D78  3001               	movlw	1
 13487     0D79  02A1               	subwf	___aldiv@counter,f
 13488     0D7A  1D03               	btfss	3,2
 13489     0D7B  2D7D               	goto	u1951
 13490     0D7C  2D7E               	goto	u1950
 13491     0D7D                     u1951:
 13492     0D7D  2D4F               	goto	l5129
 13493     0D7E                     u1950:
 13494     0D7E                     l5141:
 13495     0D7E  0822               	movf	___aldiv@sign,w
 13496     0D7F  1903               	btfsc	3,2
 13497     0D80  2D82               	goto	u1961
 13498     0D81  2D83               	goto	u1960
 13499     0D82                     u1961:
 13500     0D82  2D8E               	goto	l5145
 13501     0D83                     u1960:
 13502     0D83                     l5143:
 13503     0D83  09A3               	comf	___aldiv@quotient,f
 13504     0D84  09A4               	comf	___aldiv@quotient+1,f
 13505     0D85  09A5               	comf	___aldiv@quotient+2,f
 13506     0D86  09A6               	comf	___aldiv@quotient+3,f
 13507     0D87  0AA3               	incf	___aldiv@quotient,f
 13508     0D88  1903               	skipnz
 13509     0D89  0AA4               	incf	___aldiv@quotient+1,f
 13510     0D8A  1903               	skipnz
 13511     0D8B  0AA5               	incf	___aldiv@quotient+2,f
 13512     0D8C  1903               	skipnz
 13513     0D8D  0AA6               	incf	___aldiv@quotient+3,f
 13514     0D8E                     l5145:
 13515     0D8E  0826               	movf	___aldiv@quotient+3,w
 13516     0D8F  00F9               	movwf	?___aldiv+3
 13517     0D90  0825               	movf	___aldiv@quotient+2,w
 13518     0D91  00F8               	movwf	?___aldiv+2
 13519     0D92  0824               	movf	___aldiv@quotient+1,w
 13520     0D93  00F7               	movwf	?___aldiv+1
 13521     0D94  0823               	movf	___aldiv@quotient,w
 13522     0D95  00F6               	movwf	?___aldiv
 13523     0D96                     l1814:
 13524     0D96  0008               	return
 13525     0D97                     __end_of___aldiv:
 13526                           
 13527                           	psect	text33
 13528     1542                     __ptext33:	
 13529 ;; *************** function _DELAY_milliseconds *****************
 13530 ;; Defined at:
 13531 ;;		line 38 in file "mcc_generated_files/delay.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;  milliseconds    2    0[COMMON] unsigned short 
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;		None
 13536 ;; Return value:  Size  Location     Type
 13537 ;;                  1    wreg      void 
 13538 ;; Registers used:
 13539 ;;		wreg, status,2, status,0
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13549 ;;Total ram usage:        2 bytes
 13550 ;; Hardware stack levels used: 1
 13551 ;; This function calls:
 13552 ;;		Nothing
 13553 ;; This function is called by:
 13554 ;;		_beep
 13555 ;;		_power_on
 13556 ;;		_power_off_sequence
 13557 ;;		_CC8531_Init_Data_Send
 13558 ;;		_CC8531_Polling_Data_Send
 13559 ;;		_TLV320_SetHeadphoneVol
 13560 ;;		_TLV320_Mute
 13561 ;;		_TLV320AIC32_config
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565     1542                     _DELAY_milliseconds:	
 13566                           ;psect for function _DELAY_milliseconds
 13567                           
 13568     1542                     l5083:	
 13569                           ;incstack = 0
 13570                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 13571                           
 13572                           
 13573                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 13574     1542  2D47               	goto	l5087
 13575     1543                     l5085:
 13576                           
 13577                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(1000000/4000.0)));
 13578     1543  3053               	movlw	83
 13579     1544                     u3177:
 13580     1544  0B89               	decfsz	9,f
 13581     1545  2D44               	goto	u3177
 13582     1546  0000               	nop
 13583     1547                     l5087:
 13584                           
 13585                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 13586     1547  3001               	movlw	1
 13587     1548  02F0               	subwf	DELAY_milliseconds@milliseconds,f
 13588     1549  3000               	movlw	0
 13589     154A  3BF1               	subwfb	DELAY_milliseconds@milliseconds+1,f
 13590     154B  0A70               	incf	DELAY_milliseconds@milliseconds,w
 13591     154C  1D03               	skipz
 13592     154D  2D52               	goto	u1801
 13593     154E  0A71               	incf	DELAY_milliseconds@milliseconds+1,w
 13594     154F  1D03               	btfss	3,2
 13595     1550  2D52               	goto	u1801
 13596     1551  2D53               	goto	u1800
 13597     1552                     u1801:
 13598     1552  2D43               	goto	l5085
 13599     1553                     u1800:
 13600     1553                     l906:
 13601     1553  0008               	return
 13602     1554                     __end_of_DELAY_milliseconds:
 13603                           
 13604                           	psect	text34
 13605     1683                     __ptext34:	
 13606 ;; *************** function _DELAY_microseconds *****************
 13607 ;; Defined at:
 13608 ;;		line 49 in file "mcc_generated_files/delay.c"
 13609 ;; Parameters:    Size  Location     Type
 13610 ;;  microseconds    2    0[COMMON] unsigned short 
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;		None
 13613 ;; Return value:  Size  Location     Type
 13614 ;;                  1    wreg      void 
 13615 ;; Registers used:
 13616 ;;		wreg, status,2, status,0
 13617 ;; Tracked objects:
 13618 ;;		On entry : 0/0
 13619 ;;		On exit  : 0/0
 13620 ;;		Unchanged: 0/0
 13621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;Total ram usage:        2 bytes
 13627 ;; Hardware stack levels used: 1
 13628 ;; This function calls:
 13629 ;;		Nothing
 13630 ;; This function is called by:
 13631 ;;		_beep
 13632 ;;		_CC8531_Init_Data_Send
 13633 ;;		_CC8531_Polling_Data_Send
 13634 ;; This function uses a non-reentrant model
 13635 ;;
 13636                           
 13637     1683                     _DELAY_microseconds:	
 13638                           ;psect for function _DELAY_microseconds
 13639                           
 13640     1683                     l5089:	
 13641                           ;incstack = 0
 13642                           ; Regs used in _DELAY_microseconds: [wreg+status,2+status,0]
 13643                           
 13644                           
 13645                           ;mcc_generated_files/delay.c: 50:     while( microseconds >= 32)
 13646     1683  2E8C               	goto	l909
 13647     1684                     l910:
 13648                           
 13649                           ;mcc_generated_files/delay.c: 51:     {;mcc_generated_files/delay.c: 52:         _delay(
      +                          (unsigned long)((32)*(1000000/4000000.0)));
 13650     1684  3200               	nop2	;2 cycle nop
 13651     1685  3200               	nop2	;2 cycle nop
 13652     1686  3200               	nop2	;2 cycle nop
 13653     1687  3200               	nop2	;2 cycle nop
 13654     1688                     l5091:
 13655                           
 13656                           ;mcc_generated_files/delay.c: 53:         microseconds -= 32;
 13657     1688  3020               	movlw	32
 13658     1689  02F0               	subwf	DELAY_microseconds@microseconds,f
 13659     168A  3000               	movlw	0
 13660     168B  3BF1               	subwfb	DELAY_microseconds@microseconds+1,f
 13661     168C                     l909:	
 13662                           ;mcc_generated_files/delay.c: 54:     }
 13663                           
 13664                           
 13665                           ;mcc_generated_files/delay.c: 50:     while( microseconds >= 32)
 13666     168C  3000               	movlw	0
 13667     168D  0271               	subwf	DELAY_microseconds@microseconds+1,w
 13668     168E  3020               	movlw	32
 13669     168F  1903               	skipnz
 13670     1690  0270               	subwf	DELAY_microseconds@microseconds,w
 13671     1691  1803               	skipnc
 13672     1692  2E94               	goto	u1811
 13673     1693  2E95               	goto	u1810
 13674     1694                     u1811:
 13675     1694  2E84               	goto	l910
 13676     1695                     u1810:
 13677     1695  2E96               	goto	l5093
 13678     1696                     l913:
 13679     1696                     l5093:	
 13680                           ;mcc_generated_files/delay.c: 57:     {;mcc_generated_files/delay.c: 58:         _delay(
      +                          (unsigned long)((1)*(1000000/4000000.0)));
 13681                           
 13682                           
 13683                           ;mcc_generated_files/delay.c: 56:     while(microseconds--)
 13684     1696  3001               	movlw	1
 13685     1697  02F0               	subwf	DELAY_microseconds@microseconds,f
 13686     1698  3000               	movlw	0
 13687     1699  3BF1               	subwfb	DELAY_microseconds@microseconds+1,f
 13688     169A  0A70               	incf	DELAY_microseconds@microseconds,w
 13689     169B  1D03               	skipz
 13690     169C  2EA1               	goto	u1821
 13691     169D  0A71               	incf	DELAY_microseconds@microseconds+1,w
 13692     169E  1D03               	btfss	3,2
 13693     169F  2EA1               	goto	u1821
 13694     16A0  2EA2               	goto	u1820
 13695     16A1                     u1821:
 13696     16A1  2E96               	goto	l913
 13697     16A2                     u1820:
 13698     16A2                     l915:
 13699     16A2  0008               	return
 13700     16A3                     __end_of_DELAY_microseconds:
 13701                           
 13702                           	psect	text35
 13703     1744                     __ptext35:	
 13704 ;; *************** function _led_control *****************
 13705 ;; Defined at:
 13706 ;;		line 318 in file "main.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;  led_state       1    wreg     enum E12330
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;  led_state       1    2[COMMON] enum E12330
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  1    wreg      void 
 13713 ;; Registers used:
 13714 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;Total ram usage:        3 bytes
 13725 ;; Hardware stack levels used: 1
 13726 ;; This function calls:
 13727 ;;		Nothing
 13728 ;; This function is called by:
 13729 ;;		_charge_display
 13730 ;;		_power_on
 13731 ;;		_power_off_sequence
 13732 ;; This function uses a non-reentrant model
 13733 ;;
 13734                           
 13735     1744                     _led_control:	
 13736                           ;psect for function _led_control
 13737                           
 13738                           
 13739                           ;incstack = 0
 13740                           ; Regs used in _led_control: [wreg-fsr0h+status,2+status,0]
 13741                           ;led_control@led_state stored from wreg
 13742     1744  00F2               	movwf	led_control@led_state
 13743     1745                     l5215:
 13744                           
 13745                           ;main.c: 319:     switch(led_state){
 13746     1745  2F5A               	goto	l5219
 13747     1746                     l1140:	
 13748                           ;main.c: 321:             do { LATCbits.LATC0 = 1; } while(0);
 13749                           
 13750     1746  0020               	movlb	0	; select bank0
 13751     1747  1418               	bsf	24,0	;volatile
 13752     1748                     l1142:	
 13753                           ;main.c: 322:             do { LATCbits.LATC1 = 0; } while(0);
 13754                           
 13755     1748  1098               	bcf	24,1	;volatile
 13756     1749                     l1144:	
 13757                           ;main.c: 323:             do { LATCbits.LATC5 = 0; } while(0);
 13758                           
 13759     1749  1298               	bcf	24,5	;volatile
 13760     174A  2F70               	goto	l1169
 13761     174B                     l1148:	
 13762                           ;main.c: 326:             do { LATCbits.LATC0 = 0; } while(0);
 13763                           
 13764     174B  0020               	movlb	0	; select bank0
 13765     174C  1018               	bcf	24,0	;volatile
 13766     174D                     l1150:	
 13767                           ;main.c: 327:             do { LATCbits.LATC1 = 1; } while(0);
 13768                           
 13769     174D  1498               	bsf	24,1	;volatile
 13770     174E                     l1152:	
 13771                           ;main.c: 328:             do { LATCbits.LATC5 = 0; } while(0);
 13772                           
 13773     174E  1298               	bcf	24,5	;volatile
 13774     174F  2F70               	goto	l1169
 13775     1750                     l1155:	
 13776                           ;main.c: 331:             do { LATCbits.LATC0 = 0; } while(0);
 13777                           
 13778     1750  0020               	movlb	0	; select bank0
 13779     1751  1018               	bcf	24,0	;volatile
 13780     1752                     l1157:	
 13781                           ;main.c: 332:             do { LATCbits.LATC1 = 0; } while(0);
 13782                           
 13783     1752  1098               	bcf	24,1	;volatile
 13784     1753                     l1159:	
 13785                           ;main.c: 333:             do { LATCbits.LATC5 = 1; } while(0);
 13786                           
 13787     1753  1698               	bsf	24,5	;volatile
 13788     1754  2F70               	goto	l1169
 13789     1755                     l1163:	
 13790                           ;main.c: 337:             do { LATCbits.LATC0 = 0; } while(0);
 13791                           
 13792     1755  0020               	movlb	0	; select bank0
 13793     1756  1018               	bcf	24,0	;volatile
 13794     1757                     l1165:	
 13795                           ;main.c: 338:             do { LATCbits.LATC1 = 0; } while(0);
 13796                           
 13797     1757  1098               	bcf	24,1	;volatile
 13798     1758                     l1167:	
 13799                           ;main.c: 339:             do { LATCbits.LATC5 = 0; } while(0);
 13800                           
 13801     1758  1298               	bcf	24,5	;volatile
 13802     1759  2F70               	goto	l1169
 13803     175A                     l5219:
 13804     175A  0872               	movf	led_control@led_state,w
 13805     175B  00F0               	movwf	??_led_control
 13806     175C  01F1               	clrf	??_led_control+1
 13807                           
 13808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13809                           ; Switch size 1, requested type "simple"
 13810                           ; Number of cases is 1, Range of values is 0 to 0
 13811                           ; switch strategies available:
 13812                           ; Name         Instructions Cycles
 13813                           ; simple_byte            4     3 (average)
 13814                           ; direct_byte            8     6 (fixed)
 13815                           ; jumptable            260     6 (fixed)
 13816                           ;	Chosen strategy is simple_byte
 13817     175D  0871               	movf	??_led_control+1,w
 13818     175E  3A00               	xorlw	0	; case 0
 13819     175F  1903               	skipnz
 13820     1760  2F62               	goto	l6881
 13821     1761  2F55               	goto	l1163
 13822     1762                     l6881:
 13823                           
 13824                           ; Switch size 1, requested type "simple"
 13825                           ; Number of cases is 4, Range of values is 0 to 3
 13826                           ; switch strategies available:
 13827                           ; Name         Instructions Cycles
 13828                           ; simple_byte           13     7 (average)
 13829                           ; direct_byte           14     6 (fixed)
 13830                           ; jumptable            260     6 (fixed)
 13831                           ;	Chosen strategy is simple_byte
 13832     1762  0870               	movf	??_led_control,w
 13833     1763  3A00               	xorlw	0	; case 0
 13834     1764  1903               	skipnz
 13835     1765  2F46               	goto	l1140
 13836     1766  3A01               	xorlw	1	; case 1
 13837     1767  1903               	skipnz
 13838     1768  2F4B               	goto	l1148
 13839     1769  3A03               	xorlw	3	; case 2
 13840     176A  1903               	skipnz
 13841     176B  2F50               	goto	l1155
 13842     176C  3A01               	xorlw	1	; case 3
 13843     176D  1903               	skipnz
 13844     176E  2F55               	goto	l1163
 13845     176F  2F55               	goto	l1163
 13846     1770                     l1169:
 13847     1770  0008               	return
 13848     1771                     __end_of_led_control:
 13849                           
 13850                           	psect	text36
 13851     1646                     __ptext36:	
 13852 ;; *************** function _DATAEE_WriteByte *****************
 13853 ;; Defined at:
 13854 ;;		line 180 in file "mcc_generated_files/memory.c"
 13855 ;; Parameters:    Size  Location     Type
 13856 ;;  bAdd            2    0[COMMON] unsigned short 
 13857 ;;  bData           1    2[COMMON] unsigned char 
 13858 ;; Auto vars:     Size  Location     Type
 13859 ;;  GIEBitValue     1    3[COMMON] unsigned char 
 13860 ;; Return value:  Size  Location     Type
 13861 ;;                  1    wreg      void 
 13862 ;; Registers used:
 13863 ;;		wreg, status,2, status,0
 13864 ;; Tracked objects:
 13865 ;;		On entry : 0/0
 13866 ;;		On exit  : 0/0
 13867 ;;		Unchanged: 0/0
 13868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13869 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13872 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13873 ;;Total ram usage:        4 bytes
 13874 ;; Hardware stack levels used: 1
 13875 ;; This function calls:
 13876 ;;		Nothing
 13877 ;; This function is called by:
 13878 ;;		_power_off_sequence
 13879 ;; This function uses a non-reentrant model
 13880 ;;
 13881                           
 13882     1646                     _DATAEE_WriteByte:	
 13883                           ;psect for function _DATAEE_WriteByte
 13884                           
 13885     1646                     l5195:	
 13886                           ;incstack = 0
 13887                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 13888                           
 13889                           
 13890                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 13891     1646  3000               	movlw	0
 13892     1647  1B8B               	btfsc	11,7	;volatile
 13893     1648  3001               	movlw	1
 13894     1649  00F3               	movwf	DATAEE_WriteByte@GIEBitValue
 13895                           
 13896                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 13897     164A  0871               	movf	DATAEE_WriteByte@bAdd+1,w
 13898     164B  0030               	movlb	16	; select bank16
 13899     164C  009B               	movwf	27	;volatile
 13900     164D                     l5197:
 13901                           
 13902                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 13903     164D  0870               	movf	DATAEE_WriteByte@bAdd,w
 13904     164E  009A               	movwf	26	;volatile
 13905     164F                     l5199:
 13906                           
 13907                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 13908     164F  0872               	movf	DATAEE_WriteByte@bData,w
 13909     1650  009C               	movwf	28	;volatile
 13910     1651                     l5201:
 13911                           
 13912                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 13913     1651  171E               	bsf	30,6	;volsfr
 13914     1652                     l5203:
 13915                           
 13916                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 13917     1652  151E               	bsf	30,2	;volsfr
 13918     1653                     l5205:
 13919                           
 13920                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 13921     1653  138B               	bcf	11,7	;volatile
 13922     1654                     l5207:
 13923                           
 13924                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 13925     1654  3055               	movlw	85
 13926     1655  009F               	movwf	31	;volsfr
 13927     1656                     l5209:
 13928                           
 13929                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 13930     1656  30AA               	movlw	170
 13931     1657  009F               	movwf	31	;volsfr
 13932     1658                     l5211:
 13933                           
 13934                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 13935     1658  149E               	bsf	30,1	;volsfr
 13936     1659                     l956:	
 13937                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 13938                           
 13939                           
 13940                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 13941     1659  189E               	btfsc	30,1	;volsfr
 13942     165A  2E5C               	goto	u2001
 13943     165B  2E5D               	goto	u2000
 13944     165C                     u2001:
 13945     165C  2E59               	goto	l956
 13946     165D                     u2000:
 13947     165D                     l958:
 13948                           
 13949                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 13950     165D  111E               	bcf	30,2	;volsfr
 13951     165E                     l5213:
 13952                           
 13953                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 13954     165E  0C73               	rrf	DATAEE_WriteByte@GIEBitValue,w
 13955     165F  1C03               	skipc
 13956     1660  138B               	bcf	11,7	;volatile
 13957     1661  1803               	skipnc
 13958     1662  178B               	bsf	11,7	;volatile
 13959     1663                     l959:
 13960     1663  0008               	return
 13961     1664                     __end_of_DATAEE_WriteByte:
 13962                           
 13963                           	psect	text37
 13964     13C0                     __ptext37:	
 13965 ;; *************** function _SPI2_WriteByte *****************
 13966 ;; Defined at:
 13967 ;;		line 137 in file "mcc_generated_files/spi2.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;  byte            1    0[COMMON] unsigned char 
 13970 ;; Auto vars:     Size  Location     Type
 13971 ;;		None
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  1    wreg      void 
 13974 ;; Registers used:
 13975 ;;		wreg
 13976 ;; Tracked objects:
 13977 ;;		On entry : 0/0
 13978 ;;		On exit  : 0/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13981 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13985 ;;Total ram usage:        1 bytes
 13986 ;; Hardware stack levels used: 1
 13987 ;; This function calls:
 13988 ;;		Nothing
 13989 ;; This function is called by:
 13990 ;;		_CC8531_Init_Data_Send
 13991 ;;		_CC8531_Polling_Data_Send
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           
 13995     13C0                     _SPI2_WriteByte:	
 13996                           ;psect for function _SPI2_WriteByte
 13997                           
 13998     13C0                     l5273:	
 13999                           ;incstack = 0
 14000                           ; Regs used in _SPI2_WriteByte: [wreg]
 14001                           
 14002                           
 14003                           ;mcc_generated_files/spi2.c: 137: void SPI2_WriteByte(uint8_t byte);mcc_generated_files/
      +                          spi2.c: 138: {;mcc_generated_files/spi2.c: 139:     SSP2BUF = byte;
 14004     13C0  0870               	movf	SPI2_WriteByte@byte,w
 14005     13C1  0023               	movlb	3	; select bank3
 14006     13C2  0096               	movwf	22	;volatile
 14007     13C3                     l895:
 14008     13C3  0008               	return
 14009     13C4                     __end_of_SPI2_WriteByte:
 14010                           
 14011                           	psect	text38
 14012     13B2                     __ptext38:	
 14013 ;; *************** function _SPI2_ReadByte *****************
 14014 ;; Defined at:
 14015 ;;		line 142 in file "mcc_generated_files/spi2.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;		None
 14018 ;; Auto vars:     Size  Location     Type
 14019 ;;		None
 14020 ;; Return value:  Size  Location     Type
 14021 ;;                  1    wreg      unsigned char 
 14022 ;; Registers used:
 14023 ;;		wreg
 14024 ;; Tracked objects:
 14025 ;;		On entry : 0/0
 14026 ;;		On exit  : 0/0
 14027 ;;		Unchanged: 0/0
 14028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14033 ;;Total ram usage:        0 bytes
 14034 ;; Hardware stack levels used: 1
 14035 ;; This function calls:
 14036 ;;		Nothing
 14037 ;; This function is called by:
 14038 ;;		_CC8531_Init_Data_Send
 14039 ;;		_CC8531_Polling_Data_Send
 14040 ;; This function uses a non-reentrant model
 14041 ;;
 14042                           
 14043     13B2                     _SPI2_ReadByte:	
 14044                           ;psect for function _SPI2_ReadByte
 14045                           
 14046     13B2                     l5275:	
 14047                           ;incstack = 0
 14048                           ; Regs used in _SPI2_ReadByte: [wreg]
 14049                           
 14050                           
 14051                           ;mcc_generated_files/spi2.c: 144:     return SSP2BUF;
 14052     13B2  0023               	movlb	3	; select bank3
 14053     13B3  0816               	movf	22,w	;volatile
 14054     13B4                     l898:
 14055     13B4  0008               	return
 14056     13B5                     __end_of_SPI2_ReadByte:
 14057                           
 14058                           	psect	text39
 14059     0009                     __ptext39:	
 14060 ;; *************** function _SPI2_Open *****************
 14061 ;; Defined at:
 14062 ;;		line 78 in file "mcc_generated_files/spi2.c"
 14063 ;; Parameters:    Size  Location     Type
 14064 ;;  spi2UniqueCo    1    wreg     enum E355
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;  spi2UniqueCo    1    3[COMMON] enum E355
 14067 ;; Return value:  Size  Location     Type
 14068 ;;                  1    wreg      _Bool 
 14069 ;; Registers used:
 14070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 14071 ;; Tracked objects:
 14072 ;;		On entry : 0/0
 14073 ;;		On exit  : 0/0
 14074 ;;		Unchanged: 0/0
 14075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14080 ;;Total ram usage:        4 bytes
 14081 ;; Hardware stack levels used: 1
 14082 ;; This function calls:
 14083 ;;		Nothing
 14084 ;; This function is called by:
 14085 ;;		_CC8531_Init_Data_Send
 14086 ;;		_CC8531_Polling_Data_Send
 14087 ;;		_MASTER0_open
 14088 ;; This function uses a non-reentrant model
 14089 ;;
 14090                           
 14091     0009                     _SPI2_Open:	
 14092                           ;psect for function _SPI2_Open
 14093                           
 14094                           
 14095                           ;incstack = 0
 14096                           ; Regs used in _SPI2_Open: [wreg-fsr0h+status,2+status,0+pclath]
 14097                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
 14098     0009  00F3               	movwf	SPI2_Open@spi2UniqueConfiguration
 14099     000A                     l5251:
 14100                           
 14101                           ;mcc_generated_files/spi2.c: 78: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 79: {;mcc_generated_files/spi2.c: 80:     if(!SSP2CON1bits.SS
      +                          PEN)
 14102     000A  0023               	movlb	3	; select bank3
 14103     000B  1A9A               	btfsc	26,5	;volatile
 14104     000C  280E               	goto	u2041
 14105     000D  280F               	goto	u2040
 14106     000E                     u2041:
 14107     000E  285B               	goto	l5267
 14108     000F                     u2040:
 14109     000F                     l5253:
 14110                           
 14111                           ;mcc_generated_files/spi2.c: 81:     {;mcc_generated_files/spi2.c: 82:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
 14112     000F  0873               	movf	SPI2_Open@spi2UniqueConfiguration,w
 14113     0010  00F0               	movwf	??_SPI2_Open
 14114     0011  01F1               	clrf	??_SPI2_Open+1
 14115     0012  35F0               	lslf	??_SPI2_Open,f
 14116     0013  0DF1               	rlf	??_SPI2_Open+1,f
 14117     0014  35F0               	lslf	??_SPI2_Open,f
 14118     0015  0DF1               	rlf	??_SPI2_Open+1,f
 14119     0016  3035               	movlw	low (_spi2_configuration+1)
 14120     0017  0770               	addwf	??_SPI2_Open,w
 14121     0018  0084               	movwf	4
 14122     0019  3018               	movlw	high (_spi2_configuration+1)
 14123     001A  3D71               	addwfc	??_SPI2_Open+1,w
 14124     001B  3880               	iorlw	128
 14125     001C  0085               	movwf	5
 14126     001D  0800               	movf	0,w	;code access
 14127     001E  0099               	movwf	25	;volatile
 14128                           
 14129                           ;mcc_generated_files/spi2.c: 83:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
 14130     001F  0873               	movf	SPI2_Open@spi2UniqueConfiguration,w
 14131     0020  00F0               	movwf	??_SPI2_Open
 14132     0021  01F1               	clrf	??_SPI2_Open+1
 14133     0022  35F0               	lslf	??_SPI2_Open,f
 14134     0023  0DF1               	rlf	??_SPI2_Open+1,f
 14135     0024  35F0               	lslf	??_SPI2_Open,f
 14136     0025  0DF1               	rlf	??_SPI2_Open+1,f
 14137     0026  3034               	movlw	low _spi2_configuration
 14138     0027  0770               	addwf	??_SPI2_Open,w
 14139     0028  0084               	movwf	4
 14140     0029  3018               	movlw	high _spi2_configuration
 14141     002A  3D71               	addwfc	??_SPI2_Open+1,w
 14142     002B  3880               	iorlw	128
 14143     002C  0085               	movwf	5
 14144     002D  0800               	movf	0,w	;code access
 14145     002E  009A               	movwf	26	;volatile
 14146     002F                     l5255:
 14147                           
 14148                           ;mcc_generated_files/spi2.c: 84:         SSP2CON2 = 0x00;
 14149     002F  019B               	clrf	27	;volatile
 14150     0030                     l5257:
 14151                           
 14152                           ;mcc_generated_files/spi2.c: 85:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
 14153     0030  0873               	movf	SPI2_Open@spi2UniqueConfiguration,w
 14154     0031  00F0               	movwf	??_SPI2_Open
 14155     0032  01F1               	clrf	??_SPI2_Open+1
 14156     0033  35F0               	lslf	??_SPI2_Open,f
 14157     0034  0DF1               	rlf	??_SPI2_Open+1,f
 14158     0035  35F0               	lslf	??_SPI2_Open,f
 14159     0036  0DF1               	rlf	??_SPI2_Open+1,f
 14160     0037  3036               	movlw	low (_spi2_configuration+2)
 14161     0038  0770               	addwf	??_SPI2_Open,w
 14162     0039  0084               	movwf	4
 14163     003A  3018               	movlw	high (_spi2_configuration+2)
 14164     003B  3D71               	addwfc	??_SPI2_Open+1,w
 14165     003C  3880               	iorlw	128
 14166     003D  0085               	movwf	5
 14167     003E  0800               	movf	0,w	;code access
 14168     003F  0097               	movwf	23	;volatile
 14169     0040                     l5259:
 14170                           
 14171                           ;mcc_generated_files/spi2.c: 86:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
 14172     0040  0873               	movf	SPI2_Open@spi2UniqueConfiguration,w
 14173     0041  00F0               	movwf	??_SPI2_Open
 14174     0042  01F1               	clrf	??_SPI2_Open+1
 14175     0043  35F0               	lslf	??_SPI2_Open,f
 14176     0044  0DF1               	rlf	??_SPI2_Open+1,f
 14177     0045  35F0               	lslf	??_SPI2_Open,f
 14178     0046  0DF1               	rlf	??_SPI2_Open+1,f
 14179     0047  3037               	movlw	low (_spi2_configuration+3)
 14180     0048  0770               	addwf	??_SPI2_Open,w
 14181     0049  0084               	movwf	4
 14182     004A  3018               	movlw	high (_spi2_configuration+3)
 14183     004B  3D71               	addwfc	??_SPI2_Open+1,w
 14184     004C  3880               	iorlw	128
 14185     004D  0085               	movwf	5
 14186     004E  0800               	movf	0,w	;code access
 14187     004F  00F2               	movwf	??_SPI2_Open+2
 14188     0050  0DF2               	rlf	??_SPI2_Open+2,f
 14189     0051  0020               	movlb	0	; select bank0
 14190     0052  0812               	movf	18,w	;volatile
 14191     0053  0672               	xorwf	??_SPI2_Open+2,w
 14192     0054  39FD               	andlw	-3
 14193     0055  0672               	xorwf	??_SPI2_Open+2,w
 14194     0056  0092               	movwf	18	;volatile
 14195     0057                     l5261:
 14196                           
 14197                           ;mcc_generated_files/spi2.c: 87:         SSP2CON1bits.SSPEN = 1;
 14198     0057  0023               	movlb	3	; select bank3
 14199     0058  169A               	bsf	26,5	;volatile
 14200     0059                     l5263:
 14201                           
 14202                           ;mcc_generated_files/spi2.c: 88:         return 1;
 14203     0059  3001               	movlw	1
 14204     005A  285C               	goto	l862
 14205     005B                     l5267:
 14206                           
 14207                           ;mcc_generated_files/spi2.c: 90:     return 0;
 14208     005B  3000               	movlw	0
 14209     005C                     l862:
 14210     005C  0008               	return
 14211     005D                     __end_of_SPI2_Open:
 14212                           
 14213                           	psect	text40
 14214     179F                     __ptext40:	
 14215 ;; *************** function _I2C1_Write1ByteRegister *****************
 14216 ;; Defined at:
 14217 ;;		line 91 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14218 ;; Parameters:    Size  Location     Type
 14219 ;;  address         1    wreg     unsigned char 
 14220 ;;  reg             1    0[BANK0 ] unsigned char 
 14221 ;;  data            1    1[BANK0 ] unsigned char 
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;  address         1    2[BANK0 ] unsigned char 
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  1    wreg      void 
 14226 ;; Registers used:
 14227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;Total ram usage:        3 bytes
 14238 ;; Hardware stack levels used: 1
 14239 ;; Hardware stack levels required when called: 8
 14240 ;; This function calls:
 14241 ;;		_I2C1_Close
 14242 ;;		_I2C1_MasterWrite
 14243 ;;		_I2C1_Open
 14244 ;;		_I2C1_SetAddressNackCallback
 14245 ;;		_I2C1_SetBuffer
 14246 ;;		_I2C1_SetDataCompleteCallback
 14247 ;; This function is called by:
 14248 ;;		_CC8531_Polling_Data_Send
 14249 ;;		_TLV320_SetHeadphoneVol
 14250 ;;		_TLV320_Mute
 14251 ;;		_TLV320AIC32_config
 14252 ;;		_TLV320AIC32_rget
 14253 ;;		_TLV320AIC32_rset
 14254 ;; This function uses a non-reentrant model
 14255 ;;
 14256                           
 14257     179F                     _I2C1_Write1ByteRegister:	
 14258                           ;psect for function _I2C1_Write1ByteRegister
 14259                           
 14260                           
 14261                           ;incstack = 0
 14262                           ; Regs used in _I2C1_Write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14263                           ;I2C1_Write1ByteRegister@address stored from wreg
 14264     179F  0020               	movlb	0	; select bank0
 14265     17A0  00A2               	movwf	I2C1_Write1ByteRegister@address
 14266     17A1                     l5069:
 14267     17A1                     l5071:	
 14268                           ;mcc_generated_files/examples/i2c1_master_example.c: 91: void I2C1_Write1ByteRegister(i2
      +                          c1_address_t address, uint8_t reg, uint8_t data);mcc_generated_files/examples/i2c1_maste
      +                          r_example.c: 92: {;mcc_generated_files/examples/i2c1_master_example.c: 93:     while(!I2
      +                          C1_Open(address));
 14269                           
 14270     17A1  0020               	movlb	0	; select bank0
 14271     17A2  0822               	movf	I2C1_Write1ByteRegister@address,w
 14272     17A3  3188  206A  3197   	fcall	_I2C1_Open
 14273     17A6  3A00               	xorlw	0
 14274     17A7  1903               	skipnz
 14275     17A8  2FAA               	goto	u1781
 14276     17A9  2FAB               	goto	u1780
 14277     17AA                     u1781:
 14278     17AA  2FA1               	goto	l5071
 14279     17AB                     u1780:
 14280     17AB                     l5073:
 14281                           
 14282                           ;mcc_generated_files/examples/i2c1_master_example.c: 94:     I2C1_SetDataCompleteCallbac
      +                          k(wr1RegCompleteHandler,&data);
 14283     17AB  3020               	movlw	low _wr1RegCompleteHandler@i2c1_master_example$F281
 14284     17AC  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 14285     17AD  3015               	movlw	high _wr1RegCompleteHandler@i2c1_master_example$F281
 14286     17AE  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14287     17AF  3021               	movlw	(low (I2C1_Write1ByteRegister@data| 0))& (0+255)
 14288     17B0  00F6               	movwf	I2C1_SetDataCompleteCallback@ptr
 14289     17B1  3194  2446  3197   	fcall	_I2C1_SetDataCompleteCallback
 14290     17B4                     l5075:
 14291                           
 14292                           ;mcc_generated_files/examples/i2c1_master_example.c: 95:     I2C1_SetBuffer(&reg,1);
 14293     17B4  3001               	movlw	1
 14294     17B5  00F0               	movwf	I2C1_SetBuffer@bufferSize
 14295     17B6  3000               	movlw	0
 14296     17B7  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 14297     17B8  3020               	movlw	(low (I2C1_Write1ByteRegister@reg| 0))& (0+255)
 14298     17B9  3194  248D  3197   	fcall	_I2C1_SetBuffer
 14299     17BC                     l5077:
 14300                           
 14301                           ;mcc_generated_files/examples/i2c1_master_example.c: 96:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 14302     17BC  3000               	movlw	0
 14303     17BD  00F4               	movwf	I2C1_SetAddressNackCallback@cb
 14304     17BE  00F5               	movwf	I2C1_SetAddressNackCallback@cb+1
 14305     17BF  01F6               	clrf	I2C1_SetAddressNackCallback@ptr
 14306     17C0  3194  2451  3197   	fcall	_I2C1_SetAddressNackCallback
 14307     17C3                     l5079:
 14308                           
 14309                           ;mcc_generated_files/examples/i2c1_master_example.c: 97:     I2C1_MasterWrite();
 14310     17C3  3180  2004  3197   	fcall	_I2C1_MasterWrite
 14311     17C6                     l5081:	
 14312                           ;mcc_generated_files/examples/i2c1_master_example.c: 98:     while(I2C1_BUSY == I2C1_Clo
      +                          se());
 14313                           
 14314     17C6  3195  2594  3197   	fcall	_I2C1_Close
 14315     17C9  3A01               	xorlw	1
 14316     17CA  1903               	skipnz
 14317     17CB  2FCD               	goto	u1791
 14318     17CC  2FCE               	goto	u1790
 14319     17CD                     u1791:
 14320     17CD  2FC6               	goto	l5081
 14321     17CE                     u1790:
 14322     17CE                     l176:
 14323     17CE  0008               	return
 14324     17CF                     __end_of_I2C1_Write1ByteRegister:
 14325                           
 14326                           	psect	text41
 14327     1451                     __ptext41:	
 14328 ;; *************** function _I2C1_SetAddressNackCallback *****************
 14329 ;; Defined at:
 14330 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
 14333 ;;		 -> Absolute function(1), 
 14334 ;;  ptr             1    6[COMMON] PTR void 
 14335 ;;		 -> NULL(0), 
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;		None
 14338 ;; Return value:  Size  Location     Type
 14339 ;;                  1    wreg      void 
 14340 ;; Registers used:
 14341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14342 ;; Tracked objects:
 14343 ;;		On entry : 0/0
 14344 ;;		On exit  : 0/0
 14345 ;;		Unchanged: 0/0
 14346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14347 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14351 ;;Total ram usage:        3 bytes
 14352 ;; Hardware stack levels used: 1
 14353 ;; Hardware stack levels required when called: 1
 14354 ;; This function calls:
 14355 ;;		_I2C1_SetCallback
 14356 ;; This function is called by:
 14357 ;;		_I2C1_Write1ByteRegister
 14358 ;;		_i2c_write1ByteRegister
 14359 ;;		_i2c_writeNBytes
 14360 ;;		_i2c_read1ByteRegister
 14361 ;;		_i2c_read2ByteRegister
 14362 ;;		_i2c_write2ByteRegister
 14363 ;;		_i2c_readDataBlock
 14364 ;;		_I2C1_Read1ByteRegister
 14365 ;;		_I2C1_Read2ByteRegister
 14366 ;;		_I2C1_Write2ByteRegister
 14367 ;;		_I2C1_WriteNBytes
 14368 ;;		_I2C1_ReadDataBlock
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372     1451                     _I2C1_SetAddressNackCallback:	
 14373                           ;psect for function _I2C1_SetAddressNackCallback
 14374                           
 14375     1451                     l5045:	
 14376                           ;incstack = 0
 14377                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14378                           
 14379                           
 14380                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 14381     1451  0875               	movf	I2C1_SetAddressNackCallback@cb+1,w
 14382     1452  00F1               	movwf	I2C1_SetCallback@cb+1
 14383     1453  0874               	movf	I2C1_SetAddressNackCallback@cb,w
 14384     1454  00F0               	movwf	I2C1_SetCallback@cb
 14385     1455  0876               	movf	I2C1_SetAddressNackCallback@ptr,w
 14386     1456  00F2               	movwf	I2C1_SetCallback@ptr
 14387     1457  3002               	movlw	2
 14388     1458  3196  26A3  3194   	fcall	_I2C1_SetCallback
 14389     145B                     l479:
 14390     145B  0008               	return
 14391     145C                     __end_of_I2C1_SetAddressNackCallback:
 14392                           
 14393                           	psect	text42
 14394     086A                     __ptext42:	
 14395 ;; *************** function _I2C1_Open *****************
 14396 ;; Defined at:
 14397 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 14398 ;; Parameters:    Size  Location     Type
 14399 ;;  address         1    wreg     unsigned char 
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;  address         1    0[COMMON] unsigned char 
 14402 ;;  returnValue     1    1[COMMON] enum E355
 14403 ;; Return value:  Size  Location     Type
 14404 ;;                  1    wreg      enum E355
 14405 ;; Registers used:
 14406 ;;		wreg, status,2, status,0, pclath, cstack
 14407 ;; Tracked objects:
 14408 ;;		On entry : 0/0
 14409 ;;		On exit  : 0/0
 14410 ;;		Unchanged: 0/0
 14411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14416 ;;Total ram usage:        2 bytes
 14417 ;; Hardware stack levels used: 1
 14418 ;; Hardware stack levels required when called: 1
 14419 ;; This function calls:
 14420 ;;		_I2C1_MasterClearIrq
 14421 ;;		_I2C1_MasterOpen
 14422 ;; This function is called by:
 14423 ;;		_I2C1_Write1ByteRegister
 14424 ;;		_i2c_write1ByteRegister
 14425 ;;		_i2c_writeNBytes
 14426 ;;		_i2c_read1ByteRegister
 14427 ;;		_i2c_read2ByteRegister
 14428 ;;		_i2c_write2ByteRegister
 14429 ;;		_i2c_readDataBlock
 14430 ;;		_i2c_readNBytes
 14431 ;;		_I2C1_Read1ByteRegister
 14432 ;;		_I2C1_Read2ByteRegister
 14433 ;;		_I2C1_Write2ByteRegister
 14434 ;;		_I2C1_WriteNBytes
 14435 ;;		_I2C1_ReadNBytes
 14436 ;;		_I2C1_ReadDataBlock
 14437 ;; This function uses a non-reentrant model
 14438 ;;
 14439                           
 14440     086A                     _I2C1_Open:	
 14441                           ;psect for function _I2C1_Open
 14442                           
 14443                           
 14444                           ;incstack = 0
 14445                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 14446                           ;I2C1_Open@address stored from wreg
 14447     086A  00F0               	movwf	I2C1_Open@address
 14448     086B                     l5013:
 14449                           
 14450                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 14451     086B  01F1               	clrf	I2C1_Open@returnValue
 14452     086C  0AF1               	incf	I2C1_Open@returnValue,f
 14453                           
 14454                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 14455     086D  0021               	movlb	1	; select bank1
 14456     086E  196A               	btfsc	(_I2C1_Status^(0+128)+28),2
 14457     086F  2871               	goto	u1761
 14458     0870  2872               	goto	u1760
 14459     0871                     u1761:
 14460     0871  289E               	goto	l446
 14461     0872                     u1760:
 14462     0872                     l5015:
 14463                           
 14464                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 14465     0872  0870               	movf	I2C1_Open@address,w
 14466     0873  00E4               	movwf	(_I2C1_Status^(0+128)+22)
 14467     0874                     l5017:
 14468                           
 14469                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 14470     0874  10EA               	bcf	(_I2C1_Status^(0+128)+28),1
 14471     0875                     l5019:
 14472                           
 14473                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 14474     0875  156A               	bsf	(_I2C1_Status^(0+128)+28),2
 14475     0876                     l5021:
 14476                           
 14477                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 14478     0876  106A               	bcf	(_I2C1_Status^(0+128)+28),0
 14479                           
 14480                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 14481     0877  300E               	movlw	14
 14482     0878  00E8               	movwf	(_I2C1_Status^(0+128)+26)
 14483                           
 14484                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 14485     0879  30F4               	movlw	244
 14486     087A  00E2               	movwf	(_I2C1_Status^(0+128)+20)
 14487     087B  3001               	movlw	1
 14488     087C  00E3               	movwf	(_I2C1_Status^(0+128)+21)
 14489     087D                     l5023:
 14490                           
 14491                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 14492     087D  15EA               	bsf	(_I2C1_Status^(0+128)+28),3
 14493                           
 14494                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 14495     087E  3093               	movlw	low _I2C1_CallbackReturnStop
 14496     087F  00CE               	movwf	_I2C1_Status^(0+128)
 14497     0880  3013               	movlw	high _I2C1_CallbackReturnStop
 14498     0881  00CF               	movwf	(_I2C1_Status^(0+128)+1)
 14499     0882                     l5025:
 14500                           
 14501                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 14502     0882  01DA               	clrf	(low ((_I2C1_Status| 0+12)))^(0+128)
 14503     0883                     l5027:
 14504                           
 14505                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 14506     0883  3093               	movlw	low _I2C1_CallbackReturnStop
 14507     0884  00D0               	movwf	(low ((_I2C1_Status| 0+2)))^(0+128)
 14508     0885  3013               	movlw	high _I2C1_CallbackReturnStop
 14509     0886  00D1               	movwf	((low ((_I2C1_Status| 0+2)))^(0+128)+1)
 14510                           
 14511                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 14512     0887  01DB               	clrf	(low ((_I2C1_Status| 0+13)))^(0+128)
 14513     0888                     l5029:
 14514                           
 14515                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 14516     0888  3093               	movlw	low _I2C1_CallbackReturnStop
 14517     0889  00D2               	movwf	(low ((_I2C1_Status| 0+4)))^(0+128)
 14518     088A  3013               	movlw	high _I2C1_CallbackReturnStop
 14519     088B  00D3               	movwf	((low ((_I2C1_Status| 0+4)))^(0+128)+1)
 14520     088C                     l5031:
 14521                           
 14522                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 14523     088C  01DC               	clrf	(low ((_I2C1_Status| 0+14)))^(0+128)
 14524                           
 14525                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 14526     088D  3093               	movlw	low _I2C1_CallbackReturnStop
 14527     088E  00D4               	movwf	(low ((_I2C1_Status| 0+6)))^(0+128)
 14528     088F  3013               	movlw	high _I2C1_CallbackReturnStop
 14529     0890  00D5               	movwf	((low ((_I2C1_Status| 0+6)))^(0+128)+1)
 14530     0891                     l5033:
 14531                           
 14532                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 14533     0891  01DD               	clrf	(low ((_I2C1_Status| 0+15)))^(0+128)
 14534     0892                     l5035:
 14535                           
 14536                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 14537     0892  3095               	movlw	low _I2C1_CallbackReturnReset
 14538     0893  00D6               	movwf	(low ((_I2C1_Status| 0+8)))^(0+128)
 14539     0894  3013               	movlw	high _I2C1_CallbackReturnReset
 14540     0895  00D7               	movwf	((low ((_I2C1_Status| 0+8)))^(0+128)+1)
 14541                           
 14542                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 14543     0896  01DE               	clrf	(low ((_I2C1_Status| 0+16)))^(0+128)
 14544     0897                     l5037:
 14545                           
 14546                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 14547     0897  3193  2397  3188   	fcall	_I2C1_MasterClearIrq
 14548     089A                     l5039:
 14549                           
 14550                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 14551     089A  3194  249B  3188   	fcall	_I2C1_MasterOpen
 14552     089D                     l5041:
 14553                           
 14554                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 14555     089D  01F1               	clrf	I2C1_Open@returnValue
 14556     089E                     l446:	
 14557                           ;mcc_generated_files/i2c1_master.c: 205:     }
 14558                           
 14559                           
 14560                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 14561     089E  0871               	movf	I2C1_Open@returnValue,w
 14562     089F                     l447:
 14563     089F  0008               	return
 14564     08A0                     __end_of_I2C1_Open:
 14565                           
 14566                           	psect	text43
 14567     149B                     __ptext43:	
 14568 ;; *************** function _I2C1_MasterOpen *****************
 14569 ;; Defined at:
 14570 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 14571 ;; Parameters:    Size  Location     Type
 14572 ;;		None
 14573 ;; Auto vars:     Size  Location     Type
 14574 ;;		None
 14575 ;; Return value:  Size  Location     Type
 14576 ;;                  1    wreg      _Bool 
 14577 ;; Registers used:
 14578 ;;		wreg, status,2
 14579 ;; Tracked objects:
 14580 ;;		On entry : 0/0
 14581 ;;		On exit  : 0/0
 14582 ;;		Unchanged: 0/0
 14583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14588 ;;Total ram usage:        0 bytes
 14589 ;; Hardware stack levels used: 1
 14590 ;; This function calls:
 14591 ;;		Nothing
 14592 ;; This function is called by:
 14593 ;;		_I2C1_Open
 14594 ;; This function uses a non-reentrant model
 14595 ;;
 14596                           
 14597     149B                     _I2C1_MasterOpen:	
 14598                           ;psect for function _I2C1_MasterOpen
 14599                           
 14600     149B                     l4977:	
 14601                           ;incstack = 0
 14602                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 14603                           
 14604                           
 14605                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 14606     149B  0023               	movlb	3	; select bank3
 14607     149C  1A90               	btfsc	16,5	;volatile
 14608     149D  2C9F               	goto	u1731
 14609     149E  2CA0               	goto	u1730
 14610     149F                     u1731:
 14611     149F  2CA8               	goto	l612
 14612     14A0                     u1730:
 14613     14A0                     l4979:
 14614                           
 14615                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x80;
 14616     14A0  3080               	movlw	128
 14617     14A1  008F               	movwf	15	;volatile
 14618                           
 14619                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 14620     14A2  3008               	movlw	8
 14621     14A3  0090               	movwf	16	;volatile
 14622     14A4                     l4981:
 14623                           
 14624                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 14625     14A4  0191               	clrf	17	;volatile
 14626     14A5                     l4983:
 14627                           
 14628                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x18;
 14629     14A5  3018               	movlw	24
 14630     14A6  008D               	movwf	13	;volatile
 14631     14A7                     l4985:
 14632                           
 14633                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 14634     14A7  1690               	bsf	16,5	;volatile
 14635     14A8                     l612:
 14636     14A8  0008               	return
 14637     14A9                     __end_of_I2C1_MasterOpen:
 14638                           
 14639                           	psect	text44
 14640     0004                     __ptext44:	
 14641 ;; *************** function _I2C1_MasterWrite *****************
 14642 ;; Defined at:
 14643 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 14644 ;; Parameters:    Size  Location     Type
 14645 ;;		None
 14646 ;; Auto vars:     Size  Location     Type
 14647 ;;		None
 14648 ;; Return value:  Size  Location     Type
 14649 ;;                  1    wreg      enum E355
 14650 ;; Registers used:
 14651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14652 ;; Tracked objects:
 14653 ;;		On entry : 0/0
 14654 ;;		On exit  : 0/0
 14655 ;;		Unchanged: 0/0
 14656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14661 ;;Total ram usage:        0 bytes
 14662 ;; Hardware stack levels used: 1
 14663 ;; Hardware stack levels required when called: 7
 14664 ;; This function calls:
 14665 ;;		_I2C1_MasterOperation
 14666 ;; This function is called by:
 14667 ;;		_I2C1_Write1ByteRegister
 14668 ;;		_i2c_write1ByteRegister
 14669 ;;		_i2c_writeNBytes
 14670 ;;		_i2c_read1ByteRegister
 14671 ;;		_i2c_read2ByteRegister
 14672 ;;		_i2c_write2ByteRegister
 14673 ;;		_i2c_readDataBlock
 14674 ;;		_I2C1_Read1ByteRegister
 14675 ;;		_I2C1_Read2ByteRegister
 14676 ;;		_I2C1_Write2ByteRegister
 14677 ;;		_I2C1_WriteNBytes
 14678 ;;		_I2C1_ReadDataBlock
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682     0004                     _I2C1_MasterWrite:	
 14683                           ;psect for function _I2C1_MasterWrite
 14684                           
 14685     0004                     l5047:	
 14686                           ;incstack = 0
 14687                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14688                           
 14689                           
 14690                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 14691     0004  3000               	movlw	0
 14692     0005  3196  262A  3180   	fcall	_I2C1_MasterOperation
 14693     0008                     l463:
 14694     0008  0008               	return
 14695     0009                     __end_of_I2C1_MasterWrite:
 14696                           
 14697                           	psect	text45
 14698     162A                     __ptext45:	
 14699 ;; *************** function _I2C1_MasterOperation *****************
 14700 ;; Defined at:
 14701 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 14702 ;; Parameters:    Size  Location     Type
 14703 ;;  read            1    wreg     _Bool 
 14704 ;; Auto vars:     Size  Location     Type
 14705 ;;  read            1   12[COMMON] _Bool 
 14706 ;;  returnValue     1   13[COMMON] enum E355
 14707 ;; Return value:  Size  Location     Type
 14708 ;;                  1    wreg      enum E355
 14709 ;; Registers used:
 14710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14711 ;; Tracked objects:
 14712 ;;		On entry : 0/0
 14713 ;;		On exit  : 0/0
 14714 ;;		Unchanged: 0/0
 14715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14720 ;;Total ram usage:        2 bytes
 14721 ;; Hardware stack levels used: 1
 14722 ;; Hardware stack levels required when called: 6
 14723 ;; This function calls:
 14724 ;;		_I2C1_MasterStart
 14725 ;;		_I2C1_Poller
 14726 ;; This function is called by:
 14727 ;;		_I2C1_MasterWrite
 14728 ;;		_I2C1_MasterRead
 14729 ;; This function uses a non-reentrant model
 14730 ;;
 14731                           
 14732     162A                     _I2C1_MasterOperation:	
 14733                           ;psect for function _I2C1_MasterOperation
 14734                           
 14735                           
 14736                           ;incstack = 0
 14737                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14738                           ;I2C1_MasterOperation@read stored from wreg
 14739     162A  00FC               	movwf	I2C1_MasterOperation@read
 14740     162B                     l4993:
 14741                           
 14742                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 14743     162B  01FD               	clrf	I2C1_MasterOperation@returnValue
 14744     162C  0AFD               	incf	I2C1_MasterOperation@returnValue,f
 14745                           
 14746                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 14747     162D  0021               	movlb	1	; select bank1
 14748     162E  18EA               	btfsc	(_I2C1_Status^(0+128)+28),1
 14749     162F  2E31               	goto	u1741
 14750     1630  2E32               	goto	u1740
 14751     1631                     u1741:
 14752     1631  2E44               	goto	l5009
 14753     1632                     u1740:
 14754     1632                     l4995:
 14755                           
 14756                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 14757     1632  14EA               	bsf	(_I2C1_Status^(0+128)+28),1
 14758     1633                     l4997:
 14759                           
 14760                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 14761     1633  01FD               	clrf	I2C1_MasterOperation@returnValue
 14762     1634                     l4999:
 14763                           
 14764                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 14765     1634  087C               	movf	I2C1_MasterOperation@read,w
 14766     1635  1903               	btfsc	3,2
 14767     1636  2E38               	goto	u1751
 14768     1637  2E39               	goto	u1750
 14769     1638                     u1751:
 14770     1638  2E3C               	goto	l5003
 14771     1639                     u1750:
 14772     1639                     l5001:
 14773                           
 14774                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 14775     1639  01E8               	clrf	(_I2C1_Status^(0+128)+26)
 14776     163A  0AE8               	incf	(_I2C1_Status^(0+128)+26),f
 14777                           
 14778                           ;mcc_generated_files/i2c1_master.c: 235:         }
 14779     163B  2E3E               	goto	l5005
 14780     163C                     l5003:
 14781                           
 14782                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 14783     163C  3002               	movlw	2
 14784     163D  00E8               	movwf	(_I2C1_Status^(0+128)+26)
 14785     163E                     l5005:
 14786                           
 14787                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 14788     163E  3193  23A0  3196   	fcall	_I2C1_MasterStart
 14789     1641                     l5007:
 14790                           
 14791                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 14792     1641  3194  2480  3196   	fcall	_I2C1_Poller
 14793     1644                     l5009:
 14794                           
 14795                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 14796     1644  087D               	movf	I2C1_MasterOperation@returnValue,w
 14797     1645                     l457:
 14798     1645  0008               	return
 14799     1646                     __end_of_I2C1_MasterOperation:
 14800                           
 14801                           	psect	text46
 14802     1480                     __ptext46:	
 14803 ;; *************** function _I2C1_Poller *****************
 14804 ;; Defined at:
 14805 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 14806 ;; Parameters:    Size  Location     Type
 14807 ;;		None
 14808 ;; Auto vars:     Size  Location     Type
 14809 ;;		None
 14810 ;; Return value:  Size  Location     Type
 14811 ;;                  1    wreg      void 
 14812 ;; Registers used:
 14813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14814 ;; Tracked objects:
 14815 ;;		On entry : 0/0
 14816 ;;		On exit  : 0/0
 14817 ;;		Unchanged: 0/0
 14818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14823 ;;Total ram usage:        0 bytes
 14824 ;; Hardware stack levels used: 1
 14825 ;; Hardware stack levels required when called: 5
 14826 ;; This function calls:
 14827 ;;		_I2C1_MasterFsm
 14828 ;;		_I2C1_MasterWaitForEvent
 14829 ;; This function is called by:
 14830 ;;		_I2C1_MasterOperation
 14831 ;; This function uses a non-reentrant model
 14832 ;;
 14833                           
 14834     1480                     _I2C1_Poller:	
 14835                           ;psect for function _I2C1_Poller
 14836                           
 14837     1480                     l4969:	
 14838                           ;incstack = 0
 14839                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14840                           
 14841                           
 14842                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 14843     1480  2C87               	goto	l4975
 14844     1481                     l4971:
 14845                           
 14846                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 14847     1481  3194  2400  3194   	fcall	_I2C1_MasterWaitForEvent
 14848     1484                     l4973:
 14849                           
 14850                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 14851     1484  3196  26EF  3194   	fcall	_I2C1_MasterFsm
 14852     1487                     l4975:
 14853                           
 14854                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 14855     1487  0021               	movlb	1	; select bank1
 14856     1488  18EA               	btfsc	(_I2C1_Status^(0+128)+28),1
 14857     1489  2C8B               	goto	u1721
 14858     148A  2C8C               	goto	u1720
 14859     148B                     u1721:
 14860     148B  2C81               	goto	l4971
 14861     148C                     u1720:
 14862     148C                     l496:
 14863     148C  0008               	return
 14864     148D                     __end_of_I2C1_Poller:
 14865                           
 14866                           	psect	text47
 14867     1400                     __ptext47:	
 14868 ;; *************** function _I2C1_MasterWaitForEvent *****************
 14869 ;; Defined at:
 14870 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 14871 ;; Parameters:    Size  Location     Type
 14872 ;;		None
 14873 ;; Auto vars:     Size  Location     Type
 14874 ;;		None
 14875 ;; Return value:  Size  Location     Type
 14876 ;;                  1    wreg      void 
 14877 ;; Registers used:
 14878 ;;		None
 14879 ;; Tracked objects:
 14880 ;;		On entry : 0/0
 14881 ;;		On exit  : 0/0
 14882 ;;		Unchanged: 0/0
 14883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14888 ;;Total ram usage:        0 bytes
 14889 ;; Hardware stack levels used: 1
 14890 ;; This function calls:
 14891 ;;		Nothing
 14892 ;; This function is called by:
 14893 ;;		_I2C1_Poller
 14894 ;; This function uses a non-reentrant model
 14895 ;;
 14896                           
 14897     1400                     _I2C1_MasterWaitForEvent:	
 14898                           ;psect for function _I2C1_MasterWaitForEvent
 14899                           
 14900     1400                     l669:	
 14901                           ;incstack = 0
 14902                           ; Regs used in _I2C1_MasterWaitForEvent: []
 14903                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 14904                           
 14905                           
 14906                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR3bits.SSP1IF)
 14907     1400  002E               	movlb	14	; select bank14
 14908     1401  1C0F               	btfss	15,0	;volatile
 14909     1402  2C04               	goto	u1691
 14910     1403  2C05               	goto	u1690
 14911     1404                     u1691:
 14912     1404  2C00               	goto	l669
 14913     1405                     u1690:
 14914     1405                     l673:
 14915     1405  0008               	return
 14916     1406                     __end_of_I2C1_MasterWaitForEvent:
 14917                           
 14918                           	psect	text48
 14919     16EF                     __ptext48:	
 14920 ;; *************** function _I2C1_MasterFsm *****************
 14921 ;; Defined at:
 14922 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;		None
 14925 ;; Auto vars:     Size  Location     Type
 14926 ;;		None
 14927 ;; Return value:  Size  Location     Type
 14928 ;;                  1    wreg      void 
 14929 ;; Registers used:
 14930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/0
 14933 ;;		On exit  : 0/0
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;Total ram usage:        2 bytes
 14941 ;; Hardware stack levels used: 1
 14942 ;; Hardware stack levels required when called: 4
 14943 ;; This function calls:
 14944 ;;		_I2C1_DO_ADDRESS_NACK
 14945 ;;		_I2C1_DO_IDLE
 14946 ;;		_I2C1_DO_RCEN
 14947 ;;		_I2C1_DO_RESET
 14948 ;;		_I2C1_DO_RX
 14949 ;;		_I2C1_DO_RX_ACK
 14950 ;;		_I2C1_DO_RX_NACK_RESTART
 14951 ;;		_I2C1_DO_RX_NACK_STOP
 14952 ;;		_I2C1_DO_SEND_ADR_READ
 14953 ;;		_I2C1_DO_SEND_ADR_WRITE
 14954 ;;		_I2C1_DO_SEND_RESTART
 14955 ;;		_I2C1_DO_SEND_RESTART_READ
 14956 ;;		_I2C1_DO_SEND_RESTART_WRITE
 14957 ;;		_I2C1_DO_SEND_STOP
 14958 ;;		_I2C1_DO_TX
 14959 ;;		_I2C1_DO_TX_EMPTY
 14960 ;;		_I2C1_MasterClearIrq
 14961 ;;		_I2C1_MasterIsNack
 14962 ;; This function is called by:
 14963 ;;		_I2C1_Poller
 14964 ;; This function uses a non-reentrant model
 14965 ;;
 14966                           
 14967     16EF                     _I2C1_MasterFsm:	
 14968                           ;psect for function _I2C1_MasterFsm
 14969                           
 14970     16EF                     l4957:	
 14971                           ;incstack = 0
 14972                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14973                           
 14974                           
 14975                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 14976     16EF  3193  2397  3196   	fcall	_I2C1_MasterClearIrq
 14977     16F2                     l4959:
 14978                           
 14979                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 14980     16F2  0021               	movlb	1	; select bank1
 14981     16F3  1C6A               	btfss	(_I2C1_Status^(0+128)+28),0
 14982     16F4  2EF6               	goto	u1701
 14983     16F5  2EF7               	goto	u1700
 14984     16F6                     u1701:
 14985     16F6  2F02               	goto	l4965
 14986     16F7                     u1700:
 14987     16F7                     l4961:
 14988     16F7  3193  23FA  3196   	fcall	_I2C1_MasterIsNack
 14989     16FA  3A00               	xorlw	0
 14990     16FB  1903               	skipnz
 14991     16FC  2EFE               	goto	u1711
 14992     16FD  2EFF               	goto	u1710
 14993     16FE                     u1711:
 14994     16FE  2F02               	goto	l4965
 14995     16FF                     u1710:
 14996     16FF                     l4963:
 14997                           
 14998                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 14999     16FF  300F               	movlw	15
 15000     1700  0021               	movlb	1	; select bank1
 15001     1701  00E8               	movwf	(_I2C1_Status^(0+128)+26)
 15002     1702                     l4965:
 15003                           
 15004                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = i2c1_fsmStateTable[I2C1
      +                          _Status.state]();
 15005     1702  0021               	movlb	1	; select bank1
 15006     1703  0868               	movf	(_I2C1_Status^(0+128)+26),w
 15007     1704  00FA               	movwf	??_I2C1_MasterFsm
 15008     1705  01FB               	clrf	??_I2C1_MasterFsm+1
 15009     1706  35FA               	lslf	??_I2C1_MasterFsm,f
 15010     1707  0DFB               	rlf	??_I2C1_MasterFsm+1,f
 15011     1708  3000               	movlw	low _i2c1_fsmStateTable
 15012     1709  077A               	addwf	??_I2C1_MasterFsm,w
 15013     170A  0084               	movwf	4
 15014     170B  3018               	movlw	high _i2c1_fsmStateTable
 15015     170C  3D7B               	addwfc	??_I2C1_MasterFsm+1,w
 15016     170D  3880               	iorlw	128
 15017     170E  0085               	movwf	5
 15018     170F  3F01               	moviw [1]fsr0
 15019     1710  008A               	movwf	10
 15020     1711  3F00               	moviw [0]fsr0
 15021     1712  000A               	callw
 15022     1713  3196               	pagesel	$
 15023     1714  0021               	movlb	1	; select bank1
 15024     1715  00E8               	movwf	(_I2C1_Status^(0+128)+26)
 15025     1716                     l500:
 15026     1716  0008               	return
 15027     1717                     __end_of_I2C1_MasterFsm:
 15028                           
 15029                           	psect	text49
 15030     16C7                     __ptext49:	
 15031 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 15032 ;; Defined at:
 15033 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;		None
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;		None
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  1    wreg      enum E12085
 15040 ;; Registers used:
 15041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;Total ram usage:        2 bytes
 15052 ;; Hardware stack levels used: 1
 15053 ;; Hardware stack levels required when called: 3
 15054 ;; This function calls:
 15055 ;;		Absolute function
 15056 ;;		_I2C1_CallbackReturnReset
 15057 ;;		_I2C1_CallbackReturnStop
 15058 ;;		_I2C1_DO_SEND_RESTART
 15059 ;;		_I2C1_DO_SEND_STOP
 15060 ;;		_rd1RegCompleteHandler
 15061 ;;		_rd1RegCompleteHandler@i2c1_master_example$F264
 15062 ;;		_rd2RegCompleteHandler
 15063 ;;		_rd2RegCompleteHandler@i2c1_master_example$F275
 15064 ;;		_rdBlkRegCompleteHandler
 15065 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F298
 15066 ;;		_wr1RegCompleteHandler
 15067 ;;		_wr1RegCompleteHandler@i2c1_master_example$F281
 15068 ;;		_wr2RegCompleteHandler
 15069 ;;		_wr2RegCompleteHandler@i2c1_master_example$F287
 15070 ;; This function is called by:
 15071 ;;		_I2C1_MasterFsm
 15072 ;; This function uses a non-reentrant model
 15073 ;;
 15074                           
 15075     16C7                     _I2C1_DO_ADDRESS_NACK:	
 15076                           ;psect for function _I2C1_DO_ADDRESS_NACK
 15077                           
 15078     16C7                     l4933:	
 15079                           ;incstack = 0
 15080                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15081                           
 15082                           
 15083                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 15084     16C7  0021               	movlb	1	; select bank1
 15085     16C8  106A               	bcf	(_I2C1_Status^(0+128)+28),0
 15086     16C9                     l4935:
 15087                           
 15088                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 15089     16C9  3002               	movlw	2
 15090     16CA  00E9               	movwf	(_I2C1_Status^(0+128)+27)
 15091                           
 15092                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 15093     16CB  2ED4               	goto	l4947
 15094     16CC                     l4937:
 15095                           
 15096                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 15097     16CC  3193  23DC  3196   	fcall	_I2C1_DO_SEND_RESTART
 15098     16CF  2EEE               	goto	l591
 15099     16D0                     l4941:
 15100                           
 15101                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 15102     16D0  3193  23E1  3196   	fcall	_I2C1_DO_SEND_STOP
 15103     16D3  2EEE               	goto	l591
 15104     16D4                     l4947:
 15105     16D4  085C               	movf	(low ((_I2C1_Status| 0+14)))^(0+128),w
 15106     16D5  00F7               	movwf	I2C1_CallbackReturnReset@funPtr
 15107     16D6  3004               	movlw	4
 15108     16D7  3ECE               	addlw	(low (_I2C1_Status| 0))& (0+255)
 15109     16D8  0086               	movwf	6
 15110     16D9  0187               	clrf	7
 15111     16DA  3F41               	moviw [1]fsr1
 15112     16DB  008A               	movwf	10
 15113     16DC  3F40               	moviw [0]fsr1
 15114     16DD  000A               	callw
 15115     16DE  3196               	pagesel	$
 15116     16DF  00F8               	movwf	??_I2C1_DO_ADDRESS_NACK
 15117     16E0  01F9               	clrf	??_I2C1_DO_ADDRESS_NACK+1
 15118                           
 15119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15120                           ; Switch size 1, requested type "simple"
 15121                           ; Number of cases is 1, Range of values is 0 to 0
 15122                           ; switch strategies available:
 15123                           ; Name         Instructions Cycles
 15124                           ; simple_byte            4     3 (average)
 15125                           ; direct_byte            8     6 (fixed)
 15126                           ; jumptable            260     6 (fixed)
 15127                           ;	Chosen strategy is simple_byte
 15128     16E1  0879               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 15129     16E2  3A00               	xorlw	0	; case 0
 15130     16E3  1903               	skipnz
 15131     16E4  2EE6               	goto	l6883
 15132     16E5  2ED0               	goto	l4941
 15133     16E6                     l6883:
 15134                           
 15135                           ; Switch size 1, requested type "simple"
 15136                           ; Number of cases is 2, Range of values is 2 to 3
 15137                           ; switch strategies available:
 15138                           ; Name         Instructions Cycles
 15139                           ; simple_byte            7     4 (average)
 15140                           ; direct_byte           13     9 (fixed)
 15141                           ; jumptable            263     9 (fixed)
 15142                           ;	Chosen strategy is simple_byte
 15143     16E6  0878               	movf	??_I2C1_DO_ADDRESS_NACK,w
 15144     16E7  3A02               	xorlw	2	; case 2
 15145     16E8  1903               	skipnz
 15146     16E9  2ECC               	goto	l4937
 15147     16EA  3A01               	xorlw	1	; case 3
 15148     16EB  1903               	skipnz
 15149     16EC  2ECC               	goto	l4937
 15150     16ED  2ED0               	goto	l4941
 15151     16EE                     l591:
 15152     16EE  0008               	return
 15153     16EF                     __end_of_I2C1_DO_ADDRESS_NACK:
 15154                           
 15155                           	psect	text50
 15156     13F5                     __ptext50:	
 15157 ;; *************** function _I2C1_DO_RESET *****************
 15158 ;; Defined at:
 15159 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 15160 ;; Parameters:    Size  Location     Type
 15161 ;;		None
 15162 ;; Auto vars:     Size  Location     Type
 15163 ;;		None
 15164 ;; Return value:  Size  Location     Type
 15165 ;;                  1    wreg      enum E12085
 15166 ;; Registers used:
 15167 ;;		wreg, status,2
 15168 ;; Tracked objects:
 15169 ;;		On entry : 0/0
 15170 ;;		On exit  : 0/0
 15171 ;;		Unchanged: 0/0
 15172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15177 ;;Total ram usage:        0 bytes
 15178 ;; Hardware stack levels used: 1
 15179 ;; This function calls:
 15180 ;;		Nothing
 15181 ;; This function is called by:
 15182 ;;		_I2C1_MasterFsm
 15183 ;; This function uses a non-reentrant model
 15184 ;;
 15185                           
 15186     13F5                     _I2C1_DO_RESET:	
 15187                           ;psect for function _I2C1_DO_RESET
 15188                           
 15189     13F5                     l4925:	
 15190                           ;incstack = 0
 15191                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 15192                           
 15193                           
 15194                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 15195     13F5  0021               	movlb	1	; select bank1
 15196     13F6  10EA               	bcf	(_I2C1_Status^(0+128)+28),1
 15197     13F7                     l4927:
 15198                           
 15199                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 15200     13F7  01E9               	clrf	(_I2C1_Status^(0+128)+27)
 15201     13F8                     l4929:
 15202                           
 15203                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 15204     13F8  300E               	movlw	14
 15205     13F9                     l585:
 15206     13F9  0008               	return
 15207     13FA                     __end_of_I2C1_DO_RESET:
 15208                           
 15209                           	psect	text51
 15210     13F0                     __ptext51:	
 15211 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 15212 ;; Defined at:
 15213 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 15214 ;; Parameters:    Size  Location     Type
 15215 ;;		None
 15216 ;; Auto vars:     Size  Location     Type
 15217 ;;		None
 15218 ;; Return value:  Size  Location     Type
 15219 ;;                  1    wreg      enum E12085
 15220 ;; Registers used:
 15221 ;;		wreg, status,2, status,0, pclath, cstack
 15222 ;; Tracked objects:
 15223 ;;		On entry : 0/0
 15224 ;;		On exit  : 0/0
 15225 ;;		Unchanged: 0/0
 15226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15231 ;;Total ram usage:        0 bytes
 15232 ;; Hardware stack levels used: 1
 15233 ;; Hardware stack levels required when called: 1
 15234 ;; This function calls:
 15235 ;;		_I2C1_MasterSendNack
 15236 ;; This function is called by:
 15237 ;;		_I2C1_DO_RX
 15238 ;;		_I2C1_MasterFsm
 15239 ;; This function uses a non-reentrant model
 15240 ;;
 15241                           
 15242     13F0                     _I2C1_DO_RX_NACK_RESTART:	
 15243                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 15244                           
 15245     13F0                     l4763:	
 15246                           ;incstack = 0
 15247                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15248                           
 15249                           
 15250                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 15251     13F0  3193  23B8  3193   	fcall	_I2C1_MasterSendNack
 15252     13F3                     l4765:
 15253                           
 15254                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 15255     13F3  3009               	movlw	9
 15256     13F4                     l582:
 15257     13F4  0008               	return
 15258     13F5                     __end_of_I2C1_DO_RX_NACK_RESTART:
 15259                           
 15260                           	psect	text52
 15261     13EB                     __ptext52:	
 15262 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 15263 ;; Defined at:
 15264 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 15265 ;; Parameters:    Size  Location     Type
 15266 ;;		None
 15267 ;; Auto vars:     Size  Location     Type
 15268 ;;		None
 15269 ;; Return value:  Size  Location     Type
 15270 ;;                  1    wreg      enum E12085
 15271 ;; Registers used:
 15272 ;;		wreg, status,2, status,0, pclath, cstack
 15273 ;; Tracked objects:
 15274 ;;		On entry : 0/0
 15275 ;;		On exit  : 0/0
 15276 ;;		Unchanged: 0/0
 15277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15282 ;;Total ram usage:        0 bytes
 15283 ;; Hardware stack levels used: 1
 15284 ;; Hardware stack levels required when called: 1
 15285 ;; This function calls:
 15286 ;;		_I2C1_MasterSendNack
 15287 ;; This function is called by:
 15288 ;;		_I2C1_DO_RX
 15289 ;;		_I2C1_MasterFsm
 15290 ;; This function uses a non-reentrant model
 15291 ;;
 15292                           
 15293     13EB                     _I2C1_DO_RX_NACK_STOP:	
 15294                           ;psect for function _I2C1_DO_RX_NACK_STOP
 15295                           
 15296     13EB                     l4769:	
 15297                           ;incstack = 0
 15298                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 15299                           
 15300                           
 15301                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 15302     13EB  3193  23B8  3193   	fcall	_I2C1_MasterSendNack
 15303     13EE                     l4771:
 15304                           
 15305                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 15306     13EE  300A               	movlw	10
 15307     13EF                     l579:
 15308     13EF  0008               	return
 15309     13F0                     __end_of_I2C1_DO_RX_NACK_STOP:
 15310                           
 15311                           	psect	text53
 15312     13E6                     __ptext53:	
 15313 ;; *************** function _I2C1_DO_RX_ACK *****************
 15314 ;; Defined at:
 15315 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 15316 ;; Parameters:    Size  Location     Type
 15317 ;;		None
 15318 ;; Auto vars:     Size  Location     Type
 15319 ;;		None
 15320 ;; Return value:  Size  Location     Type
 15321 ;;                  1    wreg      enum E12085
 15322 ;; Registers used:
 15323 ;;		wreg, status,2, status,0, pclath, cstack
 15324 ;; Tracked objects:
 15325 ;;		On entry : 0/0
 15326 ;;		On exit  : 0/0
 15327 ;;		Unchanged: 0/0
 15328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15333 ;;Total ram usage:        0 bytes
 15334 ;; Hardware stack levels used: 1
 15335 ;; Hardware stack levels required when called: 1
 15336 ;; This function calls:
 15337 ;;		_I2C1_MasterSendAck
 15338 ;; This function is called by:
 15339 ;;		_I2C1_MasterFsm
 15340 ;; This function uses a non-reentrant model
 15341 ;;
 15342                           
 15343     13E6                     _I2C1_DO_RX_ACK:	
 15344                           ;psect for function _I2C1_DO_RX_ACK
 15345                           
 15346     13E6                     l4919:	
 15347                           ;incstack = 0
 15348                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 15349                           
 15350                           
 15351                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 15352     13E6  3193  23BC  3193   	fcall	_I2C1_MasterSendAck
 15353     13E9                     l4921:
 15354                           
 15355                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 15356     13E9  3005               	movlw	5
 15357     13EA                     l576:
 15358     13EA  0008               	return
 15359     13EB                     __end_of_I2C1_DO_RX_ACK:
 15360                           
 15361                           	psect	text54
 15362     13E1                     __ptext54:	
 15363 ;; *************** function _I2C1_DO_SEND_STOP *****************
 15364 ;; Defined at:
 15365 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 15366 ;; Parameters:    Size  Location     Type
 15367 ;;		None
 15368 ;; Auto vars:     Size  Location     Type
 15369 ;;		None
 15370 ;; Return value:  Size  Location     Type
 15371 ;;                  1    wreg      enum E12085
 15372 ;; Registers used:
 15373 ;;		wreg, status,2, status,0, pclath, cstack
 15374 ;; Tracked objects:
 15375 ;;		On entry : 0/0
 15376 ;;		On exit  : 0/0
 15377 ;;		Unchanged: 0/0
 15378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15383 ;;Total ram usage:        0 bytes
 15384 ;; Hardware stack levels used: 1
 15385 ;; Hardware stack levels required when called: 1
 15386 ;; This function calls:
 15387 ;;		_I2C1_MasterStop
 15388 ;; This function is called by:
 15389 ;;		_I2C1_DO_TX
 15390 ;;		_I2C1_DO_TX_EMPTY
 15391 ;;		_I2C1_DO_ADDRESS_NACK
 15392 ;;		_I2C1_MasterFsm
 15393 ;; This function uses a non-reentrant model
 15394 ;;
 15395                           
 15396     13E1                     _I2C1_DO_SEND_STOP:	
 15397                           ;psect for function _I2C1_DO_SEND_STOP
 15398                           
 15399     13E1                     l4751:	
 15400                           ;incstack = 0
 15401                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 15402                           
 15403                           
 15404                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 15405     13E1  3193  23A6  3193   	fcall	_I2C1_MasterStop
 15406     13E4                     l4753:
 15407                           
 15408                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 15409     13E4  3000               	movlw	0
 15410     13E5                     l573:
 15411     13E5  0008               	return
 15412     13E6                     __end_of_I2C1_DO_SEND_STOP:
 15413                           
 15414                           	psect	text55
 15415     13DC                     __ptext55:	
 15416 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 15417 ;; Defined at:
 15418 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 15419 ;; Parameters:    Size  Location     Type
 15420 ;;		None
 15421 ;; Auto vars:     Size  Location     Type
 15422 ;;		None
 15423 ;; Return value:  Size  Location     Type
 15424 ;;                  1    wreg      enum E12085
 15425 ;; Registers used:
 15426 ;;		wreg, status,2, status,0, pclath, cstack
 15427 ;; Tracked objects:
 15428 ;;		On entry : 0/0
 15429 ;;		On exit  : 0/0
 15430 ;;		Unchanged: 0/0
 15431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15436 ;;Total ram usage:        0 bytes
 15437 ;; Hardware stack levels used: 1
 15438 ;; Hardware stack levels required when called: 1
 15439 ;; This function calls:
 15440 ;;		_I2C1_MasterEnableRestart
 15441 ;; This function is called by:
 15442 ;;		_I2C1_DO_TX_EMPTY
 15443 ;;		_I2C1_DO_ADDRESS_NACK
 15444 ;;		_I2C1_MasterFsm
 15445 ;; This function uses a non-reentrant model
 15446 ;;
 15447                           
 15448     13DC                     _I2C1_DO_SEND_RESTART:	
 15449                           ;psect for function _I2C1_DO_SEND_RESTART
 15450                           
 15451     13DC                     l4777:	
 15452                           ;incstack = 0
 15453                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 15454                           
 15455                           
 15456                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 15457     13DC  3193  23A3  3193   	fcall	_I2C1_MasterEnableRestart
 15458     13DF                     l4779:
 15459                           
 15460                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 15461     13DF  3001               	movlw	1
 15462     13E0                     l570:
 15463     13E0  0008               	return
 15464     13E1                     __end_of_I2C1_DO_SEND_RESTART:
 15465                           
 15466                           	psect	text56
 15467     13D7                     __ptext56:	
 15468 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 15469 ;; Defined at:
 15470 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 15471 ;; Parameters:    Size  Location     Type
 15472 ;;		None
 15473 ;; Auto vars:     Size  Location     Type
 15474 ;;		None
 15475 ;; Return value:  Size  Location     Type
 15476 ;;                  1    wreg      enum E12085
 15477 ;; Registers used:
 15478 ;;		wreg, status,2, status,0, pclath, cstack
 15479 ;; Tracked objects:
 15480 ;;		On entry : 0/0
 15481 ;;		On exit  : 0/0
 15482 ;;		Unchanged: 0/0
 15483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;Total ram usage:        0 bytes
 15489 ;; Hardware stack levels used: 1
 15490 ;; Hardware stack levels required when called: 1
 15491 ;; This function calls:
 15492 ;;		_I2C1_MasterEnableRestart
 15493 ;; This function is called by:
 15494 ;;		_I2C1_DO_TX
 15495 ;;		_I2C1_MasterFsm
 15496 ;; This function uses a non-reentrant model
 15497 ;;
 15498                           
 15499     13D7                     _I2C1_DO_SEND_RESTART_WRITE:	
 15500                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 15501                           
 15502     13D7                     l4745:	
 15503                           ;incstack = 0
 15504                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 15505                           
 15506                           
 15507                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 15508     13D7  3193  23A3  3193   	fcall	_I2C1_MasterEnableRestart
 15509     13DA                     l4747:
 15510                           
 15511                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 15512     13DA  3002               	movlw	2
 15513     13DB                     l567:
 15514     13DB  0008               	return
 15515     13DC                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 15516                           
 15517                           	psect	text57
 15518     13D2                     __ptext57:	
 15519 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 15520 ;; Defined at:
 15521 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 15522 ;; Parameters:    Size  Location     Type
 15523 ;;		None
 15524 ;; Auto vars:     Size  Location     Type
 15525 ;;		None
 15526 ;; Return value:  Size  Location     Type
 15527 ;;                  1    wreg      enum E12085
 15528 ;; Registers used:
 15529 ;;		wreg, status,2, status,0, pclath, cstack
 15530 ;; Tracked objects:
 15531 ;;		On entry : 0/0
 15532 ;;		On exit  : 0/0
 15533 ;;		Unchanged: 0/0
 15534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15539 ;;Total ram usage:        0 bytes
 15540 ;; Hardware stack levels used: 1
 15541 ;; Hardware stack levels required when called: 1
 15542 ;; This function calls:
 15543 ;;		_I2C1_MasterEnableRestart
 15544 ;; This function is called by:
 15545 ;;		_I2C1_DO_TX
 15546 ;;		_I2C1_MasterFsm
 15547 ;; This function uses a non-reentrant model
 15548 ;;
 15549                           
 15550     13D2                     _I2C1_DO_SEND_RESTART_READ:	
 15551                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 15552                           
 15553     13D2                     l4739:	
 15554                           ;incstack = 0
 15555                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 15556                           
 15557                           
 15558                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 15559     13D2  3193  23A3  3193   	fcall	_I2C1_MasterEnableRestart
 15560     13D5                     l4741:
 15561                           
 15562                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 15563     13D5  3001               	movlw	1
 15564     13D6                     l564:
 15565     13D6  0008               	return
 15566     13D7                     __end_of_I2C1_DO_SEND_RESTART_READ:
 15567                           
 15568                           	psect	text58
 15569     140C                     __ptext58:	
 15570 ;; *************** function _I2C1_DO_RCEN *****************
 15571 ;; Defined at:
 15572 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 15573 ;; Parameters:    Size  Location     Type
 15574 ;;		None
 15575 ;; Auto vars:     Size  Location     Type
 15576 ;;		None
 15577 ;; Return value:  Size  Location     Type
 15578 ;;                  1    wreg      enum E12085
 15579 ;; Registers used:
 15580 ;;		wreg, status,2, status,0, pclath, cstack
 15581 ;; Tracked objects:
 15582 ;;		On entry : 0/0
 15583 ;;		On exit  : 0/0
 15584 ;;		Unchanged: 0/0
 15585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15590 ;;Total ram usage:        0 bytes
 15591 ;; Hardware stack levels used: 1
 15592 ;; Hardware stack levels required when called: 1
 15593 ;; This function calls:
 15594 ;;		_I2C1_MasterStartRx
 15595 ;; This function is called by:
 15596 ;;		_I2C1_MasterFsm
 15597 ;; This function uses a non-reentrant model
 15598 ;;
 15599                           
 15600     140C                     _I2C1_DO_RCEN:	
 15601                           ;psect for function _I2C1_DO_RCEN
 15602                           
 15603     140C                     l4885:	
 15604                           ;incstack = 0
 15605                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 15606                           
 15607                           
 15608                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 15609     140C  0021               	movlb	1	; select bank1
 15610     140D  106A               	bcf	(_I2C1_Status^(0+128)+28),0
 15611     140E                     l4887:
 15612                           
 15613                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 15614     140E  3193  23A9  3194   	fcall	_I2C1_MasterStartRx
 15615     1411                     l4889:
 15616                           
 15617                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 15618     1411  3004               	movlw	4
 15619     1412                     l540:
 15620     1412  0008               	return
 15621     1413                     __end_of_I2C1_DO_RCEN:
 15622                           
 15623                           	psect	text59
 15624     09C1                     __ptext59:	
 15625 ;; *************** function _I2C1_DO_RX *****************
 15626 ;; Defined at:
 15627 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;		None
 15630 ;; Auto vars:     Size  Location     Type
 15631 ;;		None
 15632 ;; Return value:  Size  Location     Type
 15633 ;;                  1    wreg      enum E12085
 15634 ;; Registers used:
 15635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15636 ;; Tracked objects:
 15637 ;;		On entry : 0/0
 15638 ;;		On exit  : 0/0
 15639 ;;		Unchanged: 0/0
 15640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15645 ;;Total ram usage:        2 bytes
 15646 ;; Hardware stack levels used: 1
 15647 ;; Hardware stack levels required when called: 3
 15648 ;; This function calls:
 15649 ;;		Absolute function
 15650 ;;		_I2C1_CallbackReturnReset
 15651 ;;		_I2C1_CallbackReturnStop
 15652 ;;		_I2C1_DO_RX_NACK_RESTART
 15653 ;;		_I2C1_DO_RX_NACK_STOP
 15654 ;;		_I2C1_MasterGetRxData
 15655 ;;		_I2C1_MasterSendAck
 15656 ;;		_rd1RegCompleteHandler
 15657 ;;		_rd1RegCompleteHandler@i2c1_master_example$F264
 15658 ;;		_rd2RegCompleteHandler
 15659 ;;		_rd2RegCompleteHandler@i2c1_master_example$F275
 15660 ;;		_rdBlkRegCompleteHandler
 15661 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F298
 15662 ;;		_wr1RegCompleteHandler
 15663 ;;		_wr1RegCompleteHandler@i2c1_master_example$F281
 15664 ;;		_wr2RegCompleteHandler
 15665 ;;		_wr2RegCompleteHandler@i2c1_master_example$F287
 15666 ;; This function is called by:
 15667 ;;		_I2C1_MasterFsm
 15668 ;; This function uses a non-reentrant model
 15669 ;;
 15670                           
 15671     09C1                     _I2C1_DO_RX:	
 15672                           ;psect for function _I2C1_DO_RX
 15673                           
 15674     09C1                     l4853:	
 15675                           ;incstack = 0
 15676                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15677                           
 15678                           
 15679                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 15680     09C1  0021               	movlb	1	; select bank1
 15681     09C2  0865               	movf	(low ((_I2C1_Status| 0+23)))^(0+128),w
 15682     09C3  0086               	movwf	6
 15683     09C4  0187               	clrf	7
 15684     09C5  3193  23AC  3189   	fcall	_I2C1_MasterGetRxData
 15685     09C8  0081               	movwf	1
 15686     09C9                     l4855:
 15687     09C9  3001               	movlw	1
 15688     09CA  00F8               	movwf	??_I2C1_DO_RX
 15689     09CB  0878               	movf	??_I2C1_DO_RX,w
 15690     09CC  0021               	movlb	1	; select bank1
 15691     09CD  07E5               	addwf	(low ((_I2C1_Status| 0+23)))^(0+128),f
 15692     09CE                     l4857:
 15693                           
 15694                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 15695     09CE  3001               	movlw	1
 15696     09CF  02E6               	subwf	(_I2C1_Status^(0+128)+24),f
 15697     09D0  3000               	movlw	0
 15698     09D1  3BE7               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 15699     09D2  0866               	movf	(_I2C1_Status^(0+128)+24),w
 15700     09D3  0467               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 15701     09D4  1903               	btfsc	3,2
 15702     09D5  29D7               	goto	u1681
 15703     09D6  29D8               	goto	u1680
 15704     09D7                     u1681:
 15705     09D7  29DD               	goto	l528
 15706     09D8                     u1680:
 15707     09D8                     l4859:
 15708                           
 15709                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 15710     09D8  3193  23BC  3189   	fcall	_I2C1_MasterSendAck
 15711     09DB                     l4861:
 15712                           
 15713                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 15714     09DB  3005               	movlw	5
 15715     09DC  2A03               	goto	l529
 15716     09DD                     l528:	
 15717                           ;mcc_generated_files/i2c1_master.c: 386:     else
 15718                           
 15719                           
 15720                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 15721     09DD  15EA               	bsf	(_I2C1_Status^(0+128)+28),3
 15722                           
 15723                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 15724     09DE  29E7               	goto	l4877
 15725     09DF                     l4867:
 15726                           
 15727                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 15728     09DF  3193  23F0  3189   	fcall	_I2C1_DO_RX_NACK_RESTART
 15729     09E2  2A03               	goto	l529
 15730     09E3                     l4871:
 15731                           
 15732                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 15733     09E3  3193  23EB  3189   	fcall	_I2C1_DO_RX_NACK_STOP
 15734     09E6  2A03               	goto	l529
 15735     09E7                     l4877:
 15736     09E7  085A               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 15737     09E8  00F7               	movwf	I2C1_CallbackReturnReset@funPtr
 15738     09E9  084F               	movf	(_I2C1_Status+1)^(0+128),w
 15739     09EA  008A               	movwf	10
 15740     09EB  084E               	movf	_I2C1_Status^(0+128),w
 15741     09EC  000A               	callw
 15742     09ED  3189               	pagesel	$
 15743     09EE  00F8               	movwf	??_I2C1_DO_RX
 15744     09EF  01F9               	clrf	??_I2C1_DO_RX+1
 15745                           
 15746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15747                           ; Switch size 1, requested type "simple"
 15748                           ; Number of cases is 1, Range of values is 0 to 0
 15749                           ; switch strategies available:
 15750                           ; Name         Instructions Cycles
 15751                           ; simple_byte            4     3 (average)
 15752                           ; direct_byte            8     6 (fixed)
 15753                           ; jumptable            260     6 (fixed)
 15754                           ;	Chosen strategy is simple_byte
 15755     09F0  0879               	movf	??_I2C1_DO_RX+1,w
 15756     09F1  3A00               	xorlw	0	; case 0
 15757     09F2  1903               	skipnz
 15758     09F3  29F5               	goto	l6885
 15759     09F4  29E3               	goto	l4871
 15760     09F5                     l6885:
 15761                           
 15762                           ; Switch size 1, requested type "simple"
 15763                           ; Number of cases is 4, Range of values is 1 to 4
 15764                           ; switch strategies available:
 15765                           ; Name         Instructions Cycles
 15766                           ; simple_byte           13     7 (average)
 15767                           ; direct_byte           17     9 (fixed)
 15768                           ; jumptable            263     9 (fixed)
 15769                           ;	Chosen strategy is simple_byte
 15770     09F5  0878               	movf	??_I2C1_DO_RX,w
 15771     09F6  3A01               	xorlw	1	; case 1
 15772     09F7  1903               	skipnz
 15773     09F8  29E3               	goto	l4871
 15774     09F9  3A03               	xorlw	3	; case 2
 15775     09FA  1903               	skipnz
 15776     09FB  29DF               	goto	l4867
 15777     09FC  3A01               	xorlw	1	; case 3
 15778     09FD  1903               	skipnz
 15779     09FE  29DF               	goto	l4867
 15780     09FF  3A07               	xorlw	7	; case 4
 15781     0A00  1903               	skipnz
 15782     0A01  29E3               	goto	l4871
 15783     0A02  29E3               	goto	l4871
 15784     0A03                     l529:
 15785     0A03  0008               	return
 15786     0A04                     __end_of_I2C1_DO_RX:
 15787                           
 15788                           	psect	text60
 15789     0A9C                     __ptext60:	
 15790 ;; *************** function _I2C1_DO_TX *****************
 15791 ;; Defined at:
 15792 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 15793 ;; Parameters:    Size  Location     Type
 15794 ;;		None
 15795 ;; Auto vars:     Size  Location     Type
 15796 ;;		None
 15797 ;; Return value:  Size  Location     Type
 15798 ;;                  1    wreg      enum E12085
 15799 ;; Registers used:
 15800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15801 ;; Tracked objects:
 15802 ;;		On entry : 0/0
 15803 ;;		On exit  : 0/0
 15804 ;;		Unchanged: 0/0
 15805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15810 ;;Total ram usage:        2 bytes
 15811 ;; Hardware stack levels used: 1
 15812 ;; Hardware stack levels required when called: 3
 15813 ;; This function calls:
 15814 ;;		Absolute function
 15815 ;;		_I2C1_CallbackReturnReset
 15816 ;;		_I2C1_CallbackReturnStop
 15817 ;;		_I2C1_DO_SEND_RESTART_READ
 15818 ;;		_I2C1_DO_SEND_RESTART_WRITE
 15819 ;;		_I2C1_DO_SEND_STOP
 15820 ;;		_I2C1_MasterIsNack
 15821 ;;		_I2C1_MasterSendTxData
 15822 ;;		_rd1RegCompleteHandler
 15823 ;;		_rd1RegCompleteHandler@i2c1_master_example$F264
 15824 ;;		_rd2RegCompleteHandler
 15825 ;;		_rd2RegCompleteHandler@i2c1_master_example$F275
 15826 ;;		_rdBlkRegCompleteHandler
 15827 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F298
 15828 ;;		_wr1RegCompleteHandler
 15829 ;;		_wr1RegCompleteHandler@i2c1_master_example$F281
 15830 ;;		_wr2RegCompleteHandler
 15831 ;;		_wr2RegCompleteHandler@i2c1_master_example$F287
 15832 ;; This function is called by:
 15833 ;;		_I2C1_MasterFsm
 15834 ;; This function uses a non-reentrant model
 15835 ;;
 15836                           
 15837     0A9C                     _I2C1_DO_TX:	
 15838                           ;psect for function _I2C1_DO_TX
 15839                           
 15840     0A9C                     l4819:	
 15841                           ;incstack = 0
 15842                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15843                           
 15844                           
 15845                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 15846     0A9C  3193  23FA  318A   	fcall	_I2C1_MasterIsNack
 15847     0A9F  3A00               	xorlw	0
 15848     0AA0  1903               	skipnz
 15849     0AA1  2AA3               	goto	u1661
 15850     0AA2  2AA4               	goto	u1660
 15851     0AA3                     u1661:
 15852     0AA3  2AD2               	goto	l512
 15853     0AA4                     u1660:
 15854     0AA4  2AB1               	goto	l4837
 15855     0AA5                     l4823:
 15856                           
 15857                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 15858     0AA5  3193  23D2  318A   	fcall	_I2C1_DO_SEND_RESTART_READ
 15859     0AA8  2AEE               	goto	l515
 15860     0AA9                     l4827:
 15861                           
 15862                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 15863     0AA9  3193  23D7  318A   	fcall	_I2C1_DO_SEND_RESTART_WRITE
 15864     0AAC  2AEE               	goto	l515
 15865     0AAD                     l4831:
 15866                           
 15867                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 15868     0AAD  3193  23E1  318A   	fcall	_I2C1_DO_SEND_STOP
 15869     0AB0  2AEE               	goto	l515
 15870     0AB1                     l4837:
 15871     0AB1  0021               	movlb	1	; select bank1
 15872     0AB2  085D               	movf	(low ((_I2C1_Status| 0+15)))^(0+128),w
 15873     0AB3  00F7               	movwf	I2C1_CallbackReturnReset@funPtr
 15874     0AB4  3006               	movlw	6
 15875     0AB5  3ECE               	addlw	(low (_I2C1_Status| 0))& (0+255)
 15876     0AB6  0086               	movwf	6
 15877     0AB7  0187               	clrf	7
 15878     0AB8  3F41               	moviw [1]fsr1
 15879     0AB9  008A               	movwf	10
 15880     0ABA  3F40               	moviw [0]fsr1
 15881     0ABB  000A               	callw
 15882     0ABC  318A               	pagesel	$
 15883     0ABD  00F8               	movwf	??_I2C1_DO_TX
 15884     0ABE  01F9               	clrf	??_I2C1_DO_TX+1
 15885                           
 15886                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15887                           ; Switch size 1, requested type "simple"
 15888                           ; Number of cases is 1, Range of values is 0 to 0
 15889                           ; switch strategies available:
 15890                           ; Name         Instructions Cycles
 15891                           ; simple_byte            4     3 (average)
 15892                           ; direct_byte            8     6 (fixed)
 15893                           ; jumptable            260     6 (fixed)
 15894                           ;	Chosen strategy is simple_byte
 15895     0ABF  0879               	movf	??_I2C1_DO_TX+1,w
 15896     0AC0  3A00               	xorlw	0	; case 0
 15897     0AC1  1903               	skipnz
 15898     0AC2  2AC4               	goto	l6887
 15899     0AC3  2AAD               	goto	l4831
 15900     0AC4                     l6887:
 15901                           
 15902                           ; Switch size 1, requested type "simple"
 15903                           ; Number of cases is 4, Range of values is 1 to 4
 15904                           ; switch strategies available:
 15905                           ; Name         Instructions Cycles
 15906                           ; simple_byte           13     7 (average)
 15907                           ; direct_byte           17     9 (fixed)
 15908                           ; jumptable            263     9 (fixed)
 15909                           ;	Chosen strategy is simple_byte
 15910     0AC4  0878               	movf	??_I2C1_DO_TX,w
 15911     0AC5  3A01               	xorlw	1	; case 1
 15912     0AC6  1903               	skipnz
 15913     0AC7  2AAD               	goto	l4831
 15914     0AC8  3A03               	xorlw	3	; case 2
 15915     0AC9  1903               	skipnz
 15916     0ACA  2AA5               	goto	l4823
 15917     0ACB  3A01               	xorlw	1	; case 3
 15918     0ACC  1903               	skipnz
 15919     0ACD  2AA9               	goto	l4827
 15920     0ACE  3A07               	xorlw	7	; case 4
 15921     0ACF  1903               	skipnz
 15922     0AD0  2AAD               	goto	l4831
 15923     0AD1  2AAD               	goto	l4831
 15924     0AD2                     l512:	
 15925                           ;mcc_generated_files/i2c1_master.c: 370:     else
 15926                           
 15927                           
 15928                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 15929     0AD2  0021               	movlb	1	; select bank1
 15930     0AD3  106A               	bcf	(_I2C1_Status^(0+128)+28),0
 15931     0AD4                     l4839:
 15932                           
 15933                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 15934     0AD4  3017               	movlw	23
 15935     0AD5  3ECE               	addlw	(low (_I2C1_Status| 0))& (0+255)
 15936     0AD6  0086               	movwf	6
 15937     0AD7  0187               	clrf	7
 15938     0AD8  3F40               	moviw [0]fsr1
 15939     0AD9  0084               	movwf	4
 15940     0ADA  0185               	clrf	5
 15941     0ADB  0A81               	incf	1,f
 15942     0ADC  0800               	movf	0,w
 15943     0ADD  3193  23C8  318A   	fcall	_I2C1_MasterSendTxData
 15944     0AE0                     l4841:
 15945                           
 15946                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 15947     0AE0  3001               	movlw	1
 15948     0AE1  0021               	movlb	1	; select bank1
 15949     0AE2  02E6               	subwf	(_I2C1_Status^(0+128)+24),f
 15950     0AE3  3000               	movlw	0
 15951     0AE4  3BE7               	subwfb	((_I2C1_Status+1)^(0+128)+24),f
 15952     0AE5  0866               	movf	(_I2C1_Status^(0+128)+24),w
 15953     0AE6  0467               	iorwf	((_I2C1_Status+1)^(0+128)+24),w
 15954     0AE7  1D03               	btfss	3,2
 15955     0AE8  2AEA               	goto	u1671
 15956     0AE9  2AEB               	goto	u1670
 15957     0AEA                     u1671:
 15958     0AEA  2AED               	goto	l4845
 15959     0AEB                     u1670:
 15960     0AEB                     l4843:
 15961     0AEB  3006               	movlw	6
 15962     0AEC  2AEE               	goto	l515
 15963     0AED                     l4845:
 15964     0AED  3003               	movlw	3
 15965     0AEE                     l515:
 15966     0AEE  0008               	return
 15967     0AEF                     __end_of_I2C1_DO_TX:
 15968                           
 15969                           	psect	text61
 15970     141A                     __ptext61:	
 15971 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 15972 ;; Defined at:
 15973 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 15974 ;; Parameters:    Size  Location     Type
 15975 ;;		None
 15976 ;; Auto vars:     Size  Location     Type
 15977 ;;		None
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  1    wreg      enum E12085
 15980 ;; Registers used:
 15981 ;;		wreg, status,2, status,0, pclath, cstack
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 0/0
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15991 ;;Total ram usage:        0 bytes
 15992 ;; Hardware stack levels used: 1
 15993 ;; Hardware stack levels required when called: 1
 15994 ;; This function calls:
 15995 ;;		_I2C1_MasterSendTxData
 15996 ;; This function is called by:
 15997 ;;		_I2C1_MasterFsm
 15998 ;; This function uses a non-reentrant model
 15999 ;;
 16000                           
 16001     141A                     _I2C1_DO_SEND_ADR_WRITE:	
 16002                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 16003                           
 16004     141A                     l4811:	
 16005                           ;incstack = 0
 16006                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16007                           
 16008                           
 16009                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 16010     141A  0021               	movlb	1	; select bank1
 16011     141B  146A               	bsf	(_I2C1_Status^(0+128)+28),0
 16012     141C                     l4813:
 16013                           
 16014                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1));
 16015     141C  3564               	lslf	(_I2C1_Status^(0+128)+22),w
 16016     141D  3193  23C8  3194   	fcall	_I2C1_MasterSendTxData
 16017     1420                     l4815:
 16018                           
 16019                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 16020     1420  3003               	movlw	3
 16021     1421                     l509:
 16022     1421  0008               	return
 16023     1422                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 16024                           
 16025                           	psect	text62
 16026     142A                     __ptext62:	
 16027 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 16028 ;; Defined at:
 16029 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 16030 ;; Parameters:    Size  Location     Type
 16031 ;;		None
 16032 ;; Auto vars:     Size  Location     Type
 16033 ;;		None
 16034 ;; Return value:  Size  Location     Type
 16035 ;;                  1    wreg      enum E12085
 16036 ;; Registers used:
 16037 ;;		wreg, status,2, status,0, pclath, cstack
 16038 ;; Tracked objects:
 16039 ;;		On entry : 0/0
 16040 ;;		On exit  : 0/0
 16041 ;;		Unchanged: 0/0
 16042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16047 ;;Total ram usage:        0 bytes
 16048 ;; Hardware stack levels used: 1
 16049 ;; Hardware stack levels required when called: 1
 16050 ;; This function calls:
 16051 ;;		_I2C1_MasterSendTxData
 16052 ;; This function is called by:
 16053 ;;		_I2C1_MasterFsm
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057     142A                     _I2C1_DO_SEND_ADR_READ:	
 16058                           ;psect for function _I2C1_DO_SEND_ADR_READ
 16059                           
 16060     142A                     l4803:	
 16061                           ;incstack = 0
 16062                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 16063                           
 16064                           
 16065                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 16066     142A  0021               	movlb	1	; select bank1
 16067     142B  146A               	bsf	(_I2C1_Status^(0+128)+28),0
 16068     142C                     l4805:
 16069                           
 16070                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData((uint8_t) (I2C1_Statu
      +                          s.address << 1 | 1));
 16071     142C  1403               	setc
 16072     142D  0D64               	rlf	(_I2C1_Status^(0+128)+22),w
 16073     142E  3193  23C8  3194   	fcall	_I2C1_MasterSendTxData
 16074     1431                     l4807:
 16075                           
 16076                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 16077     1431  3005               	movlw	5
 16078     1432                     l506:
 16079     1432  0008               	return
 16080     1433                     __end_of_I2C1_DO_SEND_ADR_READ:
 16081                           
 16082                           	psect	text63
 16083     13CD                     __ptext63:	
 16084 ;; *************** function _I2C1_DO_IDLE *****************
 16085 ;; Defined at:
 16086 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 16087 ;; Parameters:    Size  Location     Type
 16088 ;;		None
 16089 ;; Auto vars:     Size  Location     Type
 16090 ;;		None
 16091 ;; Return value:  Size  Location     Type
 16092 ;;                  1    wreg      enum E12085
 16093 ;; Registers used:
 16094 ;;		wreg, status,2
 16095 ;; Tracked objects:
 16096 ;;		On entry : 0/0
 16097 ;;		On exit  : 0/0
 16098 ;;		Unchanged: 0/0
 16099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16104 ;;Total ram usage:        0 bytes
 16105 ;; Hardware stack levels used: 1
 16106 ;; This function calls:
 16107 ;;		Nothing
 16108 ;; This function is called by:
 16109 ;;		_I2C1_MasterFsm
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113     13CD                     _I2C1_DO_IDLE:	
 16114                           ;psect for function _I2C1_DO_IDLE
 16115                           
 16116     13CD                     l4795:	
 16117                           ;incstack = 0
 16118                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 16119                           
 16120                           
 16121                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 16122     13CD  0021               	movlb	1	; select bank1
 16123     13CE  10EA               	bcf	(_I2C1_Status^(0+128)+28),1
 16124     13CF                     l4797:
 16125                           
 16126                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 16127     13CF  01E9               	clrf	(_I2C1_Status^(0+128)+27)
 16128     13D0                     l4799:
 16129                           
 16130                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 16131     13D0  300E               	movlw	14
 16132     13D1                     l503:
 16133     13D1  0008               	return
 16134     13D2                     __end_of_I2C1_DO_IDLE:
 16135                           
 16136                           	psect	text64
 16137     1717                     __ptext64:	
 16138 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 16139 ;; Defined at:
 16140 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 16141 ;; Parameters:    Size  Location     Type
 16142 ;;		None
 16143 ;; Auto vars:     Size  Location     Type
 16144 ;;		None
 16145 ;; Return value:  Size  Location     Type
 16146 ;;                  1    wreg      enum E12085
 16147 ;; Registers used:
 16148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16149 ;; Tracked objects:
 16150 ;;		On entry : 0/0
 16151 ;;		On exit  : 0/0
 16152 ;;		Unchanged: 0/0
 16153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16157 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16158 ;;Total ram usage:        2 bytes
 16159 ;; Hardware stack levels used: 1
 16160 ;; Hardware stack levels required when called: 3
 16161 ;; This function calls:
 16162 ;;		Absolute function
 16163 ;;		_I2C1_CallbackReturnReset
 16164 ;;		_I2C1_CallbackReturnStop
 16165 ;;		_I2C1_DO_SEND_RESTART
 16166 ;;		_I2C1_DO_SEND_STOP
 16167 ;;		_I2C1_MasterSetIrq
 16168 ;;		_rd1RegCompleteHandler
 16169 ;;		_rd1RegCompleteHandler@i2c1_master_example$F264
 16170 ;;		_rd2RegCompleteHandler
 16171 ;;		_rd2RegCompleteHandler@i2c1_master_example$F275
 16172 ;;		_rdBlkRegCompleteHandler
 16173 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F298
 16174 ;;		_wr1RegCompleteHandler
 16175 ;;		_wr1RegCompleteHandler@i2c1_master_example$F281
 16176 ;;		_wr2RegCompleteHandler
 16177 ;;		_wr2RegCompleteHandler@i2c1_master_example$F287
 16178 ;; This function is called by:
 16179 ;;		_I2C1_MasterFsm
 16180 ;; This function uses a non-reentrant model
 16181 ;;
 16182                           
 16183     1717                     _I2C1_DO_TX_EMPTY:	
 16184                           ;psect for function _I2C1_DO_TX_EMPTY
 16185                           
 16186     1717                     l4893:	
 16187                           ;incstack = 0
 16188                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16189                           
 16190                           
 16191                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 16192     1717  0021               	movlb	1	; select bank1
 16193     1718  15EA               	bsf	(_I2C1_Status^(0+128)+28),3
 16194                           
 16195                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 16196     1719  2F27               	goto	l4911
 16197     171A                     l4895:
 16198                           
 16199                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 16200     171A  3193  23DC  3197   	fcall	_I2C1_DO_SEND_RESTART
 16201     171D  2F43               	goto	l546
 16202     171E                     l4899:
 16203                           
 16204                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 16205     171E  3193  23AF  3197   	fcall	_I2C1_MasterSetIrq
 16206     1721                     l4901:
 16207                           
 16208                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 16209     1721  3003               	movlw	3
 16210     1722  2F43               	goto	l546
 16211     1723                     l4905:
 16212                           
 16213                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 16214     1723  3193  23E1  3197   	fcall	_I2C1_DO_SEND_STOP
 16215     1726  2F43               	goto	l546
 16216     1727                     l4911:
 16217     1727  085A               	movf	(low ((_I2C1_Status| 0+12)))^(0+128),w
 16218     1728  00F7               	movwf	I2C1_CallbackReturnReset@funPtr
 16219     1729  084F               	movf	(_I2C1_Status+1)^(0+128),w
 16220     172A  008A               	movwf	10
 16221     172B  084E               	movf	_I2C1_Status^(0+128),w
 16222     172C  000A               	callw
 16223     172D  3197               	pagesel	$
 16224     172E  00F8               	movwf	??_I2C1_DO_TX_EMPTY
 16225     172F  01F9               	clrf	??_I2C1_DO_TX_EMPTY+1
 16226                           
 16227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16228                           ; Switch size 1, requested type "simple"
 16229                           ; Number of cases is 1, Range of values is 0 to 0
 16230                           ; switch strategies available:
 16231                           ; Name         Instructions Cycles
 16232                           ; simple_byte            4     3 (average)
 16233                           ; direct_byte            8     6 (fixed)
 16234                           ; jumptable            260     6 (fixed)
 16235                           ;	Chosen strategy is simple_byte
 16236     1730  0879               	movf	??_I2C1_DO_TX_EMPTY+1,w
 16237     1731  3A00               	xorlw	0	; case 0
 16238     1732  1903               	skipnz
 16239     1733  2F35               	goto	l6889
 16240     1734  2F23               	goto	l4905
 16241     1735                     l6889:
 16242                           
 16243                           ; Switch size 1, requested type "simple"
 16244                           ; Number of cases is 4, Range of values is 1 to 4
 16245                           ; switch strategies available:
 16246                           ; Name         Instructions Cycles
 16247                           ; simple_byte           13     7 (average)
 16248                           ; direct_byte           17     9 (fixed)
 16249                           ; jumptable            263     9 (fixed)
 16250                           ;	Chosen strategy is simple_byte
 16251     1735  0878               	movf	??_I2C1_DO_TX_EMPTY,w
 16252     1736  3A01               	xorlw	1	; case 1
 16253     1737  1903               	skipnz
 16254     1738  2F23               	goto	l4905
 16255     1739  3A03               	xorlw	3	; case 2
 16256     173A  1903               	skipnz
 16257     173B  2F1A               	goto	l4895
 16258     173C  3A01               	xorlw	1	; case 3
 16259     173D  1903               	skipnz
 16260     173E  2F1A               	goto	l4895
 16261     173F  3A07               	xorlw	7	; case 4
 16262     1740  1903               	skipnz
 16263     1741  2F1E               	goto	l4899
 16264     1742  2F23               	goto	l4905
 16265     1743                     l546:
 16266     1743  0008               	return
 16267     1744                     __end_of_I2C1_DO_TX_EMPTY:
 16268                           
 16269                           	psect	text65
 16270     13AF                     __ptext65:	
 16271 ;; *************** function _I2C1_MasterSetIrq *****************
 16272 ;; Defined at:
 16273 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 16274 ;; Parameters:    Size  Location     Type
 16275 ;;		None
 16276 ;; Auto vars:     Size  Location     Type
 16277 ;;		None
 16278 ;; Return value:  Size  Location     Type
 16279 ;;                  1    wreg      void 
 16280 ;; Registers used:
 16281 ;;		None
 16282 ;; Tracked objects:
 16283 ;;		On entry : 0/0
 16284 ;;		On exit  : 0/0
 16285 ;;		Unchanged: 0/0
 16286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16291 ;;Total ram usage:        0 bytes
 16292 ;; Hardware stack levels used: 1
 16293 ;; This function calls:
 16294 ;;		Nothing
 16295 ;; This function is called by:
 16296 ;;		_I2C1_DO_TX_EMPTY
 16297 ;; This function uses a non-reentrant model
 16298 ;;
 16299                           
 16300     13AF                     _I2C1_MasterSetIrq:	
 16301                           ;psect for function _I2C1_MasterSetIrq
 16302                           
 16303     13AF                     l4783:	
 16304                           ;incstack = 0
 16305                           ; Regs used in _I2C1_MasterSetIrq: []
 16306                           
 16307                           
 16308                           ;mcc_generated_files/i2c1_master.c: 647:     PIR3bits.SSP1IF = 1;
 16309     13AF  002E               	movlb	14	; select bank14
 16310     13B0  140F               	bsf	15,0	;volatile
 16311     13B1                     l666:
 16312     13B1  0008               	return
 16313     13B2                     __end_of_I2C1_MasterSetIrq:
 16314                           
 16315                           	psect	text66
 16316     13FA                     __ptext66:	
 16317 ;; *************** function _I2C1_MasterIsNack *****************
 16318 ;; Defined at:
 16319 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 16320 ;; Parameters:    Size  Location     Type
 16321 ;;		None
 16322 ;; Auto vars:     Size  Location     Type
 16323 ;;		None
 16324 ;; Return value:  Size  Location     Type
 16325 ;;                  1    wreg      _Bool 
 16326 ;; Registers used:
 16327 ;;		wreg, status,2, status,0
 16328 ;; Tracked objects:
 16329 ;;		On entry : 0/0
 16330 ;;		On exit  : 0/0
 16331 ;;		Unchanged: 0/0
 16332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16337 ;;Total ram usage:        0 bytes
 16338 ;; Hardware stack levels used: 1
 16339 ;; This function calls:
 16340 ;;		Nothing
 16341 ;; This function is called by:
 16342 ;;		_I2C1_MasterFsm
 16343 ;;		_I2C1_DO_TX
 16344 ;; This function uses a non-reentrant model
 16345 ;;
 16346                           
 16347     13FA                     _I2C1_MasterIsNack:	
 16348                           ;psect for function _I2C1_MasterIsNack
 16349                           
 16350     13FA                     l4733:	
 16351                           ;incstack = 0
 16352                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 16353                           
 16354                           
 16355                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 16356     13FA  0023               	movlb	3	; select bank3
 16357     13FB  0E11               	swapf	17,w	;volatile
 16358     13FC  0C89               	rrf	9,f
 16359     13FD  0C89               	rrf	9,f
 16360     13FE  3901               	andlw	1
 16361     13FF                     l639:
 16362     13FF  0008               	return
 16363     1400                     __end_of_I2C1_MasterIsNack:
 16364                           
 16365                           	psect	text67
 16366     13C8                     __ptext67:	
 16367 ;; *************** function _I2C1_MasterSendTxData *****************
 16368 ;; Defined at:
 16369 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 16370 ;; Parameters:    Size  Location     Type
 16371 ;;  data            1    wreg     unsigned char 
 16372 ;; Auto vars:     Size  Location     Type
 16373 ;;  data            1    0[COMMON] unsigned char 
 16374 ;; Return value:  Size  Location     Type
 16375 ;;                  1    wreg      void 
 16376 ;; Registers used:
 16377 ;;		wreg
 16378 ;; Tracked objects:
 16379 ;;		On entry : 0/0
 16380 ;;		On exit  : 0/0
 16381 ;;		Unchanged: 0/0
 16382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16387 ;;Total ram usage:        1 bytes
 16388 ;; Hardware stack levels used: 1
 16389 ;; This function calls:
 16390 ;;		Nothing
 16391 ;; This function is called by:
 16392 ;;		_I2C1_DO_SEND_ADR_READ
 16393 ;;		_I2C1_DO_SEND_ADR_WRITE
 16394 ;;		_I2C1_DO_TX
 16395 ;; This function uses a non-reentrant model
 16396 ;;
 16397                           
 16398     13C8                     _I2C1_MasterSendTxData:	
 16399                           ;psect for function _I2C1_MasterSendTxData
 16400                           
 16401                           
 16402                           ;incstack = 0
 16403                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 16404                           ;I2C1_MasterSendTxData@data stored from wreg
 16405     13C8  00F0               	movwf	I2C1_MasterSendTxData@data
 16406     13C9                     l4737:
 16407                           
 16408                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 16409     13C9  0870               	movf	I2C1_MasterSendTxData@data,w
 16410     13CA  0023               	movlb	3	; select bank3
 16411     13CB  008C               	movwf	12	;volatile
 16412     13CC                     l621:
 16413     13CC  0008               	return
 16414     13CD                     __end_of_I2C1_MasterSendTxData:
 16415                           
 16416                           	psect	text68
 16417     13BC                     __ptext68:	
 16418 ;; *************** function _I2C1_MasterSendAck *****************
 16419 ;; Defined at:
 16420 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 16421 ;; Parameters:    Size  Location     Type
 16422 ;;		None
 16423 ;; Auto vars:     Size  Location     Type
 16424 ;;		None
 16425 ;; Return value:  Size  Location     Type
 16426 ;;                  1    wreg      void 
 16427 ;; Registers used:
 16428 ;;		None
 16429 ;; Tracked objects:
 16430 ;;		On entry : 0/0
 16431 ;;		On exit  : 0/0
 16432 ;;		Unchanged: 0/0
 16433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16438 ;;Total ram usage:        0 bytes
 16439 ;; Hardware stack levels used: 1
 16440 ;; This function calls:
 16441 ;;		Nothing
 16442 ;; This function is called by:
 16443 ;;		_I2C1_DO_RX
 16444 ;;		_I2C1_DO_RX_ACK
 16445 ;; This function uses a non-reentrant model
 16446 ;;
 16447                           
 16448     13BC                     _I2C1_MasterSendAck:	
 16449                           ;psect for function _I2C1_MasterSendAck
 16450                           
 16451     13BC                     l4761:	
 16452                           ;incstack = 0
 16453                           ; Regs used in _I2C1_MasterSendAck: []
 16454                           
 16455                           
 16456                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 16457     13BC  0023               	movlb	3	; select bank3
 16458     13BD  1291               	bcf	17,5	;volatile
 16459                           
 16460                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 16461     13BE  1611               	bsf	17,4	;volatile
 16462     13BF                     l642:
 16463     13BF  0008               	return
 16464     13C0                     __end_of_I2C1_MasterSendAck:
 16465                           
 16466                           	psect	text69
 16467     13AC                     __ptext69:	
 16468 ;; *************** function _I2C1_MasterGetRxData *****************
 16469 ;; Defined at:
 16470 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 16471 ;; Parameters:    Size  Location     Type
 16472 ;;		None
 16473 ;; Auto vars:     Size  Location     Type
 16474 ;;		None
 16475 ;; Return value:  Size  Location     Type
 16476 ;;                  1    wreg      unsigned char 
 16477 ;; Registers used:
 16478 ;;		wreg
 16479 ;; Tracked objects:
 16480 ;;		On entry : 0/0
 16481 ;;		On exit  : 0/0
 16482 ;;		Unchanged: 0/0
 16483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16488 ;;Total ram usage:        0 bytes
 16489 ;; Hardware stack levels used: 1
 16490 ;; This function calls:
 16491 ;;		Nothing
 16492 ;; This function is called by:
 16493 ;;		_I2C1_DO_RX
 16494 ;; This function uses a non-reentrant model
 16495 ;;
 16496                           
 16497     13AC                     _I2C1_MasterGetRxData:	
 16498                           ;psect for function _I2C1_MasterGetRxData
 16499                           
 16500     13AC                     l4757:	
 16501                           ;incstack = 0
 16502                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 16503                           
 16504                           
 16505                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 16506     13AC  0023               	movlb	3	; select bank3
 16507     13AD  080C               	movf	12,w	;volatile
 16508     13AE                     l618:
 16509     13AE  0008               	return
 16510     13AF                     __end_of_I2C1_MasterGetRxData:
 16511                           
 16512                           	psect	text70
 16513     13B8                     __ptext70:	
 16514 ;; *************** function _I2C1_MasterSendNack *****************
 16515 ;; Defined at:
 16516 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 16517 ;; Parameters:    Size  Location     Type
 16518 ;;		None
 16519 ;; Auto vars:     Size  Location     Type
 16520 ;;		None
 16521 ;; Return value:  Size  Location     Type
 16522 ;;                  1    wreg      void 
 16523 ;; Registers used:
 16524 ;;		None
 16525 ;; Tracked objects:
 16526 ;;		On entry : 0/0
 16527 ;;		On exit  : 0/0
 16528 ;;		Unchanged: 0/0
 16529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16534 ;;Total ram usage:        0 bytes
 16535 ;; Hardware stack levels used: 1
 16536 ;; This function calls:
 16537 ;;		Nothing
 16538 ;; This function is called by:
 16539 ;;		_I2C1_DO_RX_NACK_STOP
 16540 ;;		_I2C1_DO_RX_NACK_RESTART
 16541 ;; This function uses a non-reentrant model
 16542 ;;
 16543                           
 16544     13B8                     _I2C1_MasterSendNack:	
 16545                           ;psect for function _I2C1_MasterSendNack
 16546                           
 16547     13B8                     l4655:	
 16548                           ;incstack = 0
 16549                           ; Regs used in _I2C1_MasterSendNack: []
 16550                           
 16551                           
 16552                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 16553     13B8  0023               	movlb	3	; select bank3
 16554     13B9  1691               	bsf	17,5	;volatile
 16555                           
 16556                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 16557     13BA  1611               	bsf	17,4	;volatile
 16558     13BB                     l645:
 16559     13BB  0008               	return
 16560     13BC                     __end_of_I2C1_MasterSendNack:
 16561                           
 16562                           	psect	text71
 16563     13A9                     __ptext71:	
 16564 ;; *************** function _I2C1_MasterStartRx *****************
 16565 ;; Defined at:
 16566 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 16567 ;; Parameters:    Size  Location     Type
 16568 ;;		None
 16569 ;; Auto vars:     Size  Location     Type
 16570 ;;		None
 16571 ;; Return value:  Size  Location     Type
 16572 ;;                  1    wreg      void 
 16573 ;; Registers used:
 16574 ;;		None
 16575 ;; Tracked objects:
 16576 ;;		On entry : 0/0
 16577 ;;		On exit  : 0/0
 16578 ;;		Unchanged: 0/0
 16579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16584 ;;Total ram usage:        0 bytes
 16585 ;; Hardware stack levels used: 1
 16586 ;; This function calls:
 16587 ;;		Nothing
 16588 ;; This function is called by:
 16589 ;;		_I2C1_DO_RCEN
 16590 ;; This function uses a non-reentrant model
 16591 ;;
 16592                           
 16593     13A9                     _I2C1_MasterStartRx:	
 16594                           ;psect for function _I2C1_MasterStartRx
 16595                           
 16596     13A9                     l4775:	
 16597                           ;incstack = 0
 16598                           ; Regs used in _I2C1_MasterStartRx: []
 16599                           
 16600                           
 16601                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 16602     13A9  0023               	movlb	3	; select bank3
 16603     13AA  1591               	bsf	17,3	;volatile
 16604     13AB                     l630:
 16605     13AB  0008               	return
 16606     13AC                     __end_of_I2C1_MasterStartRx:
 16607                           
 16608                           	psect	text72
 16609     1395                     __ptext72:	
 16610 ;; *************** function _I2C1_CallbackReturnReset *****************
 16611 ;; Defined at:
 16612 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 16613 ;; Parameters:    Size  Location     Type
 16614 ;;  funPtr          1    7[COMMON] PTR void 
 16615 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 16616 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 16617 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16618 ;; Auto vars:     Size  Location     Type
 16619 ;;		None
 16620 ;; Return value:  Size  Location     Type
 16621 ;;                  1    wreg      enum E360
 16622 ;; Registers used:
 16623 ;;		wreg
 16624 ;; Tracked objects:
 16625 ;;		On entry : 0/0
 16626 ;;		On exit  : 0/0
 16627 ;;		Unchanged: 0/0
 16628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16629 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16633 ;;Total ram usage:        1 bytes
 16634 ;; Hardware stack levels used: 1
 16635 ;; This function calls:
 16636 ;;		Nothing
 16637 ;; This function is called by:
 16638 ;;		_I2C1_Open
 16639 ;;		_I2C1_DO_TX
 16640 ;;		_I2C1_DO_RX
 16641 ;;		_I2C1_DO_TX_EMPTY
 16642 ;;		_I2C1_DO_ADDRESS_NACK
 16643 ;;		_I2C1_DO_RX_EMPTY
 16644 ;; This function uses a non-reentrant model
 16645 ;;
 16646                           
 16647     1395                     _I2C1_CallbackReturnReset:	
 16648                           ;psect for function _I2C1_CallbackReturnReset
 16649                           
 16650     1395                     l4789:	
 16651                           ;incstack = 0
 16652                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 16653                           
 16654                           
 16655                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 16656     1395  3005               	movlw	5
 16657     1396                     l602:
 16658     1396  0008               	return
 16659     1397                     __end_of_I2C1_CallbackReturnReset:
 16660                           
 16661                           	psect	text73
 16662     1393                     __ptext73:	
 16663 ;; *************** function _I2C1_CallbackReturnStop *****************
 16664 ;; Defined at:
 16665 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 16666 ;; Parameters:    Size  Location     Type
 16667 ;;  funPtr          1    7[COMMON] PTR void 
 16668 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 16669 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 16670 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16671 ;; Auto vars:     Size  Location     Type
 16672 ;;		None
 16673 ;; Return value:  Size  Location     Type
 16674 ;;                  1    wreg      enum E360
 16675 ;; Registers used:
 16676 ;;		wreg
 16677 ;; Tracked objects:
 16678 ;;		On entry : 0/0
 16679 ;;		On exit  : 0/0
 16680 ;;		Unchanged: 0/0
 16681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16682 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16686 ;;Total ram usage:        1 bytes
 16687 ;; Hardware stack levels used: 1
 16688 ;; This function calls:
 16689 ;;		Nothing
 16690 ;; This function is called by:
 16691 ;;		_I2C1_Open
 16692 ;;		_I2C1_SetCallback
 16693 ;;		_I2C1_DO_TX
 16694 ;;		_I2C1_DO_RX
 16695 ;;		_I2C1_DO_TX_EMPTY
 16696 ;;		_I2C1_DO_ADDRESS_NACK
 16697 ;;		_I2C1_DO_RX_EMPTY
 16698 ;; This function uses a non-reentrant model
 16699 ;;
 16700                           
 16701     1393                     _I2C1_CallbackReturnStop:	
 16702                           ;psect for function _I2C1_CallbackReturnStop
 16703                           
 16704     1393                     l4785:	
 16705                           ;incstack = 0
 16706                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 16707                           
 16708                           
 16709                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 16710     1393  3001               	movlw	1
 16711     1394                     l599:
 16712     1394  0008               	return
 16713     1395                     __end_of_I2C1_CallbackReturnStop:
 16714                           
 16715                           	psect	text74
 16716     15C4                     __ptext74:	
 16717 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F298 *****************
 16718 ;; Defined at:
 16719 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 16720 ;; Parameters:    Size  Location     Type
 16721 ;;  ptr             1    7[COMMON] PTR void 
 16722 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 16723 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 16724 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16725 ;; Auto vars:     Size  Location     Type
 16726 ;;		None
 16727 ;; Return value:  Size  Location     Type
 16728 ;;                  1    wreg      enum E360
 16729 ;; Registers used:
 16730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16731 ;; Tracked objects:
 16732 ;;		On entry : 0/0
 16733 ;;		On exit  : 0/0
 16734 ;;		Unchanged: 0/0
 16735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16736 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16740 ;;Total ram usage:        1 bytes
 16741 ;; Hardware stack levels used: 1
 16742 ;; Hardware stack levels required when called: 2
 16743 ;; This function calls:
 16744 ;;		_I2C1_SetBuffer
 16745 ;;		_I2C1_SetDataCompleteCallback
 16746 ;; This function is called by:
 16747 ;;		_I2C1_ReadDataBlock
 16748 ;;		_I2C1_DO_TX
 16749 ;;		_I2C1_DO_RX
 16750 ;;		_I2C1_DO_TX_EMPTY
 16751 ;;		_I2C1_DO_ADDRESS_NACK
 16752 ;;		_I2C1_DO_RX_EMPTY
 16753 ;; This function uses a non-reentrant model
 16754 ;;
 16755                           
 16756     15C4                     _rdBlkRegCompleteHandler@i2c1_master_example$F298:	
 16757                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F298
 16758                           
 16759     15C4                     l4727:	
 16760                           ;incstack = 0
 16761                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F298: [wreg+fsr1l+fsr1h+stat
      +                          us,2+status,0+pclath+cstack]
 16762                           
 16763                           
 16764                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 16765     15C4  0877               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F298@ptr,w
 16766     15C5  0086               	movwf	6
 16767     15C6  0187               	clrf	7
 16768     15C7  3F40               	moviw [0]fsr1
 16769     15C8  00F0               	movwf	I2C1_SetBuffer@bufferSize
 16770     15C9  3F41               	moviw [1]fsr1
 16771     15CA  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 16772     15CB  0877               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F298@ptr,w
 16773     15CC  3E02               	addlw	2
 16774     15CD  0086               	movwf	6
 16775     15CE  0187               	clrf	7
 16776     15CF  0801               	movf	1,w
 16777     15D0  3194  248D  3195   	fcall	_I2C1_SetBuffer
 16778                           
 16779                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 16780     15D3  3000               	movlw	0
 16781     15D4  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 16782     15D5  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 16783     15D6  01F6               	clrf	I2C1_SetDataCompleteCallback@ptr
 16784     15D7  3194  2446  3195   	fcall	_I2C1_SetDataCompleteCallback
 16785     15DA                     l4729:
 16786                           
 16787                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 16788     15DA  3002               	movlw	2
 16789     15DB                     l227:
 16790     15DB  0008               	return
 16791     15DC                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F298:
 16792                           
 16793                           	psect	text75
 16794     1520                     __ptext75:	
 16795 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F281 *****************
 16796 ;; Defined at:
 16797 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 16798 ;; Parameters:    Size  Location     Type
 16799 ;;  ptr             1    7[COMMON] PTR void 
 16800 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 16801 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 16802 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16803 ;; Auto vars:     Size  Location     Type
 16804 ;;		None
 16805 ;; Return value:  Size  Location     Type
 16806 ;;                  1    wreg      enum E360
 16807 ;; Registers used:
 16808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16809 ;; Tracked objects:
 16810 ;;		On entry : 0/0
 16811 ;;		On exit  : 0/0
 16812 ;;		Unchanged: 0/0
 16813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16814 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16818 ;;Total ram usage:        1 bytes
 16819 ;; Hardware stack levels used: 1
 16820 ;; Hardware stack levels required when called: 2
 16821 ;; This function calls:
 16822 ;;		_I2C1_SetBuffer
 16823 ;;		_I2C1_SetDataCompleteCallback
 16824 ;; This function is called by:
 16825 ;;		_I2C1_Write1ByteRegister
 16826 ;;		_I2C1_DO_TX
 16827 ;;		_I2C1_DO_RX
 16828 ;;		_I2C1_DO_TX_EMPTY
 16829 ;;		_I2C1_DO_ADDRESS_NACK
 16830 ;;		_I2C1_DO_RX_EMPTY
 16831 ;; This function uses a non-reentrant model
 16832 ;;
 16833                           
 16834     1520                     _wr1RegCompleteHandler@i2c1_master_example$F281:	
 16835                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F281
 16836                           
 16837     1520                     l4711:	
 16838                           ;incstack = 0
 16839                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F281: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 16840                           
 16841                           
 16842                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 16843     1520  3001               	movlw	1
 16844     1521  00F0               	movwf	I2C1_SetBuffer@bufferSize
 16845     1522  3000               	movlw	0
 16846     1523  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 16847     1524  0877               	movf	wr1RegCompleteHandler@i2c1_master_example$F281@ptr,w
 16848     1525  3194  248D  3195   	fcall	_I2C1_SetBuffer
 16849     1528                     l4713:
 16850                           
 16851                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 16852     1528  3000               	movlw	0
 16853     1529  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 16854     152A  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 16855     152B  01F6               	clrf	I2C1_SetDataCompleteCallback@ptr
 16856     152C  3194  2446  3195   	fcall	_I2C1_SetDataCompleteCallback
 16857     152F                     l4715:
 16858                           
 16859                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 16860     152F  3004               	movlw	4
 16861     1530                     l221:
 16862     1530  0008               	return
 16863     1531                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F281:
 16864                           
 16865                           	psect	text76
 16866     150F                     __ptext76:	
 16867 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F275 *****************
 16868 ;; Defined at:
 16869 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 16870 ;; Parameters:    Size  Location     Type
 16871 ;;  ptr             1    7[COMMON] PTR void 
 16872 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 16873 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 16874 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16875 ;; Auto vars:     Size  Location     Type
 16876 ;;		None
 16877 ;; Return value:  Size  Location     Type
 16878 ;;                  1    wreg      enum E360
 16879 ;; Registers used:
 16880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16881 ;; Tracked objects:
 16882 ;;		On entry : 0/0
 16883 ;;		On exit  : 0/0
 16884 ;;		Unchanged: 0/0
 16885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16886 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16890 ;;Total ram usage:        1 bytes
 16891 ;; Hardware stack levels used: 1
 16892 ;; Hardware stack levels required when called: 2
 16893 ;; This function calls:
 16894 ;;		_I2C1_SetBuffer
 16895 ;;		_I2C1_SetDataCompleteCallback
 16896 ;; This function is called by:
 16897 ;;		_I2C1_Read2ByteRegister
 16898 ;;		_I2C1_DO_TX
 16899 ;;		_I2C1_DO_RX
 16900 ;;		_I2C1_DO_TX_EMPTY
 16901 ;;		_I2C1_DO_ADDRESS_NACK
 16902 ;;		_I2C1_DO_RX_EMPTY
 16903 ;; This function uses a non-reentrant model
 16904 ;;
 16905                           
 16906     150F                     _rd2RegCompleteHandler@i2c1_master_example$F275:	
 16907                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F275
 16908                           
 16909     150F                     l4703:	
 16910                           ;incstack = 0
 16911                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F275: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 16912                           
 16913                           
 16914                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 16915     150F  3002               	movlw	2
 16916     1510  00F0               	movwf	I2C1_SetBuffer@bufferSize
 16917     1511  3000               	movlw	0
 16918     1512  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 16919     1513  0877               	movf	rd2RegCompleteHandler@i2c1_master_example$F275@ptr,w
 16920     1514  3194  248D  3195   	fcall	_I2C1_SetBuffer
 16921     1517                     l4705:
 16922                           
 16923                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 16924     1517  3000               	movlw	0
 16925     1518  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 16926     1519  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 16927     151A  01F6               	clrf	I2C1_SetDataCompleteCallback@ptr
 16928     151B  3194  2446  3195   	fcall	_I2C1_SetDataCompleteCallback
 16929     151E                     l4707:
 16930                           
 16931                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 16932     151E  3002               	movlw	2
 16933     151F                     l218:
 16934     151F  0008               	return
 16935     1520                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F275:
 16936                           
 16937                           	psect	text77
 16938     14FE                     __ptext77:	
 16939 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F264 *****************
 16940 ;; Defined at:
 16941 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 16942 ;; Parameters:    Size  Location     Type
 16943 ;;  ptr             1    7[COMMON] PTR void 
 16944 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 16945 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 16946 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;		None
 16949 ;; Return value:  Size  Location     Type
 16950 ;;                  1    wreg      enum E360
 16951 ;; Registers used:
 16952 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16953 ;; Tracked objects:
 16954 ;;		On entry : 0/0
 16955 ;;		On exit  : 0/0
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16958 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16962 ;;Total ram usage:        1 bytes
 16963 ;; Hardware stack levels used: 1
 16964 ;; Hardware stack levels required when called: 2
 16965 ;; This function calls:
 16966 ;;		_I2C1_SetBuffer
 16967 ;;		_I2C1_SetDataCompleteCallback
 16968 ;; This function is called by:
 16969 ;;		_I2C1_Read1ByteRegister
 16970 ;;		_I2C1_DO_TX
 16971 ;;		_I2C1_DO_RX
 16972 ;;		_I2C1_DO_TX_EMPTY
 16973 ;;		_I2C1_DO_ADDRESS_NACK
 16974 ;;		_I2C1_DO_RX_EMPTY
 16975 ;; This function uses a non-reentrant model
 16976 ;;
 16977                           
 16978     14FE                     _rd1RegCompleteHandler@i2c1_master_example$F264:	
 16979                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F264
 16980                           
 16981     14FE                     l4695:	
 16982                           ;incstack = 0
 16983                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F264: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 16984                           
 16985                           
 16986                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 16987     14FE  3001               	movlw	1
 16988     14FF  00F0               	movwf	I2C1_SetBuffer@bufferSize
 16989     1500  3000               	movlw	0
 16990     1501  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 16991     1502  0877               	movf	rd1RegCompleteHandler@i2c1_master_example$F264@ptr,w
 16992     1503  3194  248D  3194   	fcall	_I2C1_SetBuffer
 16993     1506                     l4697:
 16994                           
 16995                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 16996     1506  3000               	movlw	0
 16997     1507  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 16998     1508  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 16999     1509  01F6               	clrf	I2C1_SetDataCompleteCallback@ptr
 17000     150A  3194  2446  3194   	fcall	_I2C1_SetDataCompleteCallback
 17001     150D                     l4699:
 17002                           
 17003                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 17004     150D  3002               	movlw	2
 17005     150E                     l215:
 17006     150E  0008               	return
 17007     150F                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F264:
 17008                           
 17009                           	psect	text78
 17010     15AC                     __ptext78:	
 17011 ;; *************** function _rdBlkRegCompleteHandler *****************
 17012 ;; Defined at:
 17013 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17014 ;; Parameters:    Size  Location     Type
 17015 ;;  p               1    7[COMMON] PTR void 
 17016 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17017 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17018 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17019 ;; Auto vars:     Size  Location     Type
 17020 ;;		None
 17021 ;; Return value:  Size  Location     Type
 17022 ;;                  1    wreg      enum E360
 17023 ;; Registers used:
 17024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17025 ;; Tracked objects:
 17026 ;;		On entry : 0/0
 17027 ;;		On exit  : 0/0
 17028 ;;		Unchanged: 0/0
 17029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17030 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17034 ;;Total ram usage:        1 bytes
 17035 ;; Hardware stack levels used: 1
 17036 ;; Hardware stack levels required when called: 2
 17037 ;; This function calls:
 17038 ;;		_I2C1_SetBuffer
 17039 ;;		_I2C1_SetDataCompleteCallback
 17040 ;; This function is called by:
 17041 ;;		_i2c_readDataBlock
 17042 ;;		_I2C1_DO_TX
 17043 ;;		_I2C1_DO_RX
 17044 ;;		_I2C1_DO_TX_EMPTY
 17045 ;;		_I2C1_DO_ADDRESS_NACK
 17046 ;;		_I2C1_DO_RX_EMPTY
 17047 ;; This function uses a non-reentrant model
 17048 ;;
 17049                           
 17050     15AC                     _rdBlkRegCompleteHandler:	
 17051                           ;psect for function _rdBlkRegCompleteHandler
 17052                           
 17053     15AC                     l4689:	
 17054                           ;incstack = 0
 17055                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 17056                           
 17057                           
 17058                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 187:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 17059     15AC  0877               	movf	rdBlkRegCompleteHandler@p,w
 17060     15AD  0086               	movwf	6
 17061     15AE  0187               	clrf	7
 17062     15AF  3F40               	moviw [0]fsr1
 17063     15B0  00F0               	movwf	I2C1_SetBuffer@bufferSize
 17064     15B1  3F41               	moviw [1]fsr1
 17065     15B2  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 17066     15B3  0877               	movf	rdBlkRegCompleteHandler@p,w
 17067     15B4  3E02               	addlw	2
 17068     15B5  0086               	movwf	6
 17069     15B6  0187               	clrf	7
 17070     15B7  0801               	movf	1,w
 17071     15B8  3194  248D  3195   	fcall	_I2C1_SetBuffer
 17072                           
 17073                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 17074     15BB  3000               	movlw	0
 17075     15BC  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 17076     15BD  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 17077     15BE  01F6               	clrf	I2C1_SetDataCompleteCallback@ptr
 17078     15BF  3194  2446  3195   	fcall	_I2C1_SetDataCompleteCallback
 17079     15C2                     l4691:
 17080                           
 17081                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C1_RESTART_READ;
 17082     15C2  3002               	movlw	2
 17083     15C3                     l77:
 17084     15C3  0008               	return
 17085     15C4                     __end_of_rdBlkRegCompleteHandler:
 17086                           
 17087                           	psect	text79
 17088     14ED                     __ptext79:	
 17089 ;; *************** function _wr2RegCompleteHandler *****************
 17090 ;; Defined at:
 17091 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;  p               1    7[COMMON] PTR void 
 17094 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17095 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17096 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17097 ;; Auto vars:     Size  Location     Type
 17098 ;;		None
 17099 ;; Return value:  Size  Location     Type
 17100 ;;                  1    wreg      enum E360
 17101 ;; Registers used:
 17102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17103 ;; Tracked objects:
 17104 ;;		On entry : 0/0
 17105 ;;		On exit  : 0/0
 17106 ;;		Unchanged: 0/0
 17107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17108 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17112 ;;Total ram usage:        1 bytes
 17113 ;; Hardware stack levels used: 1
 17114 ;; Hardware stack levels required when called: 2
 17115 ;; This function calls:
 17116 ;;		_I2C1_SetBuffer
 17117 ;;		_I2C1_SetDataCompleteCallback
 17118 ;; This function is called by:
 17119 ;;		_i2c_write2ByteRegister
 17120 ;;		_I2C1_DO_TX
 17121 ;;		_I2C1_DO_RX
 17122 ;;		_I2C1_DO_TX_EMPTY
 17123 ;;		_I2C1_DO_ADDRESS_NACK
 17124 ;;		_I2C1_DO_RX_EMPTY
 17125 ;; This function uses a non-reentrant model
 17126 ;;
 17127                           
 17128     14ED                     _wr2RegCompleteHandler:	
 17129                           ;psect for function _wr2RegCompleteHandler
 17130                           
 17131     14ED                     l4681:	
 17132                           ;incstack = 0
 17133                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17134                           
 17135                           
 17136                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 153:     I2C1_SetBuffer(p,2);
 17137     14ED  3002               	movlw	2
 17138     14EE  00F0               	movwf	I2C1_SetBuffer@bufferSize
 17139     14EF  3000               	movlw	0
 17140     14F0  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 17141     14F1  0877               	movf	wr2RegCompleteHandler@p,w
 17142     14F2  3194  248D  3194   	fcall	_I2C1_SetBuffer
 17143     14F5                     l4683:
 17144                           
 17145                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 17146     14F5  3000               	movlw	0
 17147     14F6  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 17148     14F7  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 17149     14F8  01F6               	clrf	I2C1_SetDataCompleteCallback@ptr
 17150     14F9  3194  2446  3194   	fcall	_I2C1_SetDataCompleteCallback
 17151     14FC                     l4685:
 17152                           
 17153                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C1_CONTINUE;
 17154     14FC  3004               	movlw	4
 17155     14FD                     l65:
 17156     14FD  0008               	return
 17157     14FE                     __end_of_wr2RegCompleteHandler:
 17158                           
 17159                           	psect	text80
 17160     14DC                     __ptext80:	
 17161 ;; *************** function _rd2RegCompleteHandler *****************
 17162 ;; Defined at:
 17163 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17164 ;; Parameters:    Size  Location     Type
 17165 ;;  p               1    7[COMMON] PTR void 
 17166 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17167 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17168 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17169 ;; Auto vars:     Size  Location     Type
 17170 ;;		None
 17171 ;; Return value:  Size  Location     Type
 17172 ;;                  1    wreg      enum E360
 17173 ;; Registers used:
 17174 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17175 ;; Tracked objects:
 17176 ;;		On entry : 0/0
 17177 ;;		On exit  : 0/0
 17178 ;;		Unchanged: 0/0
 17179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17180 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17184 ;;Total ram usage:        1 bytes
 17185 ;; Hardware stack levels used: 1
 17186 ;; Hardware stack levels required when called: 2
 17187 ;; This function calls:
 17188 ;;		_I2C1_SetBuffer
 17189 ;;		_I2C1_SetDataCompleteCallback
 17190 ;; This function is called by:
 17191 ;;		_i2c_read2ByteRegister
 17192 ;;		_I2C1_DO_TX
 17193 ;;		_I2C1_DO_RX
 17194 ;;		_I2C1_DO_TX_EMPTY
 17195 ;;		_I2C1_DO_ADDRESS_NACK
 17196 ;;		_I2C1_DO_RX_EMPTY
 17197 ;; This function uses a non-reentrant model
 17198 ;;
 17199                           
 17200     14DC                     _rd2RegCompleteHandler:	
 17201                           ;psect for function _rd2RegCompleteHandler
 17202                           
 17203     14DC                     l4673:	
 17204                           ;incstack = 0
 17205                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17206                           
 17207                           
 17208                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c1_operations_t rd2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 121:     I2C1_SetBuffer(p,2);
 17209     14DC  3002               	movlw	2
 17210     14DD  00F0               	movwf	I2C1_SetBuffer@bufferSize
 17211     14DE  3000               	movlw	0
 17212     14DF  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 17213     14E0  0877               	movf	rd2RegCompleteHandler@p,w
 17214     14E1  3194  248D  3194   	fcall	_I2C1_SetBuffer
 17215     14E4                     l4675:
 17216                           
 17217                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 17218     14E4  3000               	movlw	0
 17219     14E5  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 17220     14E6  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 17221     14E7  01F6               	clrf	I2C1_SetDataCompleteCallback@ptr
 17222     14E8  3194  2446  3194   	fcall	_I2C1_SetDataCompleteCallback
 17223     14EB                     l4677:
 17224                           
 17225                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C1_RESTART_READ;
 17226     14EB  3002               	movlw	2
 17227     14EC                     l53:
 17228     14EC  0008               	return
 17229     14ED                     __end_of_rd2RegCompleteHandler:
 17230                           
 17231                           	psect	text81
 17232     14CB                     __ptext81:	
 17233 ;; *************** function _rd1RegCompleteHandler *****************
 17234 ;; Defined at:
 17235 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17236 ;; Parameters:    Size  Location     Type
 17237 ;;  p               1    7[COMMON] PTR void 
 17238 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17239 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17240 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17241 ;; Auto vars:     Size  Location     Type
 17242 ;;		None
 17243 ;; Return value:  Size  Location     Type
 17244 ;;                  1    wreg      enum E360
 17245 ;; Registers used:
 17246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17247 ;; Tracked objects:
 17248 ;;		On entry : 0/0
 17249 ;;		On exit  : 0/0
 17250 ;;		Unchanged: 0/0
 17251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17252 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17256 ;;Total ram usage:        1 bytes
 17257 ;; Hardware stack levels used: 1
 17258 ;; Hardware stack levels required when called: 2
 17259 ;; This function calls:
 17260 ;;		_I2C1_SetBuffer
 17261 ;;		_I2C1_SetDataCompleteCallback
 17262 ;; This function is called by:
 17263 ;;		_i2c_read1ByteRegister
 17264 ;;		_I2C1_DO_TX
 17265 ;;		_I2C1_DO_RX
 17266 ;;		_I2C1_DO_TX_EMPTY
 17267 ;;		_I2C1_DO_ADDRESS_NACK
 17268 ;;		_I2C1_DO_RX_EMPTY
 17269 ;; This function uses a non-reentrant model
 17270 ;;
 17271                           
 17272     14CB                     _rd1RegCompleteHandler:	
 17273                           ;psect for function _rd1RegCompleteHandler
 17274                           
 17275     14CB                     l4665:	
 17276                           ;incstack = 0
 17277                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17278                           
 17279                           
 17280                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 83:     I2C1_SetBuffer(p,1);
 17281     14CB  3001               	movlw	1
 17282     14CC  00F0               	movwf	I2C1_SetBuffer@bufferSize
 17283     14CD  3000               	movlw	0
 17284     14CE  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 17285     14CF  0877               	movf	rd1RegCompleteHandler@p,w
 17286     14D0  3194  248D  3194   	fcall	_I2C1_SetBuffer
 17287     14D3                     l4667:
 17288                           
 17289                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 17290     14D3  3000               	movlw	0
 17291     14D4  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 17292     14D5  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 17293     14D6  01F6               	clrf	I2C1_SetDataCompleteCallback@ptr
 17294     14D7  3194  2446  3194   	fcall	_I2C1_SetDataCompleteCallback
 17295     14DA                     l4669:
 17296                           
 17297                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C1_RESTART_READ;
 17298     14DA  3002               	movlw	2
 17299     14DB                     l38:
 17300     14DB  0008               	return
 17301     14DC                     __end_of_rd1RegCompleteHandler:
 17302                           
 17303                           	psect	text82
 17304     14BA                     __ptext82:	
 17305 ;; *************** function _wr1RegCompleteHandler *****************
 17306 ;; Defined at:
 17307 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 17308 ;; Parameters:    Size  Location     Type
 17309 ;;  p               1    7[COMMON] PTR void 
 17310 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17311 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17312 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17313 ;; Auto vars:     Size  Location     Type
 17314 ;;		None
 17315 ;; Return value:  Size  Location     Type
 17316 ;;                  1    wreg      enum E360
 17317 ;; Registers used:
 17318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17319 ;; Tracked objects:
 17320 ;;		On entry : 0/0
 17321 ;;		On exit  : 0/0
 17322 ;;		Unchanged: 0/0
 17323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17324 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17327 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17328 ;;Total ram usage:        1 bytes
 17329 ;; Hardware stack levels used: 1
 17330 ;; Hardware stack levels required when called: 2
 17331 ;; This function calls:
 17332 ;;		_I2C1_SetBuffer
 17333 ;;		_I2C1_SetDataCompleteCallback
 17334 ;; This function is called by:
 17335 ;;		_i2c_write1ByteRegister
 17336 ;;		_I2C1_DO_TX
 17337 ;;		_I2C1_DO_RX
 17338 ;;		_I2C1_DO_TX_EMPTY
 17339 ;;		_I2C1_DO_ADDRESS_NACK
 17340 ;;		_I2C1_DO_RX_EMPTY
 17341 ;; This function uses a non-reentrant model
 17342 ;;
 17343                           
 17344     14BA                     _wr1RegCompleteHandler:	
 17345                           ;psect for function _wr1RegCompleteHandler
 17346                           
 17347     14BA                     l4657:	
 17348                           ;incstack = 0
 17349                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 17350                           
 17351                           
 17352                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 36:     I2C1_SetBuffer(p,1);
 17353     14BA  3001               	movlw	1
 17354     14BB  00F0               	movwf	I2C1_SetBuffer@bufferSize
 17355     14BC  3000               	movlw	0
 17356     14BD  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 17357     14BE  0877               	movf	wr1RegCompleteHandler@p,w
 17358     14BF  3194  248D  3194   	fcall	_I2C1_SetBuffer
 17359     14C2                     l4659:
 17360                           
 17361                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 17362     14C2  3000               	movlw	0
 17363     14C3  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 17364     14C4  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 17365     14C5  01F6               	clrf	I2C1_SetDataCompleteCallback@ptr
 17366     14C6  3194  2446  3194   	fcall	_I2C1_SetDataCompleteCallback
 17367     14C9                     l4661:
 17368                           
 17369                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C1_CONTINUE;
 17370     14C9  3004               	movlw	4
 17371     14CA                     l17:
 17372     14CA  0008               	return
 17373     14CB                     __end_of_wr1RegCompleteHandler:
 17374                           
 17375                           	psect	text83
 17376     14A9                     __ptext83:	
 17377 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F287 *****************
 17378 ;; Defined at:
 17379 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 17380 ;; Parameters:    Size  Location     Type
 17381 ;;  ptr             1    7[COMMON] PTR void 
 17382 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17383 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17384 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17385 ;; Auto vars:     Size  Location     Type
 17386 ;;		None
 17387 ;; Return value:  Size  Location     Type
 17388 ;;                  1    wreg      enum E360
 17389 ;; Registers used:
 17390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17391 ;; Tracked objects:
 17392 ;;		On entry : 0/0
 17393 ;;		On exit  : 0/0
 17394 ;;		Unchanged: 0/0
 17395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17396 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17400 ;;Total ram usage:        1 bytes
 17401 ;; Hardware stack levels used: 1
 17402 ;; Hardware stack levels required when called: 2
 17403 ;; This function calls:
 17404 ;;		_I2C1_SetBuffer
 17405 ;;		_I2C1_SetDataCompleteCallback
 17406 ;; This function is called by:
 17407 ;;		_I2C1_Write2ByteRegister
 17408 ;;		_I2C1_DO_TX
 17409 ;;		_I2C1_DO_RX
 17410 ;;		_I2C1_DO_TX_EMPTY
 17411 ;;		_I2C1_DO_ADDRESS_NACK
 17412 ;;		_I2C1_DO_RX_EMPTY
 17413 ;; This function uses a non-reentrant model
 17414 ;;
 17415                           
 17416     14A9                     _wr2RegCompleteHandler@i2c1_master_example$F287:	
 17417                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F287
 17418                           
 17419     14A9                     l4719:	
 17420                           ;incstack = 0
 17421                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F287: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 17422                           
 17423                           
 17424                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 17425     14A9  3002               	movlw	2
 17426     14AA  00F0               	movwf	I2C1_SetBuffer@bufferSize
 17427     14AB  3000               	movlw	0
 17428     14AC  00F1               	movwf	I2C1_SetBuffer@bufferSize+1
 17429     14AD  0877               	movf	wr2RegCompleteHandler@i2c1_master_example$F287@ptr,w
 17430     14AE  3194  248D  3194   	fcall	_I2C1_SetBuffer
 17431     14B1                     l4721:
 17432                           
 17433                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 17434     14B1  3000               	movlw	0
 17435     14B2  00F4               	movwf	I2C1_SetDataCompleteCallback@cb
 17436     14B3  00F5               	movwf	I2C1_SetDataCompleteCallback@cb+1
 17437     14B4  01F6               	clrf	I2C1_SetDataCompleteCallback@ptr
 17438     14B5  3194  2446  3194   	fcall	_I2C1_SetDataCompleteCallback
 17439     14B8                     l4723:
 17440                           
 17441                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 17442     14B8  3004               	movlw	4
 17443     14B9                     l224:
 17444     14B9  0008               	return
 17445     14BA                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F287:
 17446                           
 17447                           	psect	text84
 17448     1446                     __ptext84:	
 17449 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 17450 ;; Defined at:
 17451 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 17452 ;; Parameters:    Size  Location     Type
 17453 ;;  cb              2    4[COMMON] PTR FTN(PTR void ,)enum 
 17454 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F298(1), wr2RegCompleteHandler@i2c1_master_example$F287(1), wr1RegCo
      +mpleteHandler@i2c1_master_example$F281(1), rd2RegCompleteHandler@i2c1_master_example$F275(1), 
 17455 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F264(1), Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompl
      +eteHandler(1), 
 17456 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 17457 ;;  ptr             1    6[COMMON] PTR void 
 17458 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17459 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17460 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17461 ;; Auto vars:     Size  Location     Type
 17462 ;;		None
 17463 ;; Return value:  Size  Location     Type
 17464 ;;                  1    wreg      void 
 17465 ;; Registers used:
 17466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17467 ;; Tracked objects:
 17468 ;;		On entry : 0/0
 17469 ;;		On exit  : 0/0
 17470 ;;		Unchanged: 0/0
 17471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17472 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17475 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17476 ;;Total ram usage:        3 bytes
 17477 ;; Hardware stack levels used: 1
 17478 ;; Hardware stack levels required when called: 1
 17479 ;; This function calls:
 17480 ;;		_I2C1_SetCallback
 17481 ;; This function is called by:
 17482 ;;		_wr1RegCompleteHandler
 17483 ;;		_rd1RegCompleteHandler
 17484 ;;		_rd2RegCompleteHandler
 17485 ;;		_wr2RegCompleteHandler
 17486 ;;		_rdBlkRegCompleteHandler
 17487 ;;		_I2C1_Write1ByteRegister
 17488 ;;		_rd1RegCompleteHandler@i2c1_master_example$F264
 17489 ;;		_rd2RegCompleteHandler@i2c1_master_example$F275
 17490 ;;		_wr1RegCompleteHandler@i2c1_master_example$F281
 17491 ;;		_wr2RegCompleteHandler@i2c1_master_example$F287
 17492 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F298
 17493 ;;		_i2c_write1ByteRegister
 17494 ;;		_i2c_read1ByteRegister
 17495 ;;		_i2c_read2ByteRegister
 17496 ;;		_i2c_write2ByteRegister
 17497 ;;		_i2c_readDataBlock
 17498 ;;		_I2C1_Read1ByteRegister
 17499 ;;		_I2C1_Read2ByteRegister
 17500 ;;		_I2C1_Write2ByteRegister
 17501 ;;		_I2C1_ReadDataBlock
 17502 ;; This function uses a non-reentrant model
 17503 ;;
 17504                           
 17505     1446                     _I2C1_SetDataCompleteCallback:	
 17506                           ;psect for function _I2C1_SetDataCompleteCallback
 17507                           
 17508     1446                     l4649:	
 17509                           ;incstack = 0
 17510                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 17511                           
 17512                           
 17513                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 17514     1446  0875               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 17515     1447  00F1               	movwf	I2C1_SetCallback@cb+1
 17516     1448  0874               	movf	I2C1_SetDataCompleteCallback@cb,w
 17517     1449  00F0               	movwf	I2C1_SetCallback@cb
 17518     144A  0876               	movf	I2C1_SetDataCompleteCallback@ptr,w
 17519     144B  00F2               	movwf	I2C1_SetCallback@ptr
 17520     144C  3000               	movlw	0
 17521     144D  3196  26A3  3194   	fcall	_I2C1_SetCallback
 17522     1450                     l473:
 17523     1450  0008               	return
 17524     1451                     __end_of_I2C1_SetDataCompleteCallback:
 17525                           
 17526                           	psect	text85
 17527     16A3                     __ptext85:	
 17528 ;; *************** function _I2C1_SetCallback *****************
 17529 ;; Defined at:
 17530 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 17531 ;; Parameters:    Size  Location     Type
 17532 ;;  idx             1    wreg     enum E12103
 17533 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 17534 ;;		 -> rdBlkRegCompleteHandler@i2c1_master_example$F298(1), wr2RegCompleteHandler@i2c1_master_example$F287(1), wr1RegCo
      +mpleteHandler@i2c1_master_example$F281(1), rd2RegCompleteHandler@i2c1_master_example$F275(1), 
 17535 ;;		 -> rd1RegCompleteHandler@i2c1_master_example$F264(1), Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompl
      +eteHandler(1), 
 17536 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 17537 ;;  ptr             1    2[COMMON] PTR void 
 17538 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17539 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17540 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17541 ;; Auto vars:     Size  Location     Type
 17542 ;;  idx             1    3[COMMON] enum E12103
 17543 ;; Return value:  Size  Location     Type
 17544 ;;                  1    wreg      void 
 17545 ;; Registers used:
 17546 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17547 ;; Tracked objects:
 17548 ;;		On entry : 0/0
 17549 ;;		On exit  : 0/0
 17550 ;;		Unchanged: 0/0
 17551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17552 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17556 ;;Total ram usage:        4 bytes
 17557 ;; Hardware stack levels used: 1
 17558 ;; This function calls:
 17559 ;;		Nothing
 17560 ;; This function is called by:
 17561 ;;		_I2C1_SetDataCompleteCallback
 17562 ;;		_I2C1_SetAddressNackCallback
 17563 ;;		_I2C1_SetWriteCollisionCallback
 17564 ;;		_I2C1_SetDataNackCallback
 17565 ;;		_I2C1_SetTimeoutCallback
 17566 ;; This function uses a non-reentrant model
 17567 ;;
 17568                           
 17569     16A3                     _I2C1_SetCallback:	
 17570                           ;psect for function _I2C1_SetCallback
 17571                           
 17572                           
 17573                           ;incstack = 0
 17574                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 17575                           ;I2C1_SetCallback@idx stored from wreg
 17576     16A3  00F3               	movwf	I2C1_SetCallback@idx
 17577     16A4                     l4637:
 17578                           
 17579                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 17580     16A4  0870               	movf	I2C1_SetCallback@cb,w
 17581     16A5  0471               	iorwf	I2C1_SetCallback@cb+1,w
 17582     16A6  1903               	btfsc	3,2
 17583     16A7  2EA9               	goto	u1641
 17584     16A8  2EAA               	goto	u1640
 17585     16A9                     u1641:
 17586     16A9  2EB9               	goto	l4641
 17587     16AA                     u1640:
 17588     16AA                     l4639:
 17589                           
 17590                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 17591     16AA  3573               	lslf	I2C1_SetCallback@idx,w
 17592     16AB  3ECE               	addlw	(low (_I2C1_Status| 0))& (0+255)
 17593     16AC  0086               	movwf	6
 17594     16AD  0187               	clrf	7
 17595     16AE  0870               	movf	I2C1_SetCallback@cb,w
 17596     16AF  3FC0               	movwi [0]fsr1
 17597     16B0  0871               	movf	I2C1_SetCallback@cb+1,w
 17598     16B1  3FC1               	movwi [1]fsr1
 17599                           
 17600                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 17601     16B2  0873               	movf	I2C1_SetCallback@idx,w
 17602     16B3  3EDA               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 17603     16B4  0086               	movwf	6
 17604     16B5  0187               	clrf	7
 17605     16B6  0872               	movf	I2C1_SetCallback@ptr,w
 17606     16B7  0081               	movwf	1
 17607                           
 17608                           ;mcc_generated_files/i2c1_master.c: 304:     }
 17609     16B8  2EC6               	goto	l490
 17610     16B9                     l4641:
 17611                           
 17612                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 17613     16B9  3573               	lslf	I2C1_SetCallback@idx,w
 17614     16BA  3ECE               	addlw	(low (_I2C1_Status| 0))& (0+255)
 17615     16BB  0086               	movwf	6
 17616     16BC  0187               	clrf	7
 17617     16BD  3093               	movlw	low _I2C1_CallbackReturnStop
 17618     16BE  3FC0               	movwi [0]fsr1
 17619     16BF  3013               	movlw	high _I2C1_CallbackReturnStop
 17620     16C0  3FC1               	movwi [1]fsr1
 17621                           
 17622                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 17623     16C1  0873               	movf	I2C1_SetCallback@idx,w
 17624     16C2  3EDA               	addlw	(low ((_I2C1_Status| 0+12)))& (0+255)
 17625     16C3  0086               	movwf	6
 17626     16C4  0187               	clrf	7
 17627     16C5  0181               	clrf	1
 17628     16C6                     l490:
 17629     16C6  0008               	return
 17630     16C7                     __end_of_I2C1_SetCallback:
 17631                           
 17632                           	psect	text86
 17633     148D                     __ptext86:	
 17634 ;; *************** function _I2C1_SetBuffer *****************
 17635 ;; Defined at:
 17636 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 17637 ;; Parameters:    Size  Location     Type
 17638 ;;  buffer          1    wreg     PTR void 
 17639 ;;		 -> i2c_write1ByteRegister@data.data(2), i2c_read1ByteRegister@d2.data(2), i2c_read2ByteRegister@result.data(2), i2c
      +_write2ByteRegister@data.data(2), 
 17640 ;;		 -> I2C1_Read1ByteRegister@returnValue.data(2), I2C1_Read2ByteRegister@returnValue.data(2), I2C1_Write1ByteRegister@
      +data.data(2), I2C1_Write2ByteRegister@data.data(2), 
 17641 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), bufferBlock.data(2), I2C1_Write2ByteRegister@reg(1
      +), 
 17642 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 17643 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(1), 
 17644 ;;		 -> i2c_readDataBlock@d(3), d.data(2), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), 
 17645 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17646 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17647 ;;  bufferSize      2    0[COMMON] unsigned int 
 17648 ;; Auto vars:     Size  Location     Type
 17649 ;;  buffer          1    2[COMMON] PTR void 
 17650 ;;		 -> i2c_write1ByteRegister@data.data(2), i2c_read1ByteRegister@d2.data(2), i2c_read2ByteRegister@result.data(2), i2c
      +_write2ByteRegister@data.data(2), 
 17651 ;;		 -> I2C1_Read1ByteRegister@returnValue.data(2), I2C1_Read2ByteRegister@returnValue.data(2), I2C1_Write1ByteRegister@
      +data.data(2), I2C1_Write2ByteRegister@data.data(2), 
 17652 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), bufferBlock.data(2), I2C1_Write2ByteRegister@reg(1
      +), 
 17653 ;;		 -> I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2Byte
      +Register@reg(1), 
 17654 ;;		 -> I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c
      +_readDataBlock@reg(1), 
 17655 ;;		 -> i2c_readDataBlock@d(3), d.data(2), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), 
 17656 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 17657 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17658 ;; Return value:  Size  Location     Type
 17659 ;;                  1    wreg      void 
 17660 ;; Registers used:
 17661 ;;		wreg
 17662 ;; Tracked objects:
 17663 ;;		On entry : 0/0
 17664 ;;		On exit  : 0/0
 17665 ;;		Unchanged: 0/0
 17666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17670 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17671 ;;Total ram usage:        3 bytes
 17672 ;; Hardware stack levels used: 1
 17673 ;; This function calls:
 17674 ;;		Nothing
 17675 ;; This function is called by:
 17676 ;;		_wr1RegCompleteHandler
 17677 ;;		_rd1RegCompleteHandler
 17678 ;;		_rd2RegCompleteHandler
 17679 ;;		_wr2RegCompleteHandler
 17680 ;;		_rdBlkRegCompleteHandler
 17681 ;;		_I2C1_Write1ByteRegister
 17682 ;;		_rd1RegCompleteHandler@i2c1_master_example$F264
 17683 ;;		_rd2RegCompleteHandler@i2c1_master_example$F275
 17684 ;;		_wr1RegCompleteHandler@i2c1_master_example$F281
 17685 ;;		_wr2RegCompleteHandler@i2c1_master_example$F287
 17686 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F298
 17687 ;;		_i2c_write1ByteRegister
 17688 ;;		_i2c_writeNBytes
 17689 ;;		_i2c_read1ByteRegister
 17690 ;;		_i2c_read2ByteRegister
 17691 ;;		_i2c_write2ByteRegister
 17692 ;;		_i2c_readDataBlock
 17693 ;;		_i2c_readNBytes
 17694 ;;		_I2C1_Read1ByteRegister
 17695 ;;		_I2C1_Read2ByteRegister
 17696 ;;		_I2C1_Write2ByteRegister
 17697 ;;		_I2C1_WriteNBytes
 17698 ;;		_I2C1_ReadNBytes
 17699 ;;		_I2C1_ReadDataBlock
 17700 ;; This function uses a non-reentrant model
 17701 ;;
 17702                           
 17703     148D                     _I2C1_SetBuffer:	
 17704                           ;psect for function _I2C1_SetBuffer
 17705                           
 17706                           
 17707                           ;incstack = 0
 17708                           ; Regs used in _I2C1_SetBuffer: [wreg]
 17709                           ;I2C1_SetBuffer@buffer stored from wreg
 17710     148D  00F2               	movwf	I2C1_SetBuffer@buffer
 17711     148E                     l4643:
 17712                           
 17713                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 17714     148E  0021               	movlb	1	; select bank1
 17715     148F  1DEA               	btfss	(_I2C1_Status^(0+128)+28),3
 17716     1490  2C92               	goto	u1651
 17717     1491  2C93               	goto	u1650
 17718     1492                     u1651:
 17719     1492  2C9A               	goto	l470
 17720     1493                     u1650:
 17721     1493                     l4645:
 17722                           
 17723                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 17724     1493  0872               	movf	I2C1_SetBuffer@buffer,w
 17725     1494  00E5               	movwf	(low ((_I2C1_Status| 0+23)))^(0+128)
 17726                           
 17727                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 17728     1495  0871               	movf	I2C1_SetBuffer@bufferSize+1,w
 17729     1496  00E7               	movwf	((_I2C1_Status+1)^(0+128)+24)
 17730     1497  0870               	movf	I2C1_SetBuffer@bufferSize,w
 17731     1498  00E6               	movwf	(_I2C1_Status^(0+128)+24)
 17732     1499                     l4647:
 17733                           
 17734                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 17735     1499  11EA               	bcf	(_I2C1_Status^(0+128)+28),3
 17736     149A                     l470:
 17737     149A  0008               	return
 17738     149B                     __end_of_I2C1_SetBuffer:
 17739                           
 17740                           	psect	text87
 17741     13A6                     __ptext87:	
 17742 ;; *************** function _I2C1_MasterStop *****************
 17743 ;; Defined at:
 17744 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 17745 ;; Parameters:    Size  Location     Type
 17746 ;;		None
 17747 ;; Auto vars:     Size  Location     Type
 17748 ;;		None
 17749 ;; Return value:  Size  Location     Type
 17750 ;;                  1    wreg      void 
 17751 ;; Registers used:
 17752 ;;		None
 17753 ;; Tracked objects:
 17754 ;;		On entry : 0/0
 17755 ;;		On exit  : 0/0
 17756 ;;		Unchanged: 0/0
 17757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17762 ;;Total ram usage:        0 bytes
 17763 ;; Hardware stack levels used: 1
 17764 ;; This function calls:
 17765 ;;		Nothing
 17766 ;; This function is called by:
 17767 ;;		_I2C1_DO_SEND_STOP
 17768 ;; This function uses a non-reentrant model
 17769 ;;
 17770                           
 17771     13A6                     _I2C1_MasterStop:	
 17772                           ;psect for function _I2C1_MasterStop
 17773                           
 17774     13A6                     l4653:	
 17775                           ;incstack = 0
 17776                           ; Regs used in _I2C1_MasterStop: []
 17777                           
 17778                           
 17779                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 17780     13A6  0023               	movlb	3	; select bank3
 17781     13A7  1511               	bsf	17,2	;volatile
 17782     13A8                     l636:
 17783     13A8  0008               	return
 17784     13A9                     __end_of_I2C1_MasterStop:
 17785                           
 17786                           	psect	text88
 17787     13A3                     __ptext88:	
 17788 ;; *************** function _I2C1_MasterEnableRestart *****************
 17789 ;; Defined at:
 17790 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 17791 ;; Parameters:    Size  Location     Type
 17792 ;;		None
 17793 ;; Auto vars:     Size  Location     Type
 17794 ;;		None
 17795 ;; Return value:  Size  Location     Type
 17796 ;;                  1    wreg      void 
 17797 ;; Registers used:
 17798 ;;		None
 17799 ;; Tracked objects:
 17800 ;;		On entry : 0/0
 17801 ;;		On exit  : 0/0
 17802 ;;		Unchanged: 0/0
 17803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17808 ;;Total ram usage:        0 bytes
 17809 ;; Hardware stack levels used: 1
 17810 ;; This function calls:
 17811 ;;		Nothing
 17812 ;; This function is called by:
 17813 ;;		_I2C1_DO_SEND_RESTART_READ
 17814 ;;		_I2C1_DO_SEND_RESTART_WRITE
 17815 ;;		_I2C1_DO_SEND_RESTART
 17816 ;;		_I2C1_DO_RX_EMPTY
 17817 ;; This function uses a non-reentrant model
 17818 ;;
 17819                           
 17820     13A3                     _I2C1_MasterEnableRestart:	
 17821                           ;psect for function _I2C1_MasterEnableRestart
 17822                           
 17823     13A3                     l4651:	
 17824                           ;incstack = 0
 17825                           ; Regs used in _I2C1_MasterEnableRestart: []
 17826                           
 17827                           
 17828                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 17829     13A3  0023               	movlb	3	; select bank3
 17830     13A4  1491               	bsf	17,1	;volatile
 17831     13A5                     l624:
 17832     13A5  0008               	return
 17833     13A6                     __end_of_I2C1_MasterEnableRestart:
 17834                           
 17835                           	psect	text89
 17836     13A0                     __ptext89:	
 17837 ;; *************** function _I2C1_MasterStart *****************
 17838 ;; Defined at:
 17839 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 17840 ;; Parameters:    Size  Location     Type
 17841 ;;		None
 17842 ;; Auto vars:     Size  Location     Type
 17843 ;;		None
 17844 ;; Return value:  Size  Location     Type
 17845 ;;                  1    wreg      void 
 17846 ;; Registers used:
 17847 ;;		None
 17848 ;; Tracked objects:
 17849 ;;		On entry : 0/0
 17850 ;;		On exit  : 0/0
 17851 ;;		Unchanged: 0/0
 17852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17857 ;;Total ram usage:        0 bytes
 17858 ;; Hardware stack levels used: 1
 17859 ;; This function calls:
 17860 ;;		Nothing
 17861 ;; This function is called by:
 17862 ;;		_I2C1_MasterOperation
 17863 ;; This function uses a non-reentrant model
 17864 ;;
 17865                           
 17866     13A0                     _I2C1_MasterStart:	
 17867                           ;psect for function _I2C1_MasterStart
 17868                           
 17869     13A0                     l4967:	
 17870                           ;incstack = 0
 17871                           ; Regs used in _I2C1_MasterStart: []
 17872                           
 17873                           
 17874                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 17875     13A0  0023               	movlb	3	; select bank3
 17876     13A1  1411               	bsf	17,0	;volatile
 17877     13A2                     l633:
 17878     13A2  0008               	return
 17879     13A3                     __end_of_I2C1_MasterStart:
 17880                           
 17881                           	psect	text90
 17882     1594                     __ptext90:	
 17883 ;; *************** function _I2C1_Close *****************
 17884 ;; Defined at:
 17885 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 17886 ;; Parameters:    Size  Location     Type
 17887 ;;		None
 17888 ;; Auto vars:     Size  Location     Type
 17889 ;;  returnValue     1    0[COMMON] enum E355
 17890 ;; Return value:  Size  Location     Type
 17891 ;;                  1    wreg      enum E355
 17892 ;; Registers used:
 17893 ;;		wreg, status,2, status,0, pclath, cstack
 17894 ;; Tracked objects:
 17895 ;;		On entry : 0/0
 17896 ;;		On exit  : 0/0
 17897 ;;		Unchanged: 0/0
 17898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17903 ;;Total ram usage:        1 bytes
 17904 ;; Hardware stack levels used: 1
 17905 ;; Hardware stack levels required when called: 1
 17906 ;; This function calls:
 17907 ;;		_I2C1_MasterClearIrq
 17908 ;;		_I2C1_MasterClose
 17909 ;;		_I2C1_MasterDisableIrq
 17910 ;; This function is called by:
 17911 ;;		_I2C1_Write1ByteRegister
 17912 ;;		_i2c_write1ByteRegister
 17913 ;;		_i2c_writeNBytes
 17914 ;;		_i2c_read1ByteRegister
 17915 ;;		_i2c_read2ByteRegister
 17916 ;;		_i2c_write2ByteRegister
 17917 ;;		_i2c_readDataBlock
 17918 ;;		_i2c_readNBytes
 17919 ;;		_I2C1_Read1ByteRegister
 17920 ;;		_I2C1_Read2ByteRegister
 17921 ;;		_I2C1_Write2ByteRegister
 17922 ;;		_I2C1_WriteNBytes
 17923 ;;		_I2C1_ReadNBytes
 17924 ;;		_I2C1_ReadDataBlock
 17925 ;; This function uses a non-reentrant model
 17926 ;;
 17927                           
 17928     1594                     _I2C1_Close:	
 17929                           ;psect for function _I2C1_Close
 17930                           
 17931     1594                     l5051:	
 17932                           ;incstack = 0
 17933                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 17934                           
 17935                           
 17936                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 17937     1594  01F0               	clrf	I2C1_Close@returnValue
 17938     1595  0AF0               	incf	I2C1_Close@returnValue,f
 17939                           
 17940                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 17941     1596  0021               	movlb	1	; select bank1
 17942     1597  18EA               	btfsc	(_I2C1_Status^(0+128)+28),1
 17943     1598  2D9A               	goto	u1771
 17944     1599  2D9B               	goto	u1770
 17945     159A                     u1771:
 17946     159A  2DAA               	goto	l5065
 17947     159B                     u1770:
 17948     159B                     l5053:
 17949                           
 17950                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 17951     159B  116A               	bcf	(_I2C1_Status^(0+128)+28),2
 17952     159C                     l5055:
 17953                           
 17954                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 17955     159C  30FF               	movlw	255
 17956     159D  00E4               	movwf	(_I2C1_Status^(0+128)+22)
 17957     159E                     l5057:
 17958                           
 17959                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 17960     159E  3193  2397  3195   	fcall	_I2C1_MasterClearIrq
 17961     15A1                     l5059:
 17962                           
 17963                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 17964     15A1  3193  239D  3195   	fcall	_I2C1_MasterDisableIrq
 17965     15A4                     l5061:
 17966                           
 17967                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 17968     15A4  3193  239A  3195   	fcall	_I2C1_MasterClose
 17969     15A7                     l5063:
 17970                           
 17971                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 17972     15A7  0021               	movlb	1	; select bank1
 17973     15A8  0869               	movf	(_I2C1_Status^(0+128)+27),w
 17974     15A9  00F0               	movwf	I2C1_Close@returnValue
 17975     15AA                     l5065:
 17976                           
 17977                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 17978     15AA  0870               	movf	I2C1_Close@returnValue,w
 17979     15AB                     l451:
 17980     15AB  0008               	return
 17981     15AC                     __end_of_I2C1_Close:
 17982                           
 17983                           	psect	text91
 17984     139D                     __ptext91:	
 17985 ;; *************** function _I2C1_MasterDisableIrq *****************
 17986 ;; Defined at:
 17987 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 17988 ;; Parameters:    Size  Location     Type
 17989 ;;		None
 17990 ;; Auto vars:     Size  Location     Type
 17991 ;;		None
 17992 ;; Return value:  Size  Location     Type
 17993 ;;                  1    wreg      void 
 17994 ;; Registers used:
 17995 ;;		None
 17996 ;; Tracked objects:
 17997 ;;		On entry : 0/0
 17998 ;;		On exit  : 0/0
 17999 ;;		Unchanged: 0/0
 18000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18005 ;;Total ram usage:        0 bytes
 18006 ;; Hardware stack levels used: 1
 18007 ;; This function calls:
 18008 ;;		Nothing
 18009 ;; This function is called by:
 18010 ;;		_I2C1_Close
 18011 ;;		_I2C1_SetTimeOut
 18012 ;; This function uses a non-reentrant model
 18013 ;;
 18014                           
 18015     139D                     _I2C1_MasterDisableIrq:	
 18016                           ;psect for function _I2C1_MasterDisableIrq
 18017                           
 18018     139D                     l4989:	
 18019                           ;incstack = 0
 18020                           ; Regs used in _I2C1_MasterDisableIrq: []
 18021                           
 18022                           
 18023                           ;mcc_generated_files/i2c1_master.c: 637:     PIE3bits.SSP1IE = 0;
 18024     139D  002E               	movlb	14	; select bank14
 18025     139E  1019               	bcf	25,0	;volatile
 18026     139F                     l660:
 18027     139F  0008               	return
 18028     13A0                     __end_of_I2C1_MasterDisableIrq:
 18029                           
 18030                           	psect	text92
 18031     139A                     __ptext92:	
 18032 ;; *************** function _I2C1_MasterClose *****************
 18033 ;; Defined at:
 18034 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 18035 ;; Parameters:    Size  Location     Type
 18036 ;;		None
 18037 ;; Auto vars:     Size  Location     Type
 18038 ;;		None
 18039 ;; Return value:  Size  Location     Type
 18040 ;;                  1    wreg      void 
 18041 ;; Registers used:
 18042 ;;		None
 18043 ;; Tracked objects:
 18044 ;;		On entry : 0/0
 18045 ;;		On exit  : 0/0
 18046 ;;		Unchanged: 0/0
 18047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18052 ;;Total ram usage:        0 bytes
 18053 ;; Hardware stack levels used: 1
 18054 ;; This function calls:
 18055 ;;		Nothing
 18056 ;; This function is called by:
 18057 ;;		_I2C1_Close
 18058 ;; This function uses a non-reentrant model
 18059 ;;
 18060                           
 18061     139A                     _I2C1_MasterClose:	
 18062                           ;psect for function _I2C1_MasterClose
 18063                           
 18064     139A                     l4991:	
 18065                           ;incstack = 0
 18066                           ; Regs used in _I2C1_MasterClose: []
 18067                           
 18068                           
 18069                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 18070     139A  0023               	movlb	3	; select bank3
 18071     139B  1290               	bcf	16,5	;volatile
 18072     139C                     l615:
 18073     139C  0008               	return
 18074     139D                     __end_of_I2C1_MasterClose:
 18075                           
 18076                           	psect	text93
 18077     1397                     __ptext93:	
 18078 ;; *************** function _I2C1_MasterClearIrq *****************
 18079 ;; Defined at:
 18080 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 18081 ;; Parameters:    Size  Location     Type
 18082 ;;		None
 18083 ;; Auto vars:     Size  Location     Type
 18084 ;;		None
 18085 ;; Return value:  Size  Location     Type
 18086 ;;                  1    wreg      void 
 18087 ;; Registers used:
 18088 ;;		None
 18089 ;; Tracked objects:
 18090 ;;		On entry : 0/0
 18091 ;;		On exit  : 0/0
 18092 ;;		Unchanged: 0/0
 18093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18098 ;;Total ram usage:        0 bytes
 18099 ;; Hardware stack levels used: 1
 18100 ;; This function calls:
 18101 ;;		Nothing
 18102 ;; This function is called by:
 18103 ;;		_I2C1_Open
 18104 ;;		_I2C1_Close
 18105 ;;		_I2C1_MasterFsm
 18106 ;; This function uses a non-reentrant model
 18107 ;;
 18108                           
 18109     1397                     _I2C1_MasterClearIrq:	
 18110                           ;psect for function _I2C1_MasterClearIrq
 18111                           
 18112     1397                     l4793:	
 18113                           ;incstack = 0
 18114                           ; Regs used in _I2C1_MasterClearIrq: []
 18115                           
 18116                           
 18117                           ;mcc_generated_files/i2c1_master.c: 642:     PIR3bits.SSP1IF = 0;
 18118     1397  002E               	movlb	14	; select bank14
 18119     1398  100F               	bcf	15,0	;volatile
 18120     1399                     l663:
 18121     1399  0008               	return
 18122     139A                     __end_of_I2C1_MasterClearIrq:
 18123     007E                     btemp	set	126	;btemp
 18124     007E                     wtemp0	set	126
 18125     221A                     
 18126                           	psect	idloc
 18127                           
 18128                           ;Config register IDLOC0 @ 0x8000
 18129                           ;	unspecified, using default values
 18130     8000                     	org	32768
 18131     8000  3FFF               	dw	16383
 18132                           
 18133                           ;Config register IDLOC1 @ 0x8001
 18134                           ;	unspecified, using default values
 18135     8001                     	org	32769
 18136     8001  3FFF               	dw	16383
 18137                           
 18138                           ;Config register IDLOC2 @ 0x8002
 18139                           ;	unspecified, using default values
 18140     8002                     	org	32770
 18141     8002  3FFF               	dw	16383
 18142                           
 18143                           ;Config register IDLOC3 @ 0x8003
 18144                           ;	unspecified, using default values
 18145     8003                     	org	32771
 18146     8003  3FFF               	dw	16383
 18147                           
 18148                           	psect	config
 18149                           
 18150                           ;Config register CONFIG1 @ 0x8007
 18151                           ;	External Oscillator mode selection bits
 18152                           ;	FEXTOSC = OFF, Oscillator not enabled
 18153                           ;	Power-up default value for COSC bits
 18154                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 18155                           ;	Clock Out Enable bit
 18156                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 18157                           ;	Clock Switch Enable bit
 18158                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18159                           ;	Fail-Safe Clock Monitor Enable bit
 18160                           ;	FCMEN = ON, FSCM timer enabled
 18161     8007                     	org	32775
 18162     8007  3FEC               	dw	16364
 18163                           
 18164                           ;Config register CONFIG2 @ 0x8008
 18165                           ;	Master Clear Enable bit
 18166                           ;	MCLRE = ON, MCLR pin is Master Clear function
 18167                           ;	Power-up Timer Enable bit
 18168                           ;	PWRTE = OFF, PWRT disabled
 18169                           ;	Low-Power BOR enable bit
 18170                           ;	LPBOREN = OFF, ULPBOR disabled
 18171                           ;	Brown-out reset enable bits
 18172                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 18173                           ;	Brown-out Reset Voltage Selection
 18174                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 18175                           ;	Zero-cross detect disable
 18176                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 18177                           ;	Peripheral Pin Select one-way control
 18178                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 18179                           ;	Stack Overflow/Underflow Reset Enable bit
 18180                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 18181                           ;	Background Debugger
 18182                           ;	DEBUG = OFF, Background Debugger disabled
 18183     8008                     	org	32776
 18184     8008  3FFF               	dw	16383
 18185                           
 18186                           ;Config register CONFIG3 @ 0x8009
 18187                           ;	WDT Period Select bits
 18188                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18189                           ;	WDT operating mode
 18190                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 18191                           ;	WDT Window Select bits
 18192                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18193                           ;	WDT input clock selector
 18194                           ;	WDTCCS = SC, Software Control
 18195     8009                     	org	32777
 18196     8009  3F9F               	dw	16287
 18197                           
 18198                           ;Config register CONFIG4 @ 0x800A
 18199                           ;	UserNVM self-write protection bits
 18200                           ;	WRT = OFF, Write protection off
 18201                           ;	Scanner Enable bit
 18202                           ;	SCANE = available, Scanner module is available for use
 18203                           ;	Low Voltage Programming Enable bit
 18204                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 18205     800A                     	org	32778
 18206     800A  3FFF               	dw	16383
 18207                           
 18208                           ;Config register CONFIG5 @ 0x800B
 18209                           ;	UserNVM Program memory code protection bit
 18210                           ;	CP = OFF, Program Memory code protection disabled
 18211                           ;	DataNVM code protection bit
 18212                           ;	CPD = OFF, Data EEPROM code protection disabled
 18213     800B                     	org	32779
 18214     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    60
    Data        657
    BSS         37
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      75
    BANK1            80      0      75
    BANK2            80      0      56
    BANK3            80      0      62
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            58      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$2905$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_DO_TX$2910	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_DO_TX$2905	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rdBlkRegCompleteHandler@i2c1_master_example$F298(), wr2RegCompleteHandler@i2c1_master_example$F287(), 
		 -> wr1RegCompleteHandler@i2c1_master_example$F281(), rd2RegCompleteHandler@i2c1_master_example$F275(), rd1RegCompleteHandler@i2c1_master_example$F264(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$2904	const PTR FTN()enum E12085 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    S141$3$0	PTR void  size(1) Largest target is 0

    S141$4$0	PTR void  size(1) Largest target is 0

    S141$5$0	PTR void  size(1) Largest target is 0

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR FTN()void  size(2) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S515$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    TLV320AIC32_openCodec@config	PTR unsigned char  size(2) Largest target is 248
		 -> aic32config_page(BIGRAM[248]), 

    TLV320AIC32_config@config	PTR unsigned char  size(2) Largest target is 248
		 -> aic32config_page(BIGRAM[248]), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@i2c1_master_example$F298(), wr2RegCompleteHandler@i2c1_master_example$F287(), wr1RegCompleteHandler@i2c1_master_example$F281(), rd2RegCompleteHandler@i2c1_master_example$F275(), 
		 -> rd1RegCompleteHandler@i2c1_master_example$F264(), Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler@i2c1_master_example$F298(), wr2RegCompleteHandler@i2c1_master_example$F287(), wr1RegCompleteHandler@i2c1_master_example$F281(), rd2RegCompleteHandler@i2c1_master_example$F275(), 
		 -> rd1RegCompleteHandler@i2c1_master_example$F264(), Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_write1ByteRegister@data.data(COMMON[2]), i2c_read1ByteRegister@d2.data(COMMON[2]), i2c_read2ByteRegister@result.data(COMMON[2]), i2c_write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue.data(COMMON[2]), I2C1_Read2ByteRegister@returnValue.data(COMMON[2]), I2C1_Write1ByteRegister@data.data(COMMON[2]), I2C1_Write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), bufferBlock.data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(BANK0[1]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_readDataBlock@d(COMMON[3]), d.data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S515$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(BANK0[1]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_write1ByteRegister@data.data(COMMON[2]), i2c_read1ByteRegister@d2.data(COMMON[2]), i2c_read2ByteRegister@result.data(COMMON[2]), i2c_write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue.data(COMMON[2]), I2C1_Read2ByteRegister@returnValue.data(COMMON[2]), I2C1_Write1ByteRegister@data.data(COMMON[2]), I2C1_Write2ByteRegister@data.data(COMMON[2]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), bufferBlock.data(COMMON[2]), I2C1_Write2ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(BANK0[1]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), 
		 -> i2c_readDataBlock@d(COMMON[3]), d.data(COMMON[2]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S515$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S515$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rdBlkRegCompleteHandler@i2c1_master_example$F298(), wr2RegCompleteHandler@i2c1_master_example$F287(), 
		 -> wr1RegCompleteHandler@i2c1_master_example$F281(), rd2RegCompleteHandler@i2c1_master_example$F275(), rd1RegCompleteHandler@i2c1_master_example$F264(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), rdBlkRegCompleteHandler@i2c1_master_example$F298(), wr2RegCompleteHandler@i2c1_master_example$F287(), 
		 -> wr1RegCompleteHandler@i2c1_master_example$F281(), rd2RegCompleteHandler@i2c1_master_example$F275(), rd1RegCompleteHandler@i2c1_master_example$F264(), Absolute function(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12085[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F298@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@i2c1_master_example$F298@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F287@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F281@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F275@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F264@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    S141$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S141$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S141$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI2_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI2_ReadByte(), 

    S141$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI2_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI2_WriteByte(), 

    S141$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_ReadBlock(), 

    S141$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_WriteBlock(), 

    S141$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_ExchangeBlock(), 

    S141$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI2_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI2_ExchangeByte(), 

    S141$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    S141$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI2_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI2_Close(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S74$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _beep->___aldiv
    ___aldiv->___wmul
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F264
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F275
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F298
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F281
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F287
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F264
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F275
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F298
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F281
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F287
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F264
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F275
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F298
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F281
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F287
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F264
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F275
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F298
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F281
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F287
    _wr2RegCompleteHandler@i2c1_master_example$F287->_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F281->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F298->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F275->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F264->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback

Critical Paths under _main in BANK0

    _TLV320_SetHeadphoneVol->_I2C1_Write1ByteRegister
    _power_on->_CC8531_Init_Data_Send
    _power_on_buzzer->_beep
    _aic32_headphoneout->_TLV320AIC32_openCodec
    _TLV320AIC32_openCodec->_TLV320AIC32_config
    _TLV320AIC32_config->_I2C1_Write1ByteRegister
    _mic_detect->_TLV320_Mute
    _button_push_play->_beep
    _power_off_buzzer->_beep
    _beep->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0 1528264
                                             40 BANK0      2     2      0
           _CC8531_Polling_Data_Send
                    _DATAEE_ReadByte
                  _SYSTEM_Initialize
             _TLV320_SetHeadphoneVol
                     _charge_display
                         _mic_detect
                          _power_off
                           _power_on
                     _volume_control
 ---------------------------------------------------------------------------------
 (1) _volume_control                                       2     2      0  293774
                                             26 BANK0      2     2      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
             _TLV320_SetHeadphoneVol
                   _button_push_play
 ---------------------------------------------------------------------------------
 (2) _TLV320_SetHeadphoneVol                               5     5      0  281832
                                              3 BANK0      5     5      0
                 _DELAY_milliseconds
            _I2C1_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _power_on                                             0     0      0  323810
                    _ADCC_Initialize
              _CC8531_Init_Data_Send
                 _DELAY_milliseconds
                    _SPI2_Initialize
                         _aic32_test
                        _led_control
                    _power_on_buzzer
 ---------------------------------------------------------------------------------
 (2) _power_on_buzzer                                      0     0      0   11853
                               _beep
 ---------------------------------------------------------------------------------
 (2) _aic32_test                                           0     0      0  282318
                 _aic32_headphoneout
 ---------------------------------------------------------------------------------
 (3) _aic32_headphoneout                                   8     8      0  282318
              _TLV320AIC32_openCodec
 ---------------------------------------------------------------------------------
 (4) _TLV320AIC32_openCodec                               10     4      6  282317
                                             15 BANK0      8     2      6
                 _TLV320AIC32_config
 ---------------------------------------------------------------------------------
 (5) _TLV320AIC32_config                                  15    11      4  282030
                                              3 BANK0     12     8      4
                 _DELAY_milliseconds
            _I2C1_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _CC8531_Init_Data_Send                               14    14      0   27619
                                             26 BANK0     14    14      0
                 _DELAY_microseconds
                 _DELAY_milliseconds
                         _SPI2_Close
                          _SPI2_Open
                      _SPI2_ReadByte
                     _SPI2_WriteByte
                 _power_off_sequence
 ---------------------------------------------------------------------------------
 (3) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _power_off                                            0     0      0   14114
                 _power_off_sequence
 ---------------------------------------------------------------------------------
 (1) _mic_detect                                           2     2      0  293866
                                             31 BANK0      2     2      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                        _TLV320_Mute
 ---------------------------------------------------------------------------------
 (2) _TLV320_Mute                                          5     5      0  293799
                                             26 BANK0      5     5      0
                 _DELAY_milliseconds
            _I2C1_Write1ByteRegister
                   _button_push_play
 ---------------------------------------------------------------------------------
 (2) _button_push_play                                     0     0      0   11853
                               _beep
 ---------------------------------------------------------------------------------
 (1) _charge_display                                       6     6      0   14360
                                             26 BANK0      6     6      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                        _led_control
                 _power_off_sequence
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     120
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _CC8531_Polling_Data_Send                             2     2      0  306388
                                             26 BANK0      2     2      0
                 _DELAY_microseconds
                 _DELAY_milliseconds
            _I2C1_Write1ByteRegister
                          _SPI2_Open
                      _SPI2_ReadByte
                     _SPI2_WriteByte
                 _power_off_sequence
 ---------------------------------------------------------------------------------
 (3) _power_off_sequence                                   0     0      0   14114
                   _DATAEE_WriteByte
                 _DELAY_milliseconds
                        _led_control
                   _power_off_buzzer
 ---------------------------------------------------------------------------------
 (4) _power_off_buzzer                                     0     0      0   11853
                               _beep
 ---------------------------------------------------------------------------------
 (3) _beep                                                19    15      4   11853
                                              7 BANK0     19    15      4
                 _DELAY_microseconds
                 _DELAY_milliseconds
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     604
                                              6 COMMON     8     0      8
                                              0 BANK0      7     7      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _DELAY_milliseconds                                   2     0      2    1998
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _DELAY_microseconds                                   2     0      2    6429
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _led_control                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte                                     4     1      3     241
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (3) _SPI2_WriteByte                                       1     0      1    3062
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) _SPI2_ReadByte                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SPI2_Open                                            4     4      0      88
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Write1ByteRegister                              3     1      2  279654
                                              0 BANK0      3     1      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetAddressNackCallback                          3     0      3    2782
                                              4 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C1_Open                                            2     2      0      46
                                              0 COMMON     2     2      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     0     0      0  268548
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterOperation                                 2     2      0  268548
                                             12 COMMON     2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C1_Poller                                          0     0      0  268502
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterFsm                                       2     2      0  268502
                                             10 COMMON     2     2      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_TX_EMPTY                                     2     2      0   67109
                                              8 COMMON     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_TX                                           2     2      0   67131
                                              8 COMMON     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_RESTART_WRITE                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_RESTART_READ                            0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_ADR_READ                                0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_RX                                           2     2      0   67109
                                              8 COMMON     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_ADDRESS_NACK                                 2     2      0   67109
                                              8 COMMON     2     2      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler@i2c1_master_example$F287       1     0      1    6680
                                              7 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    6680
                                              7 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler@i2c1_master_example$F281       1     0      1    6680
                                              7 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    6680
                                              7 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler@i2c1_master_example$F298     1     0      1    6702
                                              7 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    6702
                                              7 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler@i2c1_master_example$F275       1     0      1    6680
                                              7 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    6680
                                              7 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler@i2c1_master_example$F264       1     0      1    6680
                                              7 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    6680
                                              7 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetDataCompleteCallback                         3     0      3    3998
                                              4 COMMON     3     0      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C1_SetCallback                                     4     1      3     914
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetBuffer                                       3     1      2    2660
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_STOP                                    0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_DO_SEND_RESTART                                 0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C1_CallbackReturnStop                              1     0      1       0
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _I2C1_CallbackReturnReset                             1     0      1     265
                                              7 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_Close                                           1     1      0      24
                                              0 COMMON     1     1      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CC8531_Polling_Data_Send
     _DELAY_microseconds
     _DELAY_milliseconds
     _I2C1_Write1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
           _I2C1_Poller
             _I2C1_MasterFsm
               _I2C1_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd1RegCompleteHandler@i2c1_master_example$F264 *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                 _rd2RegCompleteHandler@i2c1_master_example$F275 *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler@i2c1_master_example$F298 *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                 _wr1RegCompleteHandler@i2c1_master_example$F281 *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                 _wr2RegCompleteHandler@i2c1_master_example$F287 *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
               _I2C1_DO_IDLE *
               _I2C1_DO_RCEN *
                 _I2C1_MasterStartRx
               _I2C1_DO_RESET *
               _I2C1_DO_RX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_RX_NACK_RESTART *
                   _I2C1_MasterSendNack
                 _I2C1_DO_RX_NACK_STOP *
                   _I2C1_MasterSendNack
                 _I2C1_MasterGetRxData *
                 _I2C1_MasterSendAck *
                 _rd1RegCompleteHandler *
                 _rd1RegCompleteHandler@i2c1_master_example$F264 *
                 _rd2RegCompleteHandler *
                 _rd2RegCompleteHandler@i2c1_master_example$F275 *
                 _rdBlkRegCompleteHandler *
                 _rdBlkRegCompleteHandler@i2c1_master_example$F298 *
                 _wr1RegCompleteHandler *
                 _wr1RegCompleteHandler@i2c1_master_example$F281 *
                 _wr2RegCompleteHandler *
                 _wr2RegCompleteHandler@i2c1_master_example$F287 *
               _I2C1_DO_RX_ACK *
                 _I2C1_MasterSendAck
               _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
               _I2C1_DO_SEND_ADR_READ *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_ADR_WRITE *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_RESTART *
               _I2C1_DO_SEND_RESTART_READ *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_WRITE *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_STOP *
               _I2C1_DO_TX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART_READ *
                 _I2C1_DO_SEND_RESTART_WRITE *
                 _I2C1_DO_SEND_STOP *
                 _I2C1_MasterIsNack *
                 _I2C1_MasterSendTxData *
                 _rd1RegCompleteHandler *
                 _rd1RegCompleteHandler@i2c1_master_example$F264 *
                 _rd2RegCompleteHandler *
                 _rd2RegCompleteHandler@i2c1_master_example$F275 *
                 _rdBlkRegCompleteHandler *
                 _rdBlkRegCompleteHandler@i2c1_master_example$F298 *
                 _wr1RegCompleteHandler *
                 _wr1RegCompleteHandler@i2c1_master_example$F281 *
                 _wr2RegCompleteHandler *
                 _wr2RegCompleteHandler@i2c1_master_example$F287 *
               _I2C1_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                 _I2C1_DO_SEND_STOP *
                 _I2C1_MasterSetIrq *
                 _rd1RegCompleteHandler *
                 _rd1RegCompleteHandler@i2c1_master_example$F264 *
                 _rd2RegCompleteHandler *
                 _rd2RegCompleteHandler@i2c1_master_example$F275 *
                 _rdBlkRegCompleteHandler *
                 _rdBlkRegCompleteHandler@i2c1_master_example$F298 *
                 _wr1RegCompleteHandler *
                 _wr1RegCompleteHandler@i2c1_master_example$F281 *
                 _wr2RegCompleteHandler *
                 _wr2RegCompleteHandler@i2c1_master_example$F287 *
               _I2C1_MasterClearIrq *
               _I2C1_MasterIsNack *
             _I2C1_MasterWaitForEvent
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterOpen
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
     _SPI2_Open
     _SPI2_ReadByte
     _SPI2_WriteByte
     _power_off_sequence
       _DATAEE_WriteByte
       _DELAY_milliseconds
       _led_control
       _power_off_buzzer
         _beep
           _DELAY_microseconds
           _DELAY_milliseconds
           ___aldiv
             ___wmul (ARG)
           ___wmul
   _DATAEE_ReadByte
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI2_Initialize
   _TLV320_SetHeadphoneVol
     _DELAY_milliseconds
     _I2C1_Write1ByteRegister
   _charge_display
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     _led_control
     _power_off_sequence
   _mic_detect
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     _TLV320_Mute
       _DELAY_milliseconds
       _I2C1_Write1ByteRegister
       _button_push_play
         _beep
   _power_off
     _power_off_sequence
   _power_on
     _ADCC_Initialize
     _CC8531_Init_Data_Send
       _DELAY_microseconds
       _DELAY_milliseconds
       _SPI2_Close
       _SPI2_Open
       _SPI2_ReadByte
       _SPI2_WriteByte
       _power_off_sequence
     _DELAY_milliseconds
     _SPI2_Initialize
     _aic32_test
       _aic32_headphoneout
         _TLV320AIC32_openCodec
           _TLV320AIC32_config
             _DELAY_milliseconds
             _I2C1_Write1ByteRegister
     _led_control
     _power_on_buzzer
       _beep
   _volume_control
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     _TLV320_SetHeadphoneVol
     _button_push_play

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      38       9       70.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3E      11       77.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               3A      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 20 06:03:42 2022

                                                      l17 14CA  
                                                      l53 14EC  
                                                      l38 14DB  
                                                      l65 14FD  
                                                      l77 15C3  
                                            ?_led_control 0070  
                                        ??_volume_control 007E  
                                     ___wmul@multiplicand 0072  
                                  ?_CC8531_Init_Data_Send 0070  
                                                     l221 1530  
                                                     l215 150E  
                                                     l224 14B9  
                                    ??_TLV320AIC32_config 0027  
                                                     l218 151F  
                                                     l227 15DB  
                                                     l500 1716  
                                                     l332 1566  
                                                     l503 13D1  
                                                     l335 143B  
                                                     l512 0AD2  
                                                     l176 17CE  
                                                     l602 1396  
                                                     l506 1432  
                                                     l338 1429  
                                                     l451 15AB  
                                                     l515 0AEE  
                                                     l443 1445  
                                                     l540 1412  
                                                     l612 14A8  
                                                     l292 0948  
                                                     l621 13CC  
                                                     l509 1421  
                                                     l470 149A  
                                                     l630 13AB  
                                                     l446 089E  
                                                     l615 139C  
                                                     l463 0008  
                                                     l447 089F  
                                                     l624 13A5  
                                                     l528 09DD  
                                                     l633 13A2  
                                                     l473 1450  
                                                     l529 0A03  
                                                     l457 1645  
                                                     l490 16C6  
                                                     l618 13AE  
                                                     l642 13BF  
                                                     l546 1743  
                                                     l570 13E0  
                                                     l660 139F  
                                                     l636 13A8  
                                                     l564 13D6  
                                                     l645 13BB  
                                                     l573 13E5  
                                                     l582 13F4  
                                                     l910 1684  
                                                     l663 1399  
                                                     l639 13FF  
                                                     l567 13DB  
                                                     l591 16EE  
                                                     l479 145B  
                                                     l751 0806  
                                                     l576 13EA  
                                                     l496 148C  
                                                     l585 13F9  
                                                     l673 1405  
                                                     l913 1696  
                                                     l666 13B1  
                                                     l906 1553  
                                                     l754 1419  
                                                     l579 13EF  
                                                     l915 16A2  
                                                     l748 1629  
                                                     l669 1400  
                                                     l909 168C  
                                                     l757 140B  
                                                     l862 005C  
                                                     l599 1394  
                                                     l865 13B7  
                                                     l962 1467  
                                                     l858 157C  
                                                     l956 1659  
                                                     l958 165D  
                                                     l895 13C3  
                                                     l959 1663  
                                                     l898 13B4  
                              __end_of_DELAY_milliseconds 1554  
                                   ?_I2C1_MasterOperation 0070  
                                                     wreg 0009  
                                  ?_I2C1_MasterSendTxData 0070  
                                    _I2C1_DO_RX_NACK_STOP 13EB  
                               ?_I2C1_MasterEnableRestart 0070  
                                    I2C1_SetBuffer@buffer 0072  
                                                    l1110 0C7A  
                                                    l1120 0CD2  
                                                    l1122 0CFD  
                                                    l1140 1746  
                                                    l1124 0CFE  
                                                    l1132 17FF  
                                                    l1300 0583  
                                 ??_rd2RegCompleteHandler 0078  
                                                    l1117 0CC8  
                                                    l1150 174D  
                                                    l1142 1748  
                                                    l1126 0D06  
                                                    l1230 036A  
                                                    l1135 15F4  
                                                    l1152 174E  
                                                    l1144 1749  
                                                    l1080 0E29  
                                                    l1312 05D5  
                                                    l1224 0341  
                                                    l1401 00D1  
                                                    l1129 0837  
                                                    l1330 0650  
                                                    l1306 05AC  
                                                    l1163 1755  
                                                    l1155 1750  
                                                    l1148 174B  
                                                    l1324 0627  
                                                    l1252 043B  
                                                    l1244 03C8  
                                                    l1236 0393  
                                                    l1500 13C7  
                                                    l1172 0BAF  
                                                    l1165 1757  
                                                    l1157 1752  
                                                    l1413 0121  
                                                    l1190 0A4E  
                                                    l1094 0BAE  
                                                    l1342 06A2  
                                                    l1318 05FE  
                                                    l1270 04B6  
                                                    l1167 1758  
                                                    l1159 1753  
                                                    l1407 00F9  
                                                    l1087 0B8D  
                                                    l1247 03D2  
                                                    l1360 071D  
                                                    l1336 0679  
                                                    l1264 0480  
                                                    l1169 1770  
                                                    l1433 01F7  
                                                    l1425 0171  
                                                    l1185 160E  
                                                    l1505 0982  
                                                    l1514 0B4E  
                                                    l1354 06F4  
                                                    l1282 0508  
                                                    l1178 0C0F  
                                                    l1451 026F  
                                                    l1419 0149  
                                                    l1267 048A  
                                                    l1380 07A3  
                                                    l1372 076F  
                                                    l1348 06CB  
                                                    l1276 04DF  
                                                    l1445 0247  
                                                    l1366 0746  
                                                    l1294 055A  
                                                    l1463 02BF  
                                                    l1439 021F  
                                                    l1288 0531  
                                                    l5001 1639  
                                                    l1457 0297  
                                                    l1545 0A9B  
                                                    l1378 0798  
                                                    l5003 163C  
                                                    l1475 030F  
                                                    l1395 00A9  
                                                    l1804 0D1A  
                                                    l5005 163E  
                                                    l5021 0876  
                                                    l5013 086B  
                                                    l1741 1682  
                                                    l5101 1673  
                                                    l1477 0310  
                                                    l1469 02E7  
                                                    l1389 0081  
                                                    l1814 0D96  
                                                    l5007 1641  
                                                    l5031 088C  
                                                    l5023 087D  
                                                    l5015 0872  
                                                    l5111 0D09  
                                                    l5103 1678  
                                                    l1567 0869  
                                                    l5009 1644  
                                                    l5041 089D  
                                                    l5033 0891  
                                                    l5025 0882  
                                                    l5017 0874  
                                                    l5201 1651  
                                                    l5121 0D35  
                                                    l5113 0D0D  
                                                    l5105 167E  
                                                    l6001 1465  
                                                    l5051 1594  
                                                    l5035 0892  
                                                    l5027 0883  
                                                    l5019 0875  
                                                    l5211 1658  
                                                    l5203 1652  
                                                    l5131 0D56  
                                                    l5123 0D3D  
                                                    l5115 0D1E  
                                                    l1739 166E  
                                                    l1587 1541  
                                                    l6011 0BBE  
                                                    l5061 15A4  
                                                    l5053 159B  
                                                    l5037 0897  
                                                    l5029 0888  
                                                    l5045 1451  
                                                    l5213 165E  
                                                    l5205 1653  
                                                    l5133 0D68  
                                                    l5125 0D40  
                                                    l5141 0D7E  
                                                    l5117 0D29  
                                                    l5109 0D07  
                                                    l6101 0DDE  
                                                    l5301 1531  
                                                    l6021 0BE3  
                                                    l6013 0BC2  
                                                    l6005 0BB1  
                                    _ADCC_StartConversion 0800  
                                                    l5063 15A7  
                                                    l5055 159C  
                                                    l5047 0004  
                                                    l5039 089A  
                                                    l5071 17A1  
                                                    l5207 1654  
                                                    l5215 1745  
                                                    l5143 0D83  
                                                    l5135 0D70  
                                                    l5127 0D4B  
                                                    l5119 0D2D  
                                                    l5151 0CC4  
                                                    l6111 0DFF  
                                                    l6103 0DE2  
                                                    l5231 0843  
                                                    l6031 0C02  
                                                    l6023 0BEE  
                                                    l6015 0BCD  
                                                    l6007 0BBB  
                                                    l5057 159E  
                                                    l5065 15AA  
                                                    l5081 17C6  
                                                    l5073 17AB  
                                                    l5209 1656  
                                                    l5145 0D8E  
                                                    l5137 0D71  
                                                    l5129 0D4F  
                                                    l5161 0CDE  
                                                    l5153 0CC5  
                                                    l5225 17CF  
                                                    l5401 1627  
                                                    l6121 0E24  
                                                    l6113 0E08  
                                                    l6105 0DE8  
                                                    l5241 085E  
                                                    l5233 0849  
                                                    l6033 0C05  
                                                    l6025 0BF1  
                                                    l6017 0BD4  
                                                    l6009 0BBD  
                                                    l6041 0C1C  
                                                    l5059 15A1  
                                                    l5075 17B4  
                                                    l5251 000A  
                                                    l5219 175A  
                                                    l5091 1688  
                                                    l5083 1542  
                                                    l5139 0D78  
                                                    l5163 0CFF  
                                                    l5155 0CC9  
                                                    l6211 00A3  
                                                    l5331 0918  
                                                    l5323 090F  
                                                    l5403 0801  
                                                    l6115 0E0D  
                                                    l6123 0E27  
                                                    l6107 0DF1  
                                                    l6131 1606  
                                                    l5171 0A58  
                                                    l5227 0838  
                                                    l6035 0C0C  
                                                    l6027 0BF8  
                                                    l6019 0BDF  
                                                    l6051 0C3E  
                                                    l6043 0C24  
                                                    l5077 17BC  
                                                    l5069 17A1  
                                                    l5261 0057  
                                                    l5253 000F  
                                                    l5093 1696  
                                                    l5085 1543  
                                                    l5157 0CD0  
                                                    l5149 0C7B  
                                                    l6301 016B  
                                                    l6213 00AA  
                                                    l6205 008D  
                                                    l5341 092B  
                                                    l5333 091C  
                                                    l5325 0912  
                                                    l5413 1406  
                                                    l5405 0804  
                                                    l6117 0E16  
                                                    l6109 0DF6  
                                                    l6141 0B5B  
                                                    l6133 160A  
                                                    l6125 15F5  
                                                    l5501 0349  
                                                    l5181 0A5F  
                                                    l5165 0A4F  
                                                    l5237 084E  
                                                    l5229 083B  
                                                    l6029 0BFB  
                                                    l6061 0C57  
                                                    l6053 0C43  
                                                    l6045 0C2D  
                                                    l6037 0C10  
                                                    l4703 150F  
                                                    l4711 1520  
                                                    l5079 17C3  
                                                    l5263 0059  
                                                    l5255 002F  
                                                    l5087 1547  
                                                    l5095 1664  
                                                    l5159 0CD9  
                                                    l6303 0172  
                                                    l6231 00D2  
                                                    l6223 00B5  
                                                    l6215 00B1  
                                                    l6207 0097  
                                                    l5351 0935  
                                                    l5343 092D  
                                                    l5335 091E  
                                                    l5327 0914  
                                                    l5407 0805  
                                                    l6119 0E1F  
                                                    l6151 0B7B  
                                                    l6143 0B63  
                                                    l6127 15FA  
                                                    l5271 13B5  
                                                    l5511 0358  
                                                    l5503 034B  
                                                    l5191 0A96  
                                                    l5183 0A75  
                                                    l5175 0A5D  
                                                    l5167 0A52  
                                                    l5247 0865  
                                                    l5239 084E  
                                                    l5431 0977  
                                                    l6071 0C6E  
                                                    l6063 0C60  
                                                    l6055 0C47  
                                                    l6047 0C36  
                                                    l6039 0C14  
                                                    l4641 16B9  
                                                    l4721 14B1  
                                                    l4705 1517  
                                                    l4713 1528  
                                                    l5257 0030  
                                                    l5273 13C0  
                                                    l5089 1683  
                                                    l5097 1666  
                                                    l5281 0A11  
                                                    l6401 0277  
                                                    l6321 019A  
                                                    l6313 017D  
                                                    l6305 0179  
                                                    l6241 00DD  
                                                    l6233 00D9  
                                                    l6225 00BF  
                                                    l6217 00B3  
                                                    l6209 009E  
                                                    l5361 0941  
                                                    l5353 0938  
                                                    l5345 092F  
                                                    l5337 0927  
                                                    l5329 0916  
                                                    l5409 1413  
                                                    l6081 0D9C  
                                                    l6161 0B91  
                                                    l6153 0B7F  
                                                    l6145 0B6C  
                                                    l6137 0B4F  
                                                    l6129 1603  
                                                    l5521 0374  
                                                    l5513 035F  
                                                    l5185 0A7D  
                                                    l5169 0A52  
                                                    l5433 097C  
                                                    l5425 095C  
                                                    l5417 094B  
                                                    l6073 0C72  
                                                    l6065 0C66  
                                                    l6057 0C49  
                                                    l6049 0C3A  
                                                    l4651 13A3  
                                                    l4643 148E  
                                                    l4723 14B8  
                                                    l4707 151E  
                                                    l4715 152F  
                                                    l4803 142A  
                                                    l4811 141A  
                                                    l5259 0040  
                                                    l5267 005B  
                                                    l5275 13B2  
                                                    l5195 1646  
                                                    l5099 166A  
                                                    l5291 0A36  
                                                    l5283 0A15  
                                                    l6411 0285  
                                                    l6403 0279  
                                                    l6331 01C5  
                                                    l6323 01A0  
                                                    l6315 0187  
                                                    l6307 017B  
                                                    l6251 0101  
                                                    l6243 00E7  
                                                    l6235 00DB  
                                                    l6227 00C6  
                                                    l5371 1441  
                                                    l5363 0943  
                                                    l5355 093A  
                                                    l5347 0931  
                                                    l5339 0929  
                                                    l6091 0DB6  
                                                    l6083 0DA0  
                                                    l5451 0B18  
                                                    l5435 0AF1  
                                                    l6171 0BAB  
                                                    l6163 0B96  
                                                    l6155 0B83  
                                                    l6147 0B70  
                                                    l6139 0B53  
                                                    l5611 0464  
                                                    l5603 0447  
                                                    l5531 0388  
                                                    l5515 0364  
                                                    l5187 0A84  
                                                    l5427 0968  
                                                    l5419 095A  
                                                    l6075 0C74  
                                                    l6059 0C4E  
                                                    l4653 13A6  
                                                    l4645 1493  
                                                    l4637 16A4  
                                                    l4661 14C9  
                                                    l4733 13FA  
                                                    l4901 1721  
                                                    l4805 142C  
                                                    l4813 141C  
                                                    l4741 13D5  
                                                    l5197 164D  
                                                    l5293 0A41  
                                                    l5285 0A20  
                                                    l6421 02A1  
                                                    l6413 028C  
                                                    l6341 01EC  
                                                    l6333 01D3  
                                                    l6325 01A7  
                                                    l6317 018E  
                                                    l6261 010F  
                                                    l6253 0103  
                                                    l6245 00EE  
                                                    l6229 00CB  
                                                    l6181 0064  
                                                    l6173 005D  
                                                    l5373 1442  
                                                    l5365 0946  
                                                    l5357 093D  
                                                    l5349 0933  
                                                    l5381 157A  
                                                    l6093 0DBE  
                                                    l6085 0DA5  
                                                    l5461 0B34  
                                                    l5453 0B1D  
                                                    l5445 0AFB  
                                                    l5437 0AF4  
                                                    l6157 0B87  
                                                    l6149 0B75  
                                                    l6165 0B98  
                                                    l5701 0539  
                                                    l5621 0476  
                                                    l5605 0452  
                                                    l5533 038D  
                                                    l5517 036B  
                                                    l5509 034D  
                                                    l5189 0A89  
                                                    l5429 0970  
                                                    l6069 0C69  
                                                    l6077 0C79  
                                                    l4647 1499  
                                                    l4639 16AA  
                                                    l4719 14A9  
                                                    l4727 15C4  
                                                    l4655 13B8  
                                                    l4911 1727  
                                                    l4807 1431  
                                                    l4815 1420  
                                                    l4831 0AAD  
                                                    l4823 0AA5  
                                                    l4751 13E1  
                                                    l5199 164F  
                                                    l5295 0A48  
                                                    l5287 0A27  
                                                    l5279 0A04  
                                                    l6431 02B4  
                                                    l6415 0291  
                                                    l6343 01F1  
                                                    l6335 01DB  
                                                    l6327 01AE  
                                                    l6319 0195  
                                                    l6271 012B  
                                                    l6263 0116  
                                                    l6247 00F3  
                                                    l6191 0076  
                                                    l6175 005D  
                                                    l5391 160F  
                                                    l5375 1444  
                                                    l5383 1433  
                                                    l5359 093F  
                                                    l5367 1422  
                                                    l6095 0DCC  
                                                    l6087 0DAA  
                                                    l6079 0D97  
                                                    l5463 0B3C  
                                                    l5447 0B09  
                                                    l5439 0AFA  
                                                    l5455 0B24  
                                                    l6167 0BA1  
                                                    l6159 0B8A  
                                                    l5711 0548  
                                                    l5703 053B  
                                                    l5615 046A  
                                                    l5607 0459  
                                                    l5551 03B6  
                                                    l5535 0394  
                                                    l5527 0376  
                                                    l5519 0372  
                                                    l5471 13C4  
                                                    l4649 1446  
                                                    l4657 14BA  
                                                    l4665 14CB  
                                                    l4673 14DC  
                                                    l4681 14ED  
                                                    l4729 15DA  
                                                    l4761 13BC  
                                                    l4737 13C9  
                                                    l4905 1723  
                                                    l4841 0AE0  
                                                    l4745 13D7  
                                                    l4753 13E4  
                                                    l4921 13E9  
                                                    l5297 0A4C  
                                                    l5289 0A32  
                                                    l6433 02B9  
                                                    l6417 0298  
                                                    l6409 027B  
                                                    l6361 0219  
                                                    l6345 01F8  
                                                    l6337 01E2  
                                                    l6329 01BE  
                                                    l6281 013E  
                                                    l6265 011B  
                                                    l6249 00FA  
                                                    l6193 007B  
                                                    l6177 0061  
                                                    l5393 161B  
                                                    l5369 143C  
                                                    l5385 1436  
                                                    l5377 1567  
                                                    l6097 0DD1  
                                                    l6089 0DAE  
                                                    l5465 0B43  
                                                    l5449 0B11  
                                                    l6169 0BA7  
                                                    l5801 0615  
                                                    l5721 0564  
                                                    l5713 054F  
                                                    l5641 04AB  
                                                    l5625 0481  
                                                    l5633 0497  
                                                    l5617 0470  
                                                    l5609 045E  
                                                    l5561 03D0  
                                                    l5553 03BC  
                                                    l5545 039F  
                                                    l5537 039B  
                                                    l5529 0381  
                                                    l5481 031A  
                                                    l4659 14C2  
                                                    l4667 14D3  
                                                    l4675 14E4  
                                                    l4683 14F5  
                                                    l4691 15C2  
                                                    l4843 0AEB  
                                                    l4827 0AA9  
                                                    l4819 0A9C  
                                                    l4739 13D2  
                                                    l4747 13DA  
                                                    l4771 13EE  
                                                    l4763 13F0  
                                                    l6451 02E1  
                                                    l6435 02C0  
                                                    l6427 02A3  
                                                    l6419 029F  
                                                    l6363 0220  
                                                    l6355 0203  
                                                    l6347 01FF  
                                                    l6339 01E5  
                                                    l6283 0143  
                                                    l6267 0122  
                                                    l6259 0105  
                                                    l6195 0082  
                                                    l6187 0065  
                                                    l6179 0063  
                                                    l5395 161D  
                                                    l5387 1437  
                                                    l5379 1578  
                                                    l6099 0DDE  
                                                    l5299 15DC  
                                                    l5467 0B48  
                                                    l5459 0B26  
                                                    l5811 0631  
                                                    l5803 061C  
                                                    l5731 0578  
                                                    l5715 0554  
                                                    l5643 04B0  
                                                    l5627 0488  
                                                    l5619 0474  
                                                    l5571 03E1  
                                                    l5563 03D9  
                                                    l5555 03BE  
                                                    l5547 03AA  
                                                    l5539 039D  
                                                    l5491 0324  
                                                    l5483 0321  
                                                    l5475 0311  
                                                    l4669 14DA  
                                                    l4677 14EB  
                                                    l4685 14FC  
                                                    l4757 13AC  
                                                    l4845 0AED  
                                                    l4837 0AB1  
                                                    l4861 09DB  
                                                    l4853 09C1  
                                                    l4765 13F3  
                                                    l4925 13F5  
                                                    l4941 16D0  
                                                    l4933 16C7  
                                                    l6453 02E8  
                                                    l6445 02CB  
                                                    l6437 02C7  
                                                    l6429 02AD  
                                                    l6381 0248  
                                                    l6373 022B  
                                                    l6365 0227  
                                                    l6357 020D  
                                                    l6349 0201  
                                                    l6285 014A  
                                                    l6277 012D  
                                                    l6269 0129  
                                                    l6197 0089  
                                                    l6189 006F  
                                                    l5397 1623  
                                                    l5389 143A  
                                                    l5901 06FE  
                                                    l5821 0645  
                                                    l5805 0621  
                                                    l5733 057D  
                                                    l5717 055B  
                                                    l5709 053D  
                                                    l5661 04D9  
                                                    l5645 04B7  
                                                    l5637 0499  
                                                    l5629 0491  
                                                    l5581 0406  
                                                    l5573 03EC  
                                                    l5549 03B1  
                                                    l5493 032F  
                                                    l5485 0323  
                                                    l5477 0314  
                                                    l5469 0807  
                                                    l4695 14FE  
                                                    l4775 13A9  
                                                    l4783 13AF  
                                                    l4839 0AD4  
                                                    l4871 09E3  
                                                    l4855 09C9  
                                                    l4919 13E6  
                                                    l4927 13F7  
                                                    l4935 16C9  
                                                    l6463 02F3  
                                                    l6455 02EF  
                                                    l6447 02D5  
                                                    l6439 02C9  
                                                    l6391 0253  
                                                    l6383 024F  
                                                    l6375 0235  
                                                    l6367 0229  
                                                    l6359 0214  
                                                    l6295 0155  
                                                    l6287 0151  
                                                    l6279 0137  
                                                    l6199 008B  
                                                    l5399 1625  
                                                    l5911 0712  
                                                    l5823 064A  
                                                    l5807 0628  
                                                    l5751 05A6  
                                                    l5735 0584  
                                                    l5727 0566  
                                                    l5719 0562  
                                                    l5663 04E0  
                                                    l5655 04C2  
                                                    l5647 04BE  
                                                    l5639 04A4  
                                                    l5591 0435  
                                                    l5583 040C  
                                                    l5575 03F3  
                                                    l5559 03C9  
                                                    l5567 03DF  
                                                    l5495 0336  
                                                    l5479 0318  
                                                    l4793 1397  
                                                    l4689 15AC  
                                                    l4697 1506  
                                                    l4785 1393  
                                                    l4857 09CE  
                                                    l4777 13DC  
                                                    l4769 13EB  
                                                    l4929 13F8  
                                                    l4937 16CC  
                                                    l4961 16F7  
                                                    l6465 02FD  
                                                    l6457 02F1  
                                                    l6449 02DC  
                                                    l6393 025D  
                                                    l6385 0251  
                                                    l6377 023C  
                                                    l6297 015F  
                                                    l6289 0153  
                                                    l5913 0717  
                                                    l5841 0673  
                                                    l5825 0651  
                                                    l5817 0633  
                                                    l5809 062F  
                                                    l5753 05AD  
                                                    l5745 058F  
                                                    l5737 058B  
                                                    l5729 0571  
                                                    l5681 0509  
                                                    l5673 04EB  
                                                    l5665 04E7  
                                                    l5657 04CD  
                                                    l5649 04C0  
                                                    l5593 043C  
                                                    l5585 0412  
                                                    l5577 03FA  
                                                    l5497 033B  
                                                    l6721 08A3  
                                                    l4699 150D  
                                                    l4795 13CD  
                                                    l4867 09DF  
                                                    l4859 09D8  
                                                    l4779 13DF  
                                                    l4947 16D4  
                                                    l4963 16FF  
                                                    l4971 1481  
                                                    l6467 0304  
                                                    l6395 0264  
                                                    l6379 0241  
                                                    l6299 0166  
                                                    l5931 0740  
                                                    l5915 071E  
                                                    l5907 0700  
                                                    l5843 067A  
                                                    l5835 065C  
                                                    l5827 0658  
                                                    l5819 063E  
                                                    l5771 05D6  
                                                    l5763 05B8  
                                                    l5755 05B4  
                                                    l5747 059A  
                                                    l5739 058D  
                                                    l5691 0514  
                                                    l5683 0510  
                                                    l5675 04F6  
                                                    l5667 04E9  
                                                    l5659 04D4  
                                                    l5595 0443  
                                                    l5587 0419  
                                                    l5579 0401  
                                                    l5499 0342  
                                                    l6731 08C5  
                                                    l6723 08B1  
                                                    l4789 1395  
                                                    l4893 1717  
                                                    l4797 13CF  
                                                    l4877 09E7  
                                                    l4885 140C  
                                                    l4965 1702  
                                                    l4957 16EF  
                                                    l4973 1484  
                                                    l4981 14A4  
                                                    l6469 0309  
                                                    l6397 0269  
                                                    l5933 0747  
                                                    l5925 0729  
                                                    l5917 0725  
                                                    l5909 070B  
                                                    l5861 06A3  
                                                    l5853 0685  
                                                    l5845 0681  
                                                    l5837 0667  
                                                    l5829 065A  
                                                    l5781 05E1  
                                                    l5773 05DD  
                                                    l5765 05C3  
                                                    l5757 05B6  
                                                    l5749 05A1  
                                                    l5693 051F  
                                                    l5685 0512  
                                                    l5677 04FD  
                                                    l5597 0445  
                                                    l5589 0431  
                                                    l6733 08C8  
                                                    l6725 08BA  
                                                    l4991 139A  
                                                    l4967 13A0  
                                                    l4895 171A  
                                                    l4799 13D0  
                                                    l4887 140E  
                                                    l4959 16F2  
                                                    l4975 1487  
                                                    l4983 14A5  
                                                    l6399 0270  
                                                    l5951 0770  
                                                    l5943 0752  
                                                    l5935 074E  
                                                    l5927 0734  
                                                    l5919 0727  
                                                    l5871 06AE  
                                                    l5863 06AA  
                                                    l5855 0690  
                                                    l5847 0683  
                                                    l5839 066E  
                                                    l5791 0606  
                                                    l5783 05EC  
                                                    l5775 05DF  
                                                    l5767 05CA  
                                                    l5695 0526  
                                                    l5679 0502  
                                                    l6735 08CB  
                                                    l6727 08BE  
                                                    l6719 08A0  
                                                    l4889 1411  
                                                    l4969 1480  
                                                    l4993 162B  
                                                    l4985 14A7  
                                                    l4977 149B  
                                                    l5961 077B  
                                                    l5953 0777  
                                                    l5945 075D  
                                                    l5937 0750  
                                                    l5929 073B  
                                                    l5881 06D3  
                                                    l5873 06B9  
                                                    l5865 06AC  
                                                    l5857 0697  
                                                    l5793 0608  
                                                    l5785 05F3  
                                                    l5769 05CF  
                                                    l5697 052B  
                                                    l6737 08CE  
                                                    l6729 08C2  
                                                    l4899 171E  
                                                    l4995 1632  
                                                    l4979 14A0  
                                                    l5971 079C  
                                                    l5963 0786  
                                                    l5955 0779  
                                                    l5947 0764  
                                                    l5891 06E2  
                                                    l5883 06D5  
                                                    l5875 06C0  
                                                    l5859 069C  
                                                    l5787 05F8  
                                                    l5699 0532  
                                                    l6739 08D1  
                                                    l4989 139D  
                                                    l4997 1633  
                                                    l5981 155A  
                                                    l5965 078D  
                                                    l5949 0769  
                                                    l5893 06E9  
                                                    l5877 06C5  
                                                    l5789 05FF  
                                                    l4999 1634  
                                                    l5991 145F  
                                                    l5983 155D  
                                                    l5967 0792  
                                                    l5895 06EE  
                                                    l5879 06CC  
                                                    l5799 060A  
                                                    l6881 1762  
                                                    l5993 1461  
                                                    l5985 1560  
                                                    l5977 1554  
                                                    l5969 0799  
                                                    l5897 06F5  
                                                    l5889 06D7  
                                                    l6883 16E6  
                                                    l5995 1462  
                                                    l5987 1563  
                                                    l5979 1557  
                                                    l5899 06FC  
                                                    l6885 09F5  
                                                    l5997 1463  
                                                    l5989 145C  
                                                    l6887 0AC4  
                                                    l5999 1464  
                                                    l6889 1735  
                                                    u2000 165D  
                                                    u2001 165C  
                                                    u2010 0843  
                                                    u2011 0842  
                                                    u2100 0B4E  
                                                    u2020 0849  
                                                    u2101 0B4D  
                                                    u2021 0848  
                                                    u2110 0341  
                                                    u2030 0864  
                                                    u2111 0340  
                                                    u2031 0863  
                                                    u2040 000F  
                                                    u2200 0464  
                                                    u2120 036A  
                                                    u2041 000E  
                                                    u2201 0463  
                                                    u2121 0369  
                                                    u2210 0469  
                                                    u2130 0393  
                                                    u2211 0468  
                                                    u2131 0392  
                                                    u2300 05AC  
                                                    u2220 0470  
                                                    u2140 03BC  
                                                    u2301 05AB  
                                                    u2221 046F  
                                                    u2141 03BB  
                                                    _LATA 0016  
                                                    u2310 05D5  
                                                    u2230 047F  
                                                    u2150 03C7  
                                                    u2070 0982  
                                                    _LATB 0017  
                                                    u2311 05D4  
                                                    u2231 047E  
                                                    u2151 03C6  
                                                    u2071 0981  
                                                    _LATC 0018  
                                                    u2080 0AFA  
                                                    u2400 0746  
                                                    u2320 05FE  
                                                    u2240 04B6  
                                                    u2160 03FA  
                                                    u2081 0AF9  
                                                    u2401 0745  
                                                    u2321 05FD  
                                                    u2241 04B5  
                                                    u2161 03F9  
                                                    u2090 0B23  
                                                    u2410 076F  
                                                    u2330 0627  
                                                    u2250 04DF  
                                                    u2170 040C  
                                                    u2091 0B22  
                                                    u2411 076E  
                                                    u2331 0626  
                                                    u2251 04DE  
                                                    u2171 040B  
                                                    u1700 16F7  
                                                    u2420 0798  
                                                    u2340 0650  
                                                    u2260 0508  
                                                    u2180 0412  
                                                    u2500 0C6E  
                                                    u1701 16F6  
                                                    u2421 0797  
                                                    u2341 064F  
                                                    u2261 0507  
                                                    u2181 0411  
                                                    u2501 0C6D  
                                                    u1710 16FF  
                                                    u2510 0D9C  
                                                    u2350 0679  
                                                    u2270 0531  
                                                    u2190 043B  
                                                    u2430 0C1C  
                                                    u1711 16FE  
                                                    u2511 0D9B  
                                                    u2351 0678  
                                                    u2271 0530  
                                                    u2191 043A  
                                                    u2431 0C1B  
                                                    u1640 16AA  
                                                    u1720 148C  
                                                    u1800 1553  
                                                    u2600 0E1F  
                                                    u2520 0DA0  
                                                    u2360 06A2  
                                                    u2280 055A  
                                                    u2440 0C2D  
                                                    u3160 08BA  
                                                    u1641 16A9  
                                                    u1721 148B  
                                                    u1801 1552  
                                                    u2601 0E1E  
                                                    u2521 0D9F  
                                                    u2361 06A1  
                                                    u2281 0559  
                                                    u2441 0C2C  
                                                    u3161 08B9  
                                                    u1650 1493  
                                                    u1730 14A0  
                                                    u1810 1695  
                                                    u2530 0DB6  
                                                    u2610 15FA  
                                                    u2370 06CB  
                                                    u2290 0583  
                                                    u2450 0C36  
                                                    u1651 1492  
                                                    u1731 149F  
                                                    u1811 1694  
                                                    u2531 0DB5  
                                                    u2611 15F9  
                                                    u2371 06CA  
                                                    u2291 0582  
                                                    u2451 0C35  
                                                    u1660 0AA4  
                                                    u1740 1632  
                                                    u1820 16A2  
                                                    u2540 0DD1  
                                                    u2700 0BA1  
                                                    u2620 1603  
                                                    u2380 06F4  
                                                    u2460 0C43  
                                                    u1661 0AA3  
                                                    u1741 1631  
                                                    u1821 16A1  
                                                    u2541 0DD0  
                                                    u2701 0BA0  
                                                    u2621 1602  
                                                    u2381 06F3  
                                                    u2461 0C42  
                                                    u1670 0AEB  
                                                    u1750 1639  
                                                    u1910 0D4F  
                                                    u1830 166A  
                                                    u2550 0DE8  
                                                    u2710 0BA7  
                                                    u2630 0B5B  
                                                    u2390 071D  
                                                    u2470 0C57  
                                                    u1671 0AEA  
                                                    u1751 1638  
                                                    u1911 0D4E  
                                                    u1831 1669  
                                                    u2551 0DE7  
                                                    u2711 0BA6  
                                                    u2631 0B5A  
                                                    u2391 071C  
                                                    u2471 0C56  
                                                    u1680 09D8  
                                                    u1760 0872  
                                                    u2800 01A0  
                                                    u2720 0081  
                                                    u2560 0DF1  
                                                    u2640 0B6C  
                                                    u2480 0C60  
                                                    u1681 09D7  
                                                    u1761 0871  
                                                    u3177 1544  
                                                    u1905 0D41  
                                                    u2801 019F  
                                                    u2721 0080  
                                                    u2561 0DF0  
                                                    u2641 0B6B  
                                                    u2481 0C5F  
                                                    u1770 159B  
                                                    u1690 1405  
                                                    u1930 0D68  
                                                    u2810 01F7  
                                                    u2730 00A9  
                                                    u2570 0DFF  
                                                    u2650 0B70  
                                                    u2490 0C66  
                                                    u1771 159A  
                                                    u1691 1404  
                                                    u1931 0D67  
                                                    u2811 01F6  
                                                    u2731 00A8  
                                                    u2571 0DFE  
                                                    u2651 0B6F  
                                                    u2491 0C65  
                                                    u1780 17AB  
                                                    u1860 167E  
                                                    u2820 021F  
                                                    u2740 00D1  
                                                    u2580 0E08  
                                                    u2660 0B75  
                                                    u1781 17AA  
                                                    u1925 0D50  
                                                    u1861 167D  
                                                    u1845 166F  
                                                    u2821 021E  
                                                    u2741 00D0  
                                                    u2581 0E07  
                                                    u2661 0B74  
                                                    u1790 17CE  
                                                    u1950 0D7E  
                                                    u1870 0D0D  
                                                    u2830 0247  
                                                    u2750 00F9  
                                                    u2590 0E16  
                                                    u2670 0B7B  
                                                    u1791 17CD  
                                                    u1951 0D7D  
                                                    u1935 0D64  
                                                    u1871 0D0C  
                                                    u1855 1674  
                                                    u2831 0246  
                                                    u2751 00F8  
                                                    u2591 0E15  
                                                    u2671 0B7A  
                                                    u1960 0D83  
                                                    u1880 0D1E  
                                                    u2840 026F  
                                                    u2760 0121  
                                                    u2680 0B91  
                                                    u1961 0D82  
                                                    u1945 0D72  
                                                    u1881 0D1D  
                                                    u2841 026E  
                                                    u2761 0120  
                                                    u2681 0B90  
                                                    u1890 0D3D  
                                                    u1970 0CFD  
                                                    u2850 0297  
                                                    u2770 0149  
                                                    u2690 0B96  
                                                    u1891 0D3C  
                                                    u1971 0CFC  
                                                    u2851 0296  
                                                    u2771 0148  
                                                    u2691 0B95  
                                                    u2860 02BF  
                                                    u2780 0171  
                                                    u1980 0A58  
                                                    _PMD0 0796  
                                                    u1973 0CF9  
                                                    u2861 02BE  
                                                    u2781 0170  
                                                    u1981 0A57  
                                                    _PMD1 0797  
                                                    u2870 02E7  
                                                    u2790 018E  
                                                    u1990 0A96  
                                                    _PMD2 0798  
                                                    u2871 02E6  
                                                    u2791 018D  
                                                    u1991 0A95  
                                                    _PMD3 0799  
                                                    u2880 030F  
                                                    _PMD4 079A  
                                                    u2881 030E  
                                                    _PMD5 079B  
                                                    u1995 0A92  
                                                    _WPUA 0F39  
                                                    _WPUB 0F44  
                                                    _WPUC 0F4F  
                                                    _WPUE 0F65  
                                 ??_wr2RegCompleteHandler 0078  
                                        ??_I2C1_MasterFsm 007A  
                          CC8531_Init_Data_Send@cmd_count 0047  
                               ??_I2C1_CallbackReturnStop 0078  
                                                    _beep 0C7B  
                                                    _main 08A0  
                                                    fsr0h 0005  
                                                    fsr1h 0007  
                                                    indf0 0000  
                                                    fsr0l 0004  
                                                    indf1 0001  
                                                    fsr1l 0006  
                                                    btemp 007E  
                                                    start 0002  
                                        ??_I2C1_SetBuffer 0072  
                            volume_control@convertedValue 003A  
                                 __end_of_power_on_buzzer 0838  
                           I2C1_CallbackReturnStop@funPtr 0077  
                    ??_rd2RegCompleteHandler@xxtofl$F2560 0078  
                     ?_wr2RegCompleteHandler@xxtofl$F2564 0077  
                    ??_wr2RegCompleteHandler@xxtofl$F2566 0078  
                     ?_rd2RegCompleteHandler@xxtofl$F2558 0077  
                           __end_of_OSCILLATOR_Initialize 143C  
                                                   ?_beep 0027  
                                         __end_of___aldiv 0D97  
                                                   _ADACQ 009D  
                                       __end_of_I2C1_Open 08A0  
                                                   _ADCAP 009B  
                                                   _ADACT 0099  
                                             ?_SPI2_Close 0070  
                                                   ?_main 0070  
                                                   _ADCLK 0098  
                                                   _ADCNT 010C  
                                                   _ADPCH 009E  
                                                   _ADREF 009A  
                                                   _ADPRE 009C  
                                                   _ADRPT 010D  
                               TLV320AIC32_config@retcode 0029  
                              __end_of_i2c1_fsmStateTable 1820  
                                                   _OSCEN 0891  
                                                   _TRISA 0011  
                                                   _TRISB 0012  
                                                   _TRISC 0013  
                                  ??_I2C1_MasterGetRxData 0070  
                                   ?_I2C1_DO_RX_NACK_STOP 0070  
                              ??_I2C1_CallbackReturnReset 0078  
                                       ??_I2C1_MasterOpen 0070  
                                 ??_ADCC_IsConversionDone 0070  
                                       ??_I2C1_MasterStop 0070  
                                       ??_I2C1_Initialize 0070  
                                         _DATAEE_ReadByte 145C  
                                                   beep@i 0034  
                                ??_TLV320_SetHeadphoneVol 0023  
                                   ?_ADCC_StartConversion 0070  
                                __end_of_power_off_buzzer 1800  
                                          _charge_display 0D97  
                                                   pclath 000A  
       rd1RegCompleteHandler@i2c1_master_example$F264@ptr 0077  
       wr1RegCompleteHandler@i2c1_master_example$F281@ptr 0077  
       rd2RegCompleteHandler@i2c1_master_example$F275@ptr 0077  
       wr2RegCompleteHandler@i2c1_master_example$F287@ptr 0077  
     rdBlkRegCompleteHandler@i2c1_master_example$F298@ptr 0077  
                                                   status 0003  
                                                   wtemp0 007E  
                                            ??_I2C1_DO_RX 0078  
                                            ??_I2C1_DO_TX 0078  
                                  ??_I2C1_DO_ADDRESS_NACK 0078  
                                            ??_I2C1_Close 0070  
                                         __initialization 07A4  
                    CC8531_Init_Data_Send@check_connected 0042  
                                       ?_button_push_play 0070  
                                            __end_of_beep 0D07  
                              ??_CC8531_Polling_Data_Send 003A  
                                            __end_of_main 08D7  
                                       _SPI2_ExchangeByte 0000  
                                      ??_button_push_play 007E  
                                            ?_TLV320_Mute 0070  
                                                  ??_beep 002B  
                                  ??_I2C1_MasterOperation 007C  
                                                  ??_main 0048  
                                       TLV320_Mute@on_off 003B  
                                       TLV320_Mute@regval 003D  
                         _tlv320_volume@tlv320aic32$F2104 00B0  
                         _tlv320_volume@tlv320aic32$F2117 014E  
                         _tlv320_volume@tlv320aic32$F2047 004A  
                         _tlv320_volume@tlv320aic32$F2067 00BA  
                                            _volume_count 0069  
                                      __end_of_I2C1_DO_RX 0A04  
                                      __end_of_I2C1_DO_TX 0AEF  
                                          _count_2_Second 0068  
                                   __end_of_SPI2_ReadByte 13B5  
                                      __end_of_I2C1_Close 15AC  
                                                  _ADACCH 0091  
                                                  _ADACCL 0090  
                                  __end_of_charge_display 0E2A  
                                                  _ADCON0 0093  
                                                  _ADCON1 0094  
                                                  _ADCON2 0095  
                                                  _ADCON3 0096  
                                                  _ADERRH 0117  
                                                  _ADERRL 0116  
                                                  _ADLTHH 010F  
                                                  _ADLTHL 010E  
                                                  _ADRESH 008D  
                                                  _ADRESL 008C  
                                                  _ADSTAT 0097  
                                                  _ADUTHH 0111  
                                                  _ADUTHL 0110  
                                                  _ANSELA 0F38  
                                                  _ANSELB 0F43  
                                                  _ANSELC 0F4E  
                                                  _RB1PPS 0F19  
                                                  _RB3PPS 0F1B  
                                                  _RC3PPS 0F23  
                                                  _RC4PPS 0F24  
                                     TLV320AIC32_config@i 002D  
                                                  _ODCONA 0F3A  
                                                  _ODCONB 0F45  
                                                  _ODCONC 0F50  
                                                  _INLVLA 0F3C  
                                                  _INLVLB 0F47  
                                                  _INLVLC 0F52  
                                                  _INLVLE 0F68  
                                                  _OSCFRQ 0893  
                                      _aic32_headphoneout 1531  
                                       ?_I2C1_MasterClose 0070  
                                rdBlkRegCompleteHandler@p 0077  
                                 ??_I2C1_MasterDisableIrq 0070  
                                       ?_I2C1_MasterStart 0070  
                              ??_ADCC_GetConversionResult 0072  
                                       ?_I2C1_MasterWrite 0070  
                                ?_I2C1_MasterWaitForEvent 0070  
                                      ??_I2C1_MasterClose 0070  
                                        _I2C1_DO_TX_EMPTY 1717  
                                 TLV320AIC32_openCodec@id 002F  
                                      ??_I2C1_MasterStart 0070  
                                       __end_of_SPI2_Open 005D  
                                      ??_I2C1_MasterWrite 007E  
                                     ?_aic32_headphoneout 0070  
                                ?_I2C1_Write1ByteRegister 0020  
                                               ??___aldiv 0020  
                                        ?_power_on_buzzer 0070  
                                                  ___wmul 1664  
                                 ??_TLV320AIC32_openCodec 007E  
                                    led_control@led_state 0072  
                              __end_of_power_off_sequence 0A4F  
                                              _aic32_test 13C4  
                                ??_I2C1_DO_SEND_ADR_WRITE 0071  
                                 __end_of_DATAEE_ReadByte 1468  
                                       ?_I2C1_SetCallback 0070  
                                  ??_I2C1_DO_RX_NACK_STOP 0070  
                                            __pdataBIGRAM 221A  
                                         _ADCC_Initialize 160F  
                                   _I2C1_DO_SEND_ADR_READ 142A  
                                          _PMD_Initialize 1422  
                           ?_I2C1_SetDataCompleteCallback 0074  
                                      ??_I2C1_SetCallback 0073  
                                    ??_aic32_headphoneout 007E  
                                  ??_ADCC_StartConversion 0070  
                                        __end_of_power_on 0C10  
                                         ?_charge_display 0070  
                                 _I2C1_DO_RX_NACK_RESTART 13F0  
                                       _SYSTEM_Initialize 1554  
                          I2C1_SetDataCompleteCallback@cb 0074  
                                 __end_of__initialization 07FD  
                         I2C1_MasterOperation@returnValue 007D  
                                      ?_SYSTEM_Initialize 0070  
                                           ??_I2C1_Poller 007C  
                                 _rdBlkRegCompleteHandler 15AC  
                              __end_of_spi2_configuration 183C  
                                          __pcstackCOMMON 0070  
                                          _SPI2_ReadBlock 0000  
                                 ??_CC8531_Init_Data_Send 003A  
                                            __pidataBANK0 157D  
                                            __pidataBANK1 1771  
                                            __pidataBANK2 08D7  
                                            __pidataBANK3 0983  
                                     ??_SYSTEM_Initialize 0070  
                        __end_of_I2C1_MasterEnableRestart 13A6  
                               TLV320_SetHeadphoneVol@cmd 0024  
                                        _DATAEE_WriteByte 1646  
                                      _SPI2_ExchangeBlock 0000  
                                      _DELAY_microseconds 1683  
                                  __end_of_PMD_Initialize 142A  
                            ??_I2C1_DO_SEND_RESTART_WRITE 0070  
                                      _streaming_off_flag 0063  
                                 ??_I2C1_MasterSendTxData 0070  
                                     ?_DELAY_microseconds 0070  
                                      _key_pressed_volume 0066  
                                   __end_of_I2C1_DO_RESET 13FA  
                             ADCC_StartConversion@channel 0070  
                               __end_of_SYSTEM_Initialize 1567  
                                       ??_SPI2_Initialize 0070  
                                              __pbssBANK0 0061  
                                              __pbssBANK1 00CE  
                         __end_of_I2C1_MasterWaitForEvent 1406  
                           __end_of_rd2RegCompleteHandler 14ED  
                                      _DELAY_milliseconds 1542  
                                    I2C1_Open@returnValue 0071  
                           __end_of_wr2RegCompleteHandler 14FE  
                         __end_of_I2C1_Write1ByteRegister 17CF  
                                   _rd1RegCompleteHandler 14CB  
                                    ??_DELAY_microseconds 0072  
                                    _tlv320_streaming_off 0054  
                                       _I2C1_DO_SEND_STOP 13E1  
                                   _wr1RegCompleteHandler 14BA  
                                     ?_DELAY_milliseconds 0070  
                                              __pmaintext 08A0  
                                      ?_I2C1_DO_SEND_STOP 0070  
                                           _tlv320_volume 00C4  
                                                 ?___wmul 0070  
                                  _TLV320_SetHeadphoneVol 0949  
                                          _SPI2_WriteByte 13C0  
                                 __end_of_ADCC_Initialize 162A  
                                         _I2C1_MasterOpen 149B  
                                         _I2C1_MasterStop 13A6  
                                         _I2C1_Initialize 143C  
                                     __end_of_I2C1_Poller 148D  
                                                 _ADFLTRH 0115  
                                                 _ADFLTRL 0114  
                                                 _ADPREVH 008F  
                                                 _ADPREVL 008E  
                                                 _ADSTPTH 0113  
                                                 _ADSTPTL 0112  
                                             ?_aic32_test 0070  
                                         ?_PMD_Initialize 0070  
                                            ??_SPI2_Close 0070  
                                  ?_I2C1_DO_SEND_ADR_READ 0070  
                                     ??_I2C1_DO_SEND_STOP 0070  
                                        ?_DATAEE_ReadByte 0070  
                                       _I2C1_MasterIsNack 13FA  
                                    ??_DELAY_milliseconds 0072  
                                                 _OSCCON1 088D  
                                                 _OSCCON3 088F  
                                               _I2C1_Open 086A  
                               ??_I2C1_DO_RX_NACK_RESTART 0070  
                                                 _NVMADRH 081B  
                                                 _NVMADRL 081A  
                                                 _NVMDATH 081D  
                                                 _OSCTUNE 0892  
                                                 _NVMDATL 081C  
                                                 _NVMCON2 081F  
                                       _I2C1_MasterSetIrq 13AF  
                                                 _SSP1ADD 018D  
                                                 _SSP2ADD 0197  
                                                 _SLRCONA 0F3B  
                                                 _SLRCONB 0F46  
                                                 _SLRCONC 0F51  
                                                 _SSP1BUF 018C  
                                                 _SSP2BUF 0196  
                                      ?_I2C1_MasterIsNack 0070  
                              ?_I2C1_DO_SEND_RESTART_READ 0070  
                           __end_of_ADCC_IsConversionDone 141A  
                          ??_I2C1_SetDataCompleteCallback 0077  
                                      ?_I2C1_MasterSetIrq 0070  
                                       ?_power_off_buzzer 0070  
                                    DATAEE_WriteByte@bAdd 0070  
                                      _i2c1_fsmStateTable 1800  
                                      ??_power_off_buzzer 007E  
                                     ??_I2C1_MasterIsNack 0070  
  __end_of_rd1RegCompleteHandler@i2c1_master_example$F264 150F  
          _rd1RegCompleteHandler@i2c1_master_example$F264 14FE  
  __end_of_wr1RegCompleteHandler@i2c1_master_example$F281 1531  
          _wr1RegCompleteHandler@i2c1_master_example$F281 1520  
  __end_of_rd2RegCompleteHandler@i2c1_master_example$F275 1520  
          _rd2RegCompleteHandler@i2c1_master_example$F275 150F  
                               __end_of_I2C1_DO_SEND_STOP 13E6  
  __end_of_wr2RegCompleteHandler@i2c1_master_example$F287 14BA  
          _wr2RegCompleteHandler@i2c1_master_example$F287 14A9  
__end_of_rdBlkRegCompleteHandler@i2c1_master_example$F298 15DC  
        _rdBlkRegCompleteHandler@i2c1_master_example$F298 15C4  
                               ??_rdBlkRegCompleteHandler 0078  
                                      I2C1_SetCallback@cb 0070  
                                     ??_I2C1_MasterSetIrq 0070  
                                              _mic_detect 0B4F  
                                      __end_of_SPI2_Close 13B8  
                                  __end_of_SPI2_WriteByte 13C4  
                                                 ___aldiv 0D07  
                                               ?_power_on 0070  
                                           ?_I2C1_DO_IDLE 0070  
                                           ?_I2C1_DO_RCEN 0070  
                                                 __ptext1 0C10  
                                                 __ptext2 0949  
                                                 __ptext3 0BAF  
                                                 __ptext4 0807  
                                                 __ptext5 13C4  
                                                 __ptext6 1531  
                                                 __ptext7 0838  
                                                 __ptext8 0A4F  
                                                 __ptext9 0311  
                                _I2C1_MasterEnableRestart 13A3  
                               __end_of_I2C1_MasterIsNack 1400  
                            ?_I2C1_SetAddressNackCallback 0074  
                                   _OSCILLATOR_Initialize 1433  
                                       _tlv320_volume_up2 005C  
                               __end_of_I2C1_MasterSetIrq 13B2  
                                __end_of_I2C1_DO_TX_EMPTY 1744  
                                        ___aldiv@dividend 007A  
                                ??_PIN_MANAGER_Initialize 0070  
                                              ?_I2C1_Open 0070  
                                            beep@duration 0029  
                                ?_I2C1_CallbackReturnStop 0077  
                                                 clrloop0 1469  
                       __end_of_I2C1_DO_SEND_RESTART_READ 13D7  
                                    end_of_initialization 07FD  
                              __end_of_I2C1_MasterSendAck 13C0  
                                     _I2C1_MasterClearIrq 1397  
                                                 init_ram 1474  
                              __end_of_I2C1_MasterStartRx 13AC  
                                  ?_rd1RegCompleteHandler 0077  
                                                 initloop 1475  
                                  _I2C1_DO_SEND_ADR_WRITE 141A  
                                       __end_of_spiMaster 1834  
                            __end_of_I2C1_DO_SEND_RESTART 13E1  
                                 __end_of_I2C1_MasterOpen 14A9  
                                  ?_wr1RegCompleteHandler 0077  
                                 __end_of_I2C1_MasterStop 13A9  
                                 __end_of_I2C1_Initialize 1446  
                                             _I2C1_Poller 1480  
                               ?_I2C1_CallbackReturnReset 0077  
                           __end_of_I2C1_MasterDisableIrq 13A0  
                                             _I2C1_Status 00CE  
                                         ?_SPI2_WriteByte 0070  
                                       __end_of_power_off 160F  
                                        ___aldiv@quotient 0023  
                                              ??_power_on 007E  
                                     _I2C1_MasterSendNack 13B8  
                     __end_of_I2C1_SetAddressNackCallback 145C  
                             _I2C1_SetAddressNackCallback 1451  
                                        ?_ADCC_Initialize 0070  
                                               _SPI2_Open 0009  
                                    ?_I2C1_MasterClearIrq 0070  
                                          ??_I2C1_DO_IDLE 0070  
                                          ??_I2C1_DO_RCEN 0070  
                      __end_of_I2C1_DO_SEND_RESTART_WRITE 13DC  
                              _I2C1_DO_SEND_RESTART_WRITE 13D7  
                                               _PORTAbits 000C  
                                               _PORTBbits 000D  
                                               _PORTCbits 000E  
                         __end_of_rdBlkRegCompleteHandler 15C4  
                           __end_of_TLV320AIC32_openCodec 086A  
                                        ??_charge_display 003A  
                           ??_I2C1_SetAddressNackCallback 0077  
                             TLV320AIC32_openCodec@config 0033  
                                               _TRISBbits 0012  
                         I2C1_SetDataCompleteCallback@ptr 0076  
                             I2C1_Write1ByteRegister@data 0021  
                               ?_CC8531_Polling_Data_Send 0070  
                          I2C1_CallbackReturnReset@funPtr 0077  
                                    ?_I2C1_MasterSendNack 0070  
                                      _power_off_sequence 0A04  
                                            _MASTER0_open 0000  
                                __end_of_DATAEE_WriteByte 1664  
                                     ?_power_off_sequence 0070  
                                             ?_mic_detect 0070  
                                   ??_I2C1_MasterClearIrq 0070  
                                           ??_led_control 0070  
                                              ?_SPI2_Open 0070  
                                      SPI2_WriteByte@byte 0070  
                                           __pidataBIGRAM 0E2A  
                           __end_of_CC8531_Init_Data_Send 07A4  
                                          __end_of___wmul 1683  
                                          _I2C1_DO_RX_ACK 13E6  
                                  ?_OSCILLATOR_Initialize 0070  
                                         _SPI2_Initialize 1567  
                               ?_ADCC_GetConversionResult 0070  
                                    ??_power_off_sequence 007E  
                         __end_of_I2C1_CallbackReturnStop 1395  
                           __end_of_I2C1_MasterSendTxData 13CD  
                                      _spi2_configuration 1834  
                                     start_initialization 07A4  
                                             ??_I2C1_Open 0070  
                                      _tlv320_mic_control 0120  
                                   ??_I2C1_MasterSendNack 0070  
                                        _key_pressed_mute 0065  
                                  rd1RegCompleteHandler@p 0077  
                                     DATAEE_ReadByte@bAdd 0070  
                                I2C1_SetBuffer@bufferSize 0070  
                                        ?_I2C1_MasterOpen 0070  
                                 ?_TLV320_SetHeadphoneVol 0070  
                                        ?_I2C1_MasterStop 0070  
                          I2C1_Write1ByteRegister@address 0022  
                            TLV320AIC32_openCodec@retcode 0035  
                                        ?_I2C1_Initialize 0070  
                       CC8531_Polling_Data_Send@cmd_count 003B  
                                        ??_PMD_Initialize 0070  
                                  __end_of_I2C1_DO_RX_ACK 13EB  
                                                ??___wmul 0074  
                                  wr1RegCompleteHandler@p 0077  
                                 ??_I2C1_DO_SEND_ADR_READ 0070  
                                             __pdataBANK0 004A  
                                             __pdataBANK1 00A0  
                                             __pdataBANK2 0120  
                                             __pdataBANK3 01A0  
                                            ??_aic32_test 007E  
                                        I2C1_Open@address 0070  
                                     _cc8531_polling_data 01A0  
                                     __end_of_led_control 1771  
                                    _I2C1_DO_SEND_RESTART 13DC  
                                               ___latbits 0002  
                                           __pcstackBANK0 0020  
                                        _button_push_play 15DC  
                                           _battery_count 0064  
                                          _volume_control 0C10  
                                           _SPI2_ReadByte 13B2  
                             ??_I2C1_DO_SEND_RESTART_READ 0070  
                                          TLV320_Mute@cmd 003C  
                                    __end_of_I2C1_DO_IDLE 13D2  
                                    __end_of_I2C1_DO_RCEN 1413  
                           I2C1_SetAddressNackCallback@cb 0074  
                          __end_of_TLV320_SetHeadphoneVol 0983  
                                               __pnvBANK0 0069  
                                      __end_of_aic32_test 13C8  
                                   _rd2RegCompleteHandler 14DC  
                                            TLV320_Mute@i 003E  
                                  _PIN_MANAGER_Initialize 090F  
                                       _mic_state_choosed 0060  
                                   _wr2RegCompleteHandler 14ED  
                              ??_I2C1_MasterEnableRestart 0070  
                                          _I2C1_MasterFsm 16EF  
                                                ?___aldiv 0076  
                                 __end_of_SPI2_Initialize 157D  
                                         ?_I2C1_DO_RX_ACK 0070  
                                             ??_SPI2_Open 0070  
                                           ??_TLV320_Mute 003A  
                                         _SPI2_WriteBlock 0000  
                              __end_of_TLV320AIC32_config 0A9C  
                        SPI2_Open@spi2UniqueConfiguration 0073  
                                 _I2C1_MasterWaitForEvent 1400  
                                        _I2C1_MasterClose 139A  
                                          _I2C1_SetBuffer 148D  
                             charge_display@charger_value 003E  
                                        _I2C1_MasterStart 13A0  
                                        _I2C1_MasterWrite 0004  
                          DELAY_microseconds@microseconds 0070  
                                               _led_state 0067  
                                 _I2C1_Write1ByteRegister 179F  
                                   ?_I2C1_DO_SEND_RESTART 0070  
                                  __end_of_volume_control 0C7B  
                                       ?_I2C1_DO_TX_EMPTY 0070  
                                          ?_SPI2_ReadByte 0070  
                        __end_of_I2C1_CallbackReturnReset 1397  
                                               _key_count 0061  
                                      ??_I2C1_DO_TX_EMPTY 0078  
                                 ??_rd1RegCompleteHandler 0078  
                                       ??_power_on_buzzer 007E  
                                 ?_I2C1_DO_SEND_ADR_WRITE 0070  
                               I2C1_MasterSendTxData@data 0070  
                                        _tlv320_volume_up 00A0  
                                 ??_wr1RegCompleteHandler 0078  
                                   _ADCC_IsConversionDone 1413  
                                         ___aldiv@divisor 0076  
                                   TLV320AIC32_config@cmd 002B  
                                        _I2C1_SetCallback 16A3  
                                         ___aldiv@counter 0021  
                                        ??_SPI2_WriteByte 0071  
                                          ___wmul@product 0074  
                                                _LATAbits 0016  
                                                _LATBbits 0017  
                                                _LATCbits 0018  
                                              _I2C1_DO_RX 09C1  
                                              _I2C1_DO_TX 0A9C  
                                               clear_ram0 1468  
                                                _PIE3bits 0719  
                                              _I2C1_Close 1594  
                                            ?_I2C1_Poller 0070  
                                  __end_of_I2C1_MasterFsm 1717  
                            __end_of_I2C1_MasterGetRxData 13AF  
                                                _PIR3bits 070F  
                                               _spiMaster 1820  
                                      _I2C1_MasterSendAck 13BC  
                          DELAY_milliseconds@milliseconds 0070  
                               _I2C1_DO_SEND_RESTART_READ 13D2  
                                                _SSP1CON1 0190  
                                                _SSP1CON2 0191  
        CC8531_Init_Data_Send@check_connected_retry_count 0041  
                                                _SSP2CON1 019A  
                                                _SSP2CON2 019B  
                                  __end_of_I2C1_SetBuffer 149B  
                                                _SSP1STAT 018F  
                                                _SSP2STAT 0199  
                        __end_of_CC8531_Polling_Data_Send 0311  
                                TLV320AIC32_config@config 0025  
                    __end_of_I2C1_SetDataCompleteCallback 1451  
                            _I2C1_SetDataCompleteCallback 1446  
                                      _I2C1_MasterStartRx 13A9  
                                             _led_control 1744  
                             ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                               _power_off 15F5  
                                TLV320AIC32_config@regval 002C  
                              I2C1_Write1ByteRegister@reg 0020  
                                     ?_I2C1_MasterSendAck 0070  
                                              _ADCON0bits 0093  
                                              _ADCON1bits 0094  
                                              _ADCON2bits 0095  
                                              _ADCON3bits 0096  
                                       ___wmul@multiplier 0070  
                                ?_I2C1_DO_RX_NACK_RESTART 0070  
                                         ?_volume_control 0070  
                                     ?_I2C1_MasterStartRx 0070  
                            __end_of_I2C1_DO_ADDRESS_NACK 16EF  
                                     __end_of_TLV320_Mute 0B4F  
                                   DATAEE_WriteByte@bData 0072  
                          __end_of_I2C1_DO_SEND_ADR_WRITE 1422  
                                           _I2C1_DO_RESET 13F5  
                                   I2C1_Close@returnValue 0070  
                                ?_rdBlkRegCompleteHandler 0077  
                                       ?_DATAEE_WriteByte 0070  
                                     I2C1_SetCallback@idx 0073  
                                     I2C1_SetCallback@ptr 0072  
                     ?_wr1RegCompleteHandler@xxtofl$F2543 0077  
                     ?_rd1RegCompleteHandler@xxtofl$F2552 0077  
                    ??_wr1RegCompleteHandler@xxtofl$F2545 0078  
                    ??_rd1RegCompleteHandler@xxtofl$F2554 0078  
                   ?_rdBlkRegCompleteHandler@xxtofl$F2570 0077  
                  ??_rdBlkRegCompleteHandler@xxtofl$F2572 0078  
                                    ??_I2C1_MasterSendAck 0070  
                                  ?_rd2RegCompleteHandler 0077  
                                      ??_DATAEE_WriteByte 0073  
                            __end_of_I2C1_MasterOperation 1646  
                                            ??_mic_detect 007E  
                                  ?_wr2RegCompleteHandler 0077  
                                        _cc8531_init_data 2312  
                                    ??_I2C1_MasterStartRx 0070  
                                              _ADSTATbits 0097  
                        __end_of_ADCC_GetConversionResult 140C  
                                         ?_I2C1_MasterFsm 0070  
                            TLV320_SetHeadphoneVol@regval 0025  
                               ??_I2C1_MasterWaitForEvent 0070  
                            TLV320_SetHeadphoneVol@volume 0026  
                                           beep@beepDelay 0036  
                                   _I2C1_MasterDisableIrq 139D  
                                        ?_SPI2_Initialize 0070  
                                 ??_OSCILLATOR_Initialize 0070  
                                         ?_I2C1_SetBuffer 0070  
                               ??_I2C1_Write1ByteRegister 007E  
                                              ?_power_off 0070  
                                  ??_I2C1_DO_SEND_RESTART 0070  
                                         ??_SPI2_ReadByte 0070  
                                   _TLV320AIC32_openCodec 0838  
                                  CC8531_Init_Data_Send@i 0043  
                                          ?_I2C1_DO_RESET 0070  
                                      __end_of_mic_detect 0BAF  
                                                __ptext10 13B5  
                                                __ptext11 15F5  
                                                __ptext20 1567  
                                                __ptext12 0B4F  
                                                __ptext21 1422  
                                                __ptext13 0AEF  
                                                __ptext30 0C7B  
                                                __ptext22 090F  
                                                __ptext14 15DC  
                                                __ptext31 1664  
                                                __ptext23 1433  
                                                __ptext15 0D97  
                                                __ptext40 179F  
                                                __ptext32 0D07  
                                                __ptext24 143C  
                                                __ptext16 0800  
                                                __ptext41 1451  
                                                __ptext33 1542  
                                                __ptext25 160F  
                                                __ptext17 1413  
                                                __ptext50 13F5  
                                                __ptext42 086A  
                                                __ptext34 1683  
                                                __ptext26 145C  
                                                __ptext18 1406  
                                                __ptext51 13F0  
                                                __ptext43 149B  
                                                __ptext35 1744  
                                                __ptext27 005D  
                                                __ptext19 1554  
                                                __ptext60 0A9C  
                                                __ptext52 13EB  
                                                __ptext44 0004  
                                                __ptext36 1646  
                                                __ptext28 0A04  
                                                __ptext61 141A  
                                                __ptext53 13E6  
                                                __ptext45 162A  
                                                __ptext37 13C0  
                                                __ptext29 17CF  
                                                __ptext70 13B8  
                                                __ptext62 142A  
                                                __ptext54 13E1  
                                                __ptext46 1480  
                                                __ptext38 13B2  
                                                __ptext71 13A9  
                                                __ptext63 13CD  
                                                __ptext55 13DC  
                                                __ptext47 1400  
                                                __ptext39 0009  
                                                __ptext80 14DC  
                                                __ptext72 1395  
                                                __ptext64 1717  
                                                __ptext56 13D7  
                                                __ptext48 16EF  
                                                __ptext81 14CB  
                                                __ptext73 1393  
                                                __ptext65 13AF  
                                                __ptext57 13D2  
                                                __ptext49 16C7  
                                                __ptext90 1594  
                                                __ptext82 14BA  
                                                __ptext74 15C4  
                                                __ptext66 13FA  
                                                __ptext58 140C  
                                                __ptext91 139D  
                                                __ptext83 14A9  
                                                __ptext75 1520  
                                                __ptext67 13C8  
                                                __ptext59 09C1  
                                                __ptext92 139A  
                                                __ptext84 1446  
                                                __ptext76 150F  
                                                __ptext68 13BC  
                                                __ptext93 1397  
                                                __ptext85 16A3  
                                                __ptext77 14FE  
                                                __ptext69 13AC  
                                                __ptext86 148D  
                                                __ptext78 15AC  
                                                __ptext87 13A6  
                                                __ptext79 14ED  
                                                __ptext88 13A3  
                                                __ptext89 13A0  
                                            _SSP1CON1bits 0190  
                                            _SSP1CON2bits 0191  
                                                beep@note 0027  
                                                beep@time 0030  
                              charge_display@charger_temp 003C  
                                  ?_ADCC_IsConversionDone 0070  
                                            _SSP2CON1bits 019A  
                             DATAEE_WriteByte@GIEBitValue 0073  
                                _I2C1_CallbackReturnReset 1395  
                                             ?_I2C1_DO_RX 0070  
                                             ?_I2C1_DO_TX 0070  
                                      _tlv320_volume_down 0142  
                                       ??_DATAEE_ReadByte 0072  
                             __end_of_I2C1_MasterClearIrq 139A  
                            __end_of_I2C1_DO_RX_NACK_STOP 13F0  
                                             ?_I2C1_Close 0070  
                                __end_of_button_push_play 15F5  
                                 TLV320AIC32_config@aic32 0023  
                            __end_of_ADCC_StartConversion 0807  
                                        _power_off_buzzer 17CF  
                                                _power_on 0BAF  
                         __end_of_I2C1_DO_RX_NACK_RESTART 13F5  
                                I2C1_MasterOperation@read 007C  
                              mic_detect@mic_detect_value 003F  
                                            _SSP1STATbits 018F  
                                             _TLV320_Mute 0AEF  
                           __end_of_I2C1_DO_SEND_ADR_READ 1433  
                                            _I2C1_DO_IDLE 13CD  
                                            _I2C1_DO_RCEN 140C  
                                   _CC8531_Init_Data_Send 0311  
                             __end_of_I2C1_MasterSendNack 13BC  
                                _CC8531_Polling_Data_Send 005D  
                              __end_of_aic32_headphoneout 1542  
                                              _INTCONbits 000B  
                                             _NVMCON1bits 081E  
                          I2C1_SetAddressNackCallback@ptr 0076  
                                    _I2C1_MasterGetRxData 13AC  
                                   _I2C1_MasterSendTxData 13C8  
                                __end_of_I2C1_MasterClose 139D  
                                  rd2RegCompleteHandler@p 0077  
                                 ?_PIN_MANAGER_Initialize 0070  
                                __end_of_I2C1_MasterStart 13A3  
                                 TLV320_SetHeadphoneVol@i 0027  
                                __end_of_I2C1_MasterWrite 0009  
                                        ??_I2C1_DO_RX_ACK 0070  
                                 _I2C1_CallbackReturnStop 1393  
                                    _I2C1_DO_ADDRESS_NACK 16C7  
                                  ?_I2C1_MasterDisableIrq 0070  
                                  wr2RegCompleteHandler@p 0077  
                                _ADCC_GetConversionResult 1406  
                                             ??_power_off 007E  
                                           __pstringtext1 1800  
                                           __pstringtext2 1820  
                                           __pstringtext3 1834  
                                __end_of_I2C1_SetCallback 16C7  
                                              _SPI2_Close 13B5  
                                         _power_on_buzzer 0807  
                                  ?_TLV320AIC32_openCodec 002F  
                                              _SSP1DATPPS 0EC6  
                                              _SSP2DATPPS 0EC9  
                                              _SSP1CLKPPS 0EC5  
                                         ??_I2C1_DO_RESET 0070  
                                              _SSP2CLKPPS 0EC8  
                                    _I2C1_MasterOperation 162A  
                                            ___aldiv@sign 0022  
                                   ?_I2C1_MasterGetRxData 0070  
                                        _aic32config_page 221A  
                                      _TLV320AIC32_config 0A4F  
                          __end_of_PIN_MANAGER_Initialize 0949  
                                       ??_ADCC_Initialize 0070  
                           __end_of_rd1RegCompleteHandler 14DC  
                              __end_of_DELAY_microseconds 16A3  
                           __end_of_wr1RegCompleteHandler 14CB  
                                     ?_TLV320AIC32_config 0023  
                             CC8531_Init_Data_Send@i_2032 0045  
                                   ?_I2C1_DO_ADDRESS_NACK 0070  
